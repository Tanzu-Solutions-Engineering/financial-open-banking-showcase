openapi: 3.0.3
info:
  title: Finicity APIs
  description: >-
    OpenAPI specification for Finicity APIs


    ![](https://raw.githubusercontent.com/Mastercard/finicity-openapi/main/res/logo.png)
  contact:
    name: Finicity
    email: business.development@finicity.com
    url: 'https://www.finicity.com/contact/'
  version: 1.13.4
servers:
  - url: 'https://api.finicity.com'
    description: Production
tags:
  - name: Accounts
    description: Fetch or refresh customer accounts
  - name: 'Accounts (Simple)'
    description: Fetch simple customer accounts
  - name: Account Validation Assistance
    description: Micro entries and account verification
  - name: App Registration
    description: Register and assign apps to customers
  - name: Assets
    description: Download asset files
  - name: Authentication
    description: Generate authentication tokens and manage credentials
  - name: Balance Analytics
    description: Balance Analytics for businesses
  - name: Bank Statements
    description: Fetch account statements and generate reports asynchronously
  - name: Cash Flow
    description: Generate cash flow reports asynchronously
  - name: Cash Flow Analytics
    description: Cash Flow Analytics for business
  - name: Connect 🔗
    description:
      Allow customers to log into their financial institutions and grant
      Finicity authorization
  - name: Consumers
    description:
      Create and manage consumers associated with customers in order to use
      report services
  - name: Customers
    description: Enroll and manage customers
  - name: Institutions
    description: Search and fetch financial institutions
  - name: Pay Statements
    description: Upload pay statements
  - name: Payments
    description: Fetch ACH details and account balances
  - name: Portfolios
    description: Generate portfolios of the most recent reports
  - name: Reports
    description: Fetch generated reports when ready
  - name: Third Party Access
    description: Generate and manage access keys for other partners
  - name: Transactions
    description:
      Fetch customer and account transactions and generate reports
      asynchronously
  - name: TxPush
    description: Manage TxPush subscriptions
  - name: Verify Assets
    description: Generate asset reports asynchronously
  - name: Verify Income and Employment
    description: Generate income and employment reports asynchronously
security:
  - FinicityAppKey: []
    FinicityAppToken: []
paths:
  /aggregation/v2/partners/authentication:
    post:
      tags:
        - Authentication
      summary: Create Access Token
      description: >-
        Send Partner ID and Partner Secret to the Partner Authentication service
        to obtain a token for accessing Finicity APIs.

        * The token is valid for two hours and is required on all calls to the
        Finicity APIs

        * As a best practice, use a single token for all calls. Assign a
        timestamp for each token, and then check the current timestamp before
        making any calls. If the token is greater than 90 minutes, generate a
        new one.

        * ⚠️ After five failed attempts to authenticate, your account will be
        locked. Contact [support@finicity.com](mailto:support@finicity.com) to
        get help resetting your account.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: CreateToken
      requestBody:
        $ref: '#/components/requestBodies/CreateTokenRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateTokenResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/AuthenticationUnauthorizedErrorResponse'
      security:
        - FinicityAppKey: []
    put:
      tags:
        - Authentication
      summary: Modify Partner Secret
      description: >-
        Change the Partner Secret used to authenticate this partner.


        The secret does not expire, but can be changed by calling this API. A
        valid Partner Secret may contain upper and lowercase characters,
        numbers, and the characters !, @, #, $, %, &, *, _, -, +. It must
        include at least one number and at least one letter, and its length
        should be between 12 and 255 characters.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: ModifyPartnerSecret
      requestBody:
        $ref: '#/components/requestBodies/ModifyPartnerSecretRequest'
      responses:
        '204':
          $ref: '#/components/responses/ModifyPartnerSecretResponse'
        '400':
          $ref: '#/components/responses/ModifyPartnerSecretBadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/AuthenticationUnauthorizedErrorResponse'
      security:
        - FinicityAppKey: []
  /connect/v2/generate:
    post:
      tags:
        - Connect 🔗
      summary: Generate Connect URL
      description: >-
        Generate a Connect 2.0 URL link to add within your own applications.


        In option, use the `experience` parameter to call Connect (per session)
        in the body of the request. Configure the `experience` parameter to
        change the brand color, logo, icon, which credit decisioning report to
        generate when the Connect application completes, and more.


        Note: contact your Sales Account Team to set up the `experience`
        parameter.


        MVS Developers: You can pre-populate the consumer's SSN on the "Find
        employment records" page at the beginning of the MVS payroll app. Pass
        the SSN value for the consumer in the body of the request call.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GenerateConnectUrl
      requestBody:
        $ref: '#/components/requestBodies/GenerateConnectUrlRequest'
      responses:
        '200':
          $ref: '#/components/responses/GenerateConnectUrlResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  /connect/v2/generate/lite:
    post:
      tags:
        - Connect 🔗
      summary: Generate Lite Connect URL
      description: >-
        Connect Lite is a variation of Connect Full (`POST
        /connect/v2/generate`), which has a limited set of features.

        * Sign in, user's credentials, and Multi-Factor Authentication (MFA)

        * No user account management


        The Connect Web SDK isn't a requirement when using Connect lite.
        However, if you want to use the SDK events, routes, and user events,
        then you must integrate with the Connect Web SDK.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GenerateLiteConnectUrl
      requestBody:
        $ref: '#/components/requestBodies/GenerateLiteConnectUrlRequest'
      responses:
        '200':
          $ref: '#/components/responses/GenerateConnectUrlResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  /connect/v2/generate/fix:
    post:
      tags:
        - Connect 🔗
      summary: Generate Fix Connect URL
      description: >-
        Use the Connect Fix API when the following conditions occur:

        * The connection to the user's financial institution is lost

        * The user's credentials were updated (for any number of reasons)

        * The user's MFA challenge has expired


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GenerateFixConnectUrl
      requestBody:
        $ref: '#/components/requestBodies/GenerateFixConnectUrlRequest'
      responses:
        '200':
          $ref: '#/components/responses/GenerateConnectUrlResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  /connect/v2/send/email:
    post:
      tags:
        - Connect 🔗
      summary: Send Connect Email
      description: >-
        Same as Connect Full (`POST /connect/v2/generate`) but send a Connect
        email to a consumer.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: SendConnectEmail
      requestBody:
        $ref: '#/components/requestBodies/SendConnectEmailRequest'
      responses:
        '200':
          $ref: '#/components/responses/SendConnectEmailResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  /connect/v2/generate/jointBorrower:
    post:
      tags:
        - Connect 🔗
      summary: Generate Connect URL - Joint Borrower
      description: >-
        Same as Connect Full (`POST /connect/v2/generate`) but for joint
        borrowers.


        MVS prompts both the primary and joint borrower to enter each of their
        financial, payroll, and paystub information in the same Connect session.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GenerateJointBorrowerConnectUrl
      requestBody:
        $ref: '#/components/requestBodies/GenerateJointBorrowerConnectUrlRequest'
      responses:
        '200':
          $ref: '#/components/responses/GenerateJointBorrowerConnectUrlResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  /connect/v2/generate/microentry/verify:
    post:
      tags:
        - Connect 🔗
      summary: 'Account Validation Assistant User verification of microdeposits'
      description: >-
        The UI re-engages the consumer to enter two microdeposit amounts found
        in their account and validates them.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: VerifyMicroEntryMicrodeposit
      requestBody:
        $ref: '#/components/requestBodies/MicroEntryVerifyRequest'
      responses:
        '200':
          $ref: '#/components/responses/MicroEntryVerifyUrlResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'

  /connect/v2/send/email/jointBorrower:
    post:
      tags:
        - Connect 🔗
      summary: Send Connect Email - Joint Borrower
      description: >-
        Same as Connect Joint Borrower (`POST
        /connect/v2/generate/jointBorrower`) but send a Connect email  to at
        least one of the joint borrower's email addresses. 


        When the consumer opens the email, MVS prompts both the primary and
        joint borrower to enter each of their financial, payroll, and paystub
        information in the same Connect session.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: SendJointBorrowerConnectEmail
      requestBody:
        $ref: '#/components/requestBodies/SendJointBorrowerConnectEmailRequest'
      responses:
        '200':
          $ref: '#/components/responses/SendConnectEmailResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  /aggregation/v2/customers/testing:
    post:
      tags:
        - Customers
      summary: Add Testing Customer
      description: >-
        Enroll a testing customer ([Test Drive](https://signup.finicity.com/)
        accounts).


        For using testing customers with FinBank OAuth, you must register a test
        application with your systems engineer or account manager. Then, use
        that testing `applicationId` when creating testing customers.


        Testing Customers can access FinBank profiles (except "FinBank Billable"
        profiles), and cannot access live financial institutions.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: AddTestingCustomer
      requestBody:
        $ref: '#/components/requestBodies/AddCustomerRequest'
      responses:
        '201':
          $ref: '#/components/responses/AddCustomerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  /aggregation/v2/customers/active:
    post:
      tags:
        - Customers
      summary: Add Customer
      description: >-
        Enroll an active customer, which is the actual owner of one or more
        real-world accounts. This is a billable customer.


        Active customers must use the "FinBank Billable" profiles for testing
        purposes. 


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: AddCustomer
      requestBody:
        $ref: '#/components/requestBodies/AddCustomerRequest'
      responses:
        '201':
          $ref: '#/components/responses/AddCustomerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsErrorResponse'
  /aggregation/v1/customers:
    get:
      tags:
        - Customers
      summary: Get Customers
      description: >-
        Find all customers enrolled by the current partner, where the search
        text is found in the customer's username or any combination of
        `firstName` and `lastName` fields. If no search text is provided, all
        customers will be returned.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetCustomers
      parameters:
        - $ref: '#/components/parameters/CustomerUsernameParameter'
        - $ref: '#/components/parameters/CustomerTypeParameter'
        - $ref: '#/components/parameters/CustomerSearchParameter'
        - $ref: '#/components/parameters/StartParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomersResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  '/aggregation/v1/customers/{customerId}/application':
    get:
      tags:
        - Customers
      summary: Get Customer With App Data by ID
      description: >-
        Retrieve a customer along with additional details about the OAuth
        application.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetCustomerWithAppData
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerWithAppDataResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}':
    get:
      tags:
        - Customers
      summary: Get Customer by ID
      description: >-
        Retrieve a customer by ID.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetCustomer
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
    put:
      tags:
        - Customers
      summary: Modify Customer by ID
      description: >-
        Modify an enrolled customer by ID.


        You must specify either `firstName`, `lastName`, or both in the request.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: ModifyCustomer
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/ModifyCustomerRequest'
      responses:
        '204':
          $ref: '#/components/responses/ModifyCustomerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
    delete:
      tags:
        - Customers
      summary: Delete Customer by ID
      description: >-
        Completely remove a customer from the system. This will remove the
        customer and all associated accounts and transactions.


        ⚠️ Use this service carefully! It will not pause for confirmation before
        performing the operation!


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: DeleteCustomer
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
      responses:
        '204':
          $ref: '#/components/responses/DeleteCustomerResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v1/customers/{customerId}/consumer':
    post:
      tags:
        - Consumers
      summary: Create Consumer
      description: >-
        Create a consumer record associated with the given customer. A consumer
        persists as the owner of any reports that are generated, even after the
        original customer is deleted from the system.


        A consumer must be created for the given customer before calling any of
        the Generate Report services.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: CreateConsumer
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/CreateConsumerRequest'
      responses:
        '201':
          $ref: '#/components/responses/CreateConsumerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
        '409':
          $ref: '#/components/responses/ConflictErrorResponse'
    get:
      tags:
        - Consumers
      summary: Get Consumer For Customer
      description: >-
        Get the details of a consumer record by customer ID.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetConsumerForCustomer
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetConsumerForCustomerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v1/consumers/{consumerId}':
    get:
      tags:
        - Consumers
      summary: Get Consumer by ID
      description: >-
        Get the details of a consumer record by consumer ID.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetConsumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetConsumerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
    put:
      tags:
        - Consumers
      summary: Modify Consumer by ID
      description: >-
        Modify an existing consumer. All fields are required for a consumer
        record, but individual fields for this call are optional because fields
        that are not specified will be left unchanged.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: ModifyConsumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/ModifyConsumerRequest'
      responses:
        '204':
          $ref: '#/components/responses/ModifyConsumerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/institutionLogins/{institutionLoginId}/accounts':
    get:
      tags:
        - Accounts
      summary: Get Customer Accounts by Institution Login ID
      description: >-
        Get all accounts associated with the given institution login. All
        accounts returned are accessible by a single set of credentials on a
        single institution.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetCustomerAccountsByInstitutionLogin
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/InstitutionLoginIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerAccountsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
    post:
      tags:
        - Accounts
      summary: Refresh Customer Accounts by Institution Login ID
      description: >-
        Refresh account and transaction data for all accounts associated with a
        given `institutionLoginId` with a connection to the institution.


        Client apps are not permitted to automate calls to the Refresh services.
        Active accounts are automatically refreshed by Finicity once per day.
        Because many financial institutions only post transactions once per day,
        calling Refresh repeatedly is usually a waste of resources and is not
        recommended.


        Apps may call Refresh services for a specific customer when there is a
        specific business case for the need of data that is up to date as of the
        moment. Please discuss with your account manager and systems engineer
        for further clarification.


        The recommended timeout setting for this request is 120 seconds in order
        to receive a response. However, you can terminate the connection after
        making the call the operation will still complete. You will have to pull
        the account records to check for an updated aggregation attempt date to
        know when the refresh is complete.


        Note: This service is not available for all tiers of dynamic billing.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: RefreshCustomerAccountsByInstitutionLogin
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/InstitutionLoginIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/RefreshCustomerAccountsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v2/customers/{customerId}/institutionLogins/{institutionLoginId}/accounts':
    post:
      tags:
        - Accounts
      summary:
        Refresh Customer Accounts by Institution Login ID for Dynamic Billing
      description: >-
        Refresh account and transaction data for all accounts associated with a
        given 'institutionLoginId` with a connection to the institution. Client
        apps are not permitted to automate calls to the Refresh services. Active
        accounts are automatically refreshed by Finicity once per day.


        Apps may call Refresh services for a specific customer when there is a
        specific business case for the need of data that is up to date as of the
        moment. Please discuss with your account manager and systems engineer
        for further clarification.


        Note: This service will be used for dynamic billing tiers ASD, AFD and
        ATD.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: RefreshCustomerAccountsByInstitutionLoginV2
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/InstitutionLoginIdParameter'
      responses:
        '204':
          $ref: '#/components/responses/RefreshCustomerV2AccountsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'

  '/aggregation/v1/customers/{customerId}/institutionLogins/{institutionLoginId}':
    delete:
      tags:
        - Accounts
      summary: Delete Customer Accounts by Institution Login ID
      description: >-
        Remove from Finicity aggregation the set of accounts matching the
        institution login ID.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: DeleteCustomerAccountsByInstitutionLogin
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/InstitutionLoginIdParameter'
      responses:
        '204':
          $ref: '#/components/responses/DeleteCustomerAccountsByInstitutionLoginResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v2/customers/{customerId}/accounts/{accountId}':
    get:
      tags:
        - Accounts
      summary: Get Customer Account by ID
      description: >-
        Get a customer account by ID.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetCustomerAccount
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerAccountResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/accounts/{accountId}':
    delete:
      tags:
        - Accounts
      summary: Delete Customer Account by ID
      description: >-
        Remove the given account from Finicity aggregation.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: DeleteCustomerAccount
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
      responses:
        '204':
          $ref: '#/components/responses/DeleteCustomerAccountResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/accounts':
    get:
      tags:
        - Accounts
      summary: Get Customer Accounts
      description: >-
        Get all accounts owned by the given customer.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetCustomerAccounts
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountStatusParameter'
        - $ref: '#/components/parameters/AccountTypeParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerAccountsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
    post:
      tags:
        - Accounts
      summary: Refresh Customer Accounts
      description: >-
        Refresh account and transaction data for all accounts associated with
        the  given `customerId` with a connection to the institution.


        Client apps are not permitted to automate calls to the Refresh services.
        Active accounts are automatically refreshed by Finicity once per day.
        Because many financial institutions only post transactions once per day,
        calling Refresh services repeatedly is usually a waste of resources and
        is not recommended.


        Apps may call Refresh services for a specific customer when there is a
        specific business case for the need of data that is up to date as of the
        moment. Please discuss with your account manager and systems engineer
        for further clarification.


        The recommended timeout setting for this request is 120 seconds in order
        to receive a response. However, you can terminate the connection after
        making the call the operation will still complete. You will have to pull
        the account records to check for an updated aggregation attempt date to
        know when the refresh is complete.


        Note: This service is not available for all tiers of dynamic billing.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: RefreshCustomerAccounts
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/RefreshCustomerAccountsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v2/customers/{customerId}/accounts':
    post:
      tags:
        - Accounts
      summary: Refresh Customer Accounts For Dynamic Billing
      description: >-
        Refresh account and transaction data for all accounts associated with
        the  given `customerId` with a connection to the institution.


        Client apps are not permitted to automate calls to the Refresh services.
        Active accounts are automatically refreshed by Finicity once per day.

        Apps may call Refresh services for a specific customer when there is a
        specific business case for the need of data that is up to date as of the
        moment. Please discuss with your account manager and systems engineer
        for further clarification.


        Note: This service will be used for dynamic billing tiers ASD, AFD and
        ATD.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: RefreshCustomerAccountsV2
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
      responses:
        '204':
          $ref: '#/components/responses/RefreshCustomerV2AccountsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/institutions/{institutionId}/accounts':
    get:
      tags:
        - Accounts
      summary: Get Customer Accounts by Institution ID
      description: >-
        Get all active accounts owned by the given customer at the given
        institution.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetCustomerAccountsByInstitution
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/InstitutionIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerAccountsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/institutions/{institutionId}/accounts/simple':
    get:
      tags:
        - 'Accounts (Simple)'
      summary: Get Customer Accounts by Institution ID (Simple)
      description: >-
        This API is a lighter version of Get Customer Accounts by Institution
        ID, returning only basic information of active accounts owned by the
        given customer at the given institution.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetCustomerAccountsByInstitutionSimple
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/InstitutionIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerAccountsSimpleResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/institutionLogins/{institutionLoginId}/accounts/simple':
    get:
      tags:
        - 'Accounts (Simple)'
      summary: Get Customer Accounts by Institution Login ID (Simple)
      description: >-
        This API is a lighter version of Get Customer Accounts by Institution
        Login ID, returning only basic information of all active accounts owned
        by the given customer at the given institution login ID.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetCustomerAccountsByInstitutionLoginSimple
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/InstitutionLoginIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerAccountsSimpleResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/accounts/{accountId}/simple':
    get:
      tags:
        - 'Accounts (Simple)'
      summary: Get Customer Account by ID (Simple)
      description: >-
        This API is a lighter version of Get Customer Accounts by ID, returning
        only basic information of a customer account.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetCustomerAccountSimple
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerAccountSimpleResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/accounts/simple':
    get:
      tags:
        - 'Accounts (Simple)'
      summary: Get Customer Accounts (Simple)
      description: >-
        This API is a lighter version of Get Customer Accounts, returning only
        basic information of all active customer accounts.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetCustomerAccountsSimple
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerAccountsSimpleResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'

  '/aggregation/v1/customers/{customerId}/accounts/{accountId}/transactions/historic':
    post:
      tags:
        - Transactions
      summary: Load Historic Transactions for Customer Account
      description: >-
        Connect to the account's financial institution and load up to 24 months
        of historic transactions for the account. Length of history varies by
        institution.


        This is a premium service. The billable event is a call to this service
        specifying a customer ID that has not been seen before by this service.
        (If this service is called multiple times with the same customer ID, to
        load transactions from multiple accounts, only one billable event has
        occurred.)


        The recommended timeout setting for this request is 180 seconds in order
        to receive a response. However, you can terminate the connection after
        making the call the operation will still complete. You will have to pull
        the account records to check for an updated aggregation attempt date to
        know when the refresh is complete.


        The date range sent to the institution is calculated from the account's
        `createdDate`. This means that calling this service a second time for
        the same account normally will not add any new transactions for the
        account. For this reason, a second call to this service for a known
        account ID will usually return immediately.


        In a few specific scenarios, it may be desirable to force a second
        connection to the institution for a known account ID. Some examples are:


        * The institution's policy has changed, making more transactions
        available

        * Finicity has now added a longer transaction history support for the
        institution

        * The first call encountered an error, and the resulting Aggregation
        Ticket has now been fixed by the Finicity Support Team


        In these cases, the POST request can contain the parameter `force=true`
        in the request body to force the second connection.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: LoadHistoricTransactionsForCustomerAccount
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
      responses:
        '203':
          $ref: '#/components/responses/MFAChallengeNeededResponse'
        '204':
          $ref: '#/components/responses/LoadHistoricTransactionsForCustomerAccountResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/accounts/{accountId}/owner':
    get:
      tags:
        - Payments
      summary: Get Account Owner
      description: >-
        Retrieve the names and addresses of the account owner from a financial
        institution.


        Note: this is a premium service, billable per every successful API call.


        This service retrieves account data from the institution. This usually
        returns quickly, but in some scenarios may take a few minutes to
        complete. In the event of a timeout condition, retry the call.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetAccountOwner
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetAccountOwnerResponse'
        '203':
          $ref: '#/components/responses/MFAChallengeNeededResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v3/customers/{customerId}/accounts/{accountId}/owner':
    get:
      tags:
        - Payments
      summary: Get Account Owner Details
      description: >-
        This service retrieves the account details for an account holder from an
        institution. The following data objects are available.


        * Account holders


        * Addresses


        * Emails


        * Phones


        * Documentations


        * Identity Insights



        Note: The data returned varies from institution to institution as not
        all of them make the same data available. This is a premium service,
        billable per each successful API call.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetAccountOwnerDetails
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
        - $ref: '#/components/parameters/WithInsightsParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetAccountOwnerDetailsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  /aggregation/v1/partners/applications:
    post:
      tags:
        - App Registration
      summary: Register App
      description: >-
        Register a new application to access financial institutions using OAuth
        connections.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: RegisterApp
      requestBody:
        $ref: '#/components/requestBodies/RegisterAppRequest'
      responses:
        '201':
          $ref: '#/components/responses/RegisterAppResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  '/aggregation/v1/partners/applications/{preAppId}':
    put:
      tags:
        - App Registration
      summary: Modify App Registration
      description: >-
        Update a registered application.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: ModifyAppRegistration
      parameters:
        - $ref: '#/components/parameters/PreAppIdPathParameter'
      requestBody:
        $ref: '#/components/requestBodies/ModifyAppRegistrationRequest'
      responses:
        '200':
          $ref: '#/components/responses/ModifyAppRegistrationResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  /aggregation/v2/partners/applications:
    get:
      tags:
        - App Registration
      summary: Get App Registration Status
      description: >-
        Get the status of your application registration(s).


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetAppRegistrationStatus
      parameters:
        - $ref: '#/components/parameters/PreAppIdQueryParameter'
        - $ref: '#/components/parameters/ApplicationIdQueryParameter'
        - $ref: '#/components/parameters/AppRegistrationStatusParameter'
        - $ref: '#/components/parameters/ApplicationNameParameter'
        - $ref: '#/components/parameters/SubmittedDateParameter'
        - $ref: '#/components/parameters/ModifiedDateParameter'
        - $ref: '#/components/parameters/ResultPageParameter'
        - $ref: '#/components/parameters/ResultPageSizeParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetAppRegistrationStatusResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/applications/{applicationId}':
    put:
      tags:
        - App Registration
      summary: Set Customer App ID
      description: >-
        If you have multiple applications for a single client, and you want to
        register their applications to access financial institutions using OAuth
        connections, then use this API to assign applications to an existing
        customer.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: SetCustomerAppID
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ApplicationIdPathParameter'
      responses:
        '200':
          $ref: '#/components/responses/SetCustomerAppIDResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v2/customers/{customerId}/institutionLogins/{institutionLoginId}/migration':
    put:
      tags:
        - App Registration
      summary: Migrate Institution Login Accounts
      description: >-
        The `institutionLoginId` parameter uses Finicity's internal FI mapping
        to move accounts from the current FI legacy connection to the new OAuth
        FI connection.


        This API returns a list of accounts for the given institution login ID.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: MigrateInstitutionLoginAccounts
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/InstitutionLoginIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/MigrateInstitutionLoginAccountsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  /institution/v2/certifiedInstitutions/rssd:
    get:
      tags:
        - Institutions
      summary: Get Certified Institutions With RSSD
      description: >-
        Search for certified financial institutions w/RSSD.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetCertifiedInstitutionsWithRSSD
      parameters:
        - $ref: '#/components/parameters/InstitutionSearchParameter'
        - $ref: '#/components/parameters/StartParameter'
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/ProductTypeParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCertifiedInstitutionsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  /institution/v2/institutions:
    get:
      tags:
        - Institutions
      summary: Get Institutions
      description: >-
        Search for financial institutions.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetInstitutions
      parameters:
        - $ref: '#/components/parameters/InstitutionSearchParameter'
        - $ref: '#/components/parameters/StartParameter'
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/ProductTypeParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetInstitutionsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  /institution/v2/certifiedInstitutions:
    get:
      tags:
        - Institutions
      summary: Get Certified Institutions
      description: >-
        Search for financial institutions by certified product.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetCertifiedInstitutions
      parameters:
        - $ref: '#/components/parameters/InstitutionSearchParameter'
        - $ref: '#/components/parameters/StartParameter'
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/ProductTypeParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCertifiedInstitutionsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  '/institution/v2/institutions/{institutionId}':
    get:
      tags:
        - Institutions
      summary: Get Institution by ID
      description: >-
        Get financial institution details by ID.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetInstitution
      parameters:
        - $ref: '#/components/parameters/InstitutionIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetInstitutionResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/institution/v2/institutions/{institutionId}/branding':
    get:
      tags:
        - Institutions
      summary: Get Institution Branding by ID
      description: >-
        Return the branding information for a financial institution.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetInstitutionBranding
      parameters:
        - $ref: '#/components/parameters/InstitutionIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetInstitutionBrandingResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/voa':
    post:
      tags:
        - Verify Assets
      summary: Generate VOA Report
      description: >-
        Generate a Verification of Assets (VOA) report for all checking,
        savings, money market, and investment accounts for the given customer.
        This service retrieves up to twelve months of transaction history for
        each account and uses this information to generate the VOA report.


        This is a premium service. The billing rate is the variable rate for
        Verification of Assets under the current subscription plan. The billable
        event is the successful generation of a VOA report.


        Before calling this API, a consumer must be created for the given
        customer ID (see Consumers APIs).


        If no account of type checking, savings, money market, or investment is
        found, the service will return HTTP 400 Bad Request.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GenerateVOAReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
      requestBody:
        $ref: '#/components/requestBodies/GenerateVOAReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GenerateVOAReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/voaHistory':
    post:
      tags:
        - Verify Assets
      summary: Generate VOA With Income Report
      description: >-
        Generate a Verification of Assets with Income (VOAI) report for all
        checking, savings, money market, and investment accounts for the given
        customer. This service retrieves up to 24 months of transaction history
        for each account and uses this information to generate the VOAI report.
        The report includes 1 - 6 months of all debit and credit transactions
        for asset verification. By default, the history is set to 61 days,
        however, you can change the transaction history in this section by
        setting the `fromDate` parameter. The report also includes up to 24
        months of income credit transactions (ordered by account and confidence
        level) regardless of `fromDate` for income verification.


        This is a premium service. The billable event is the successful
        generation of a VOAI report.


        Before calling this API, a consumer must be created for the given
        customer ID (see Consumers APIs).


        If no account of type checking, savings, money market, or investment is
        found, the service will return HTTP 400 Bad Request.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GenerateVOAWithIncomeReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
      requestBody:
        $ref: '#/components/requestBodies/GenerateVOAWithIncomeReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GenerateVOAWithIncomeReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/preQualVoa':
    post:
      tags:
        - Verify Assets
      summary: Generate Prequalification (CRA) Report
      description: >-
        Retrieve all checking, savings, money market, and investment accounts
        for a consumer. The account, owner information, and the number of
        insufficient funds (NSFs) for checking accounts are also provided.


        If no account of type checking, savings, money market, or investment is
        found, the service will return HTTP 400 Bad Request.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GeneratePrequalificationCRAReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
      requestBody:
        $ref: '#/components/requestBodies/GeneratePrequalificationReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GeneratePrequalificationCRAReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/assetSummary':
    post:
      tags:
        - Verify Assets
      summary: Generate Prequalification (Non-CRA) Report
      description: >-
        Retrieve all checking, savings, money market, and investment accounts
        for a customer. The account, owner information, and the number of
        insufficient funds (NSFs) for checking accounts are also provided.


        If no account type of checking, savings, money market, or investment is
        found, the service will return HTTP 400 Bad Request.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GeneratePrequalificationNonCRAReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
      requestBody:
        $ref: '#/components/requestBodies/GeneratePrequalificationReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GeneratePrequalificationNonCRAReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/voi':
    post:
      tags:
        - Verify Income and Employment
      summary: Generate VOI Report
      description: >-
        Generate a Verification of Income (VOI) report for all checking,
        savings, and money market accounts for the given customer. This service
        retrieves up to two years of transaction history for each account and
        uses this information to generate the VOI report.


        This is a premium service. The billing rate is the variable rate for
        Verification of Income under the current subscription plan. The billable
        event is the successful generation of a VOI report.


        If no account of type checking, savings, or money market is found, the
        service will return HTTP 400 Bad Request.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GenerateVOIReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
      requestBody:
        $ref: '#/components/requestBodies/GenerateVOIReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GenerateVOIReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/voePayroll':
    post:
      tags:
        - Verify Income and Employment
      summary: Generate VOE - Payroll Report
      description: >-
        Generate or refresh a VOE - Payroll report. Often used as a
        complementary report to the VOIE-Payroll report to fulfill the pre-close
        VOE requirements. It retrieves the customer's employment details and
        employment status through the payroll source without any income
        information.


        This is a premium service. The billable event is the successful
        generation of a VOE - Payroll report.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GenerateVOEPayrollReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
      requestBody:
        $ref: '#/components/requestBodies/GeneratePayrollReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GenerateVOEPayrollReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/voeTransactions':
    post:
      tags:
        - Verify Income and Employment
      summary: Generate VOE - Transactions Report
      description: >-
        Premium Service: A billable event when the API response is successful.


        MVS-Direct integration developers only.


        Used as a complimentary report to the VOA with Income and VOIE - Paystub
        (with TXVerify) reports and used to fulfill the pre-close VOE
        requirements. 


        Retrieve the latest credit transaction information from the borrower's
        connected bank accounts and groups them into income streams so that you
        can view their payment history to ensure a direct deport was made within
        the expected cadence. The report displays transaction descriptions
        without any dollar amounts so that income re-verification isn't
        necessary.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GenerateVOETransactionsReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
      requestBody:
        $ref: '#/components/requestBodies/GenerateVOETransactionsReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GenerateVOETransactionsReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/payStatement':
    post:
      tags:
        - Verify Income and Employment
      summary: Generate Pay Statement Report
      description: >-
        Generate Pay Statement Extraction Report for the given customer. This
        service accepts asset IDs of the stored pay statements to generate a Pay
        Statement Extraction Report. 


        This is a premium service. The billing rate is the variable rate for Pay
        Statement Extraction Report under the current subscription plan. The
        billable event is the successful generation of a Pay Statement
        Extraction Report.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GeneratePayStatementReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
      requestBody:
        $ref: '#/components/requestBodies/GeneratePayStatementReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GeneratePayStatementReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/voieTxVerify/withInterview':
    post:
      tags:
        - Verify Income and Employment
      summary: Generate VOIE - Paystub (with TXVerify) Report
      description: >-
        Generate a VOIE - Paystub (with TXVerify) report for all checking and
        savings under the given customer. This service retrieves up to two years
        of transaction history for the given accounts. It then uses this
        information as well as the provided paystub(s), which are passed into
        the request body as asset IDs (generated using the Store Customer Pay
        Statement API) to generate the VOIE - Paystub (with TXVerify) report.


        Note: if you are using this API to refresh the bank transactions, use
        the same asset ID from the first report. A new paystub is not required
        unless the paystub is too old for underwriting requirements. Using the
        same asset ID that was on the original report and the previously
        extracted details will be used to speed up report generation response
        time.


        This is a premium service. The billing rate is the variable rate for
        VOIE TXVerify under the current subscription plan. The billable event is
        the successful generation of a VOIE TXVerify Report.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GenerateVOIEPaystubWithTXVerifyReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
      requestBody:
        $ref: '#/components/requestBodies/GenerateVOIEPaystubWithTXVerifyReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GenerateVOIEPaystubWithTXVerifyReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/voieTxVerify/withStatement':
    post:
      tags:
        - Verify Income and Employment
      summary: Generate VOIE - Paystub Report
      description: >-
        Generate a VOIE - Paystub report. This service uses the provided
        paystub(s), which are passed into the request body as asset IDs
        (generated using the Store Customer Pay Statement API) to generate the
        VOIE - Paystub report with digitized paystub details.


        This is a premium service. The billing rate is the variable rate for
        VOIE - Paystub under the current subscription plan. The billable event
        is the successful generation of a VOIE - Paystub Report.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GenerateVOIEPaystubReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
      requestBody:
        $ref: '#/components/requestBodies/GenerateVOIEPaystubReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GenerateVOIEPaystubReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/voiePayroll':
    post:
      tags:
        - Verify Income and Employment
      summary: Generate VOIE - Payroll Report
      description: >-
        Generate or refresh a VOIE - Payroll report. For clients using the
        product via a consumer permissioning experience via Connect, the
        original VOIE - Payroll report generates when the consumer completes the
        Connect experience, and this API is only used for future report
        refreshes without reengaging the consumer.


        This is a premium service. The billable event is the successful
        generation of a VOIE - Payroll report.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: RefreshVOIEPayrollReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
      requestBody:
        $ref: '#/components/requestBodies/GeneratePayrollReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/RefreshVOIEPayrollReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/accounts/{accountId}/statement':
    get:
      tags:
        - Bank Statements
      summary: Get Customer Account Statement
      description: >-
        Retrieve the customer's bank statements in PDF format. Up to 24 months
        of history is available depending on the financial institution. Since
        this is a premium service, charges incur per each successful statement
        retrieved. 


        For certified financial institutions, statements are available for the
        following account types:

        * Checking

        * Savings

        * Money market

        * CDs

        * Investments

        * Mortgage

        * Credit cards

        * Loans

        * Line of credit

        * Student Loans


        Note: setting the timeout to 180 seconds is recommended to allow enough
        time for a response.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetCustomerAccountStatement
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
        - $ref: '#/components/parameters/StatementIndexParameter'
        - $ref: '#/components/parameters/StatementTypeParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerAccountStatementResponse'
        '203':
          $ref: '#/components/responses/MFAChallengeNeededResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/statement':
    post:
      tags:
        - Bank Statements
      summary: Generate Statement Report
      description: >-
        Generate a Statement Report report for the given accounts under the
        given customer.


        This is a premium service. A billable event will be created upon the
        successful generation of the Statement Report. 


        Before calling this API, a consumer must be created for the given
        customer ID (see Consumers APIs).


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GenerateStatementReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
      requestBody:
        $ref: '#/components/requestBodies/GenerateStatementReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GenerateStatementReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v3/customers/{customerId}/transactions':
    get:
      tags:
        - Transactions
      summary: Get All Customer Transactions
      description: >-
        Get all transactions available for this customer within the given date
        range, across all accounts. This service supports paging and sorting by
        `transactionDate` (or `postedDate` if no transaction date is provided),
        with a maximum of 1000 transactions per request.


        Standard consumer aggregation provides up to 180 days of transactions
        prior to the date each account was added to the Finicity system. To
        access older transactions, you must first call the service Load Historic
        Transactions for Account.


        There is no limit for the size of the window between `fromDate` and
        `toDate`, however, the maximum number of transactions returned on one
        page is 1000.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetAllCustomerTransactions
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/RequiredFromDateParameter'
        - $ref: '#/components/parameters/RequiredToDateParameter'
        - $ref: '#/components/parameters/StartParameter'
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/SortParameter'
        - $ref: '#/components/parameters/IncludePendingParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerTransactionsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v2/customers/{customerId}/transactions/{transactionId}':
    get:
      tags:
        - Transactions
      summary: Get Customer Transaction by ID
      description: >-
        Get details for the given transaction.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetCustomerTransaction
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/TransactionIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerTransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v4/customers/{customerId}/accounts/{accountId}/transactions':
    get:
      tags:
        - Transactions
      summary: Get Customer Account Transactions
      description: >-
        Get all transactions available for this customer account within the
        given date range. This service supports paging and sorting by
        `transactionDate` (or `postedDate` if no transaction date is provided),
        with a maximum of 1000 transactions per request.


        Standard consumer aggregation provides up to 180 days of transactions
        prior to the date each account was added to the Finicity system. To
        access older transactions, you must first call the Cash Flow
        Verification service Load Historic Transactions for Account.


        There is no limit for the size of the window between `fromDate` and
        `toDate`, however, the maximum number of transactions returned on one
        page is 1000.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetCustomerAccountTransactions
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
        - $ref: '#/components/parameters/RequiredFromDateParameter'
        - $ref: '#/components/parameters/RequiredToDateParameter'
        - $ref: '#/components/parameters/StartParameter'
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/SortParameter'
        - $ref: '#/components/parameters/IncludePendingParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerTransactionsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/transactions':
    post:
      tags:
        - Transactions
      summary: Generate Transactions Report
      description: >-
        Generate a Transaction Report for the given accounts under the given
        customer. This service retrieves up to 24 months of transaction history
        for the given customer. It then uses this information to generate the
        Transaction Report.


        This is a premium service. A billable event will be created upon the
        successful generation of the Transactions Report. 


        Before calling this API, a consumer must be created for the given
        customer ID (see Consumers APIs).


        There cannot be more than 24 months between `fromDate` and `toDate`.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GenerateTransactionsReport
      parameters:
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/RequiredToDateParameter'
        - $ref: '#/components/parameters/IncludePendingParameter'
      requestBody:
        $ref: '#/components/requestBodies/GenerateTransactionsReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GenerateTransactionsReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/payStatements':
    post:
      tags:
        - Pay Statements
      summary: Store Customer Pay Statement
      description: >-
        Upload pay statements for a customer.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: StoreCustomerPayStatement
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/StoreCustomerPayStatementRequest'
      responses:
        '200':
          $ref: '#/components/responses/StoreCustomerPayStatementResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v2/customers/{customerId}/accounts/{accountId}/loanDetails':
    get:
      tags:
        - Payments
      summary: Get Loan Payment Details
      description: >-
        Return the loan payment details of the customer for a loan-type account.


        Note: this is a premium service, billable per every successful API call.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetLoanPaymentDetails
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetLoanPaymentDetailsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v1/customers/{customerId}/portfolios/{portfolioId}':
    get:
      tags:
        - Portfolios
      summary: Get Portfolio by Customer
      description: >
        Return a portfolio of most recently generated reports for each report
        type for the given customer. If there are multiple reports that were
        generated for a report type (VOA, VOI, etc.), only the most recently
        generated report for the type will be returned.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetPortfolioByCustomer
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/PortfolioIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetPortfolioByCustomerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/accounts/{accountId}/txpush':
    post:
      tags:
        - TxPush
      summary: Subscribe to TxPush Notifications
      description: >-
        Register a client app's TxPush Listener to receive TxPush notifications
        related to the given account.


        Each call to this service will return two records, one with class
        account and one with class transaction. Account events are sent when
        values change in the account's fields (such as `balance` or
        `interestRate`). Transaction events are sent whenever a new transaction
        is posted for the account. For institutions that do not provide TxPush
        services, notifications are sent as soon as Finicity finds a new
        transaction or new account data through regular aggregation processes.


        The listener's URL must be secure (HTTPS) for any real-world account. In
        addition, the client's TxPush Listener will need to be verified. HTTP
        and HTTPS connections are only allowed on the standard ports 80 (HTTP)
        and 443 (HTTPS). The use of other ports will result with the call
        failing.


        For additional details on this process, see [TxPush Listener
        Service](https://docs.finicity.com/txpush-listener-service/).


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: SubscribeToTxPushNotifications
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
          # ID of the account whose events will be sent to the TxPush Listener
        - $ref: '#/components/parameters/AccountIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/SubscribeToTxPushNotificationsRequest'
      responses:
        '201':
          $ref: '#/components/responses/SubscribeToTxPushNotificationsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
    delete:
      tags:
        - TxPush
      summary: Disable TxPush Notifications
      description: >-
        Delete all TxPush subscriptions with their notifications for the given
        account. No more notifications will be sent for account or transaction
        events.


        For additional details on this process, see [TxPush Listener
        Service](https://docs.finicity.com/txpush-listener-service/).


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: DisableTxPushNotifications
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
          # ID of the account whose events won't be sent to the TxPush Listener
        - $ref: '#/components/parameters/AccountIdParameter'
      responses:
        '204':
          $ref: '#/components/responses/DisableTxPushNotificationsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/accounts/{accountId}/transactions':
    post:
      tags:
        - TxPush
      summary: Create TxPush Test Transaction
      description: >-
        Inject a transaction into the transaction list for a testing account.
        This allows an app to trigger TxPush notifications for the account in
        order to test the app's TxPush Listener service. This causes the
        platform to send one transaction event and one account event (showing
        that the account balance has changed). This service is only supported
        for testing accounts.


        For additional details on this process, see [TxPush Listener
        Service](https://docs.finicity.com/txpush-listener-service/).


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: CreateTxPushTestTransaction
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
          # ID of the account whose events will be sent to the TxPush Listener
        - $ref: '#/components/parameters/AccountIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/CreateTxPushTestTransactionRequest'
      responses:
        '201':
          $ref: '#/components/responses/CreateTxPushTestTransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/subscriptions/{subscriptionId}':
    delete:
      tags:
        - TxPush
      summary: Delete TxPush Subscription
      description: >-
        Delete a specific subscription to TxPush notifications for the given
        account. This could be individual deleting the account or transactions
        events. No more events will be sent for that specific subscription.


        For additional details on this process, see [TxPush Listener
        Service](https://docs.finicity.com/txpush-listener-service/).


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: DeleteTxPushSubscription
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '204':
          $ref: '#/components/responses/DeleteTxPushSubscriptionResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v1/consumers/{consumerId}/portfolios/{portfolioId}':
    get:
      tags:
        - Portfolios
      summary: Get Portfolio by Consumer
      description: >-
        Return a portfolio of most recently generated reports for each report
        type for a given consumer. If there are multiple reports that were
        generated for a report type (VOA, VOI, etc.), only the most recently
        generated report for the type will be returned.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetPortfolioByConsumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdParameter'
        - $ref: '#/components/parameters/PortfolioIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetPortfolioByConsumerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/accounts/{accountId}/details':
    get:
      tags:
        - Payments
      summary: Get Account ACH Details
      description: >-
        Return the real account number and routing number details for an ACH
        payment.


        Note: this is a premium service, billable per every successful API call.


        _Supported account types_: "checking", "savings", "moneyMarket", "loan"


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetAccountACHDetails
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetAccountACHDetailsResponse'
        '400':
          $ref: '#/components/responses/GetAccountACHDetailsBadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v3/customers/{customerId}/reports/{reportId}':
    get:
      tags:
        - Reports
      summary: Get Report by Customer and ID
      description: >-
        Get a report that has been generated by a previous call to one of the
        Generate Report services.


        The report's `status` field contains "inProgress", "failure", or
        "success". If the status shows "inProgress", the client app should wait
        20 seconds and then call this API again.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetReportByCustomer
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportIdParameter'
        - $ref: '#/components/parameters/OnBehalfOfParameter'
        - $ref: '#/components/parameters/PurposeParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v3/consumers/{consumerId}/reports/{reportId}':
    get:
      tags:
        - Reports
      summary: Get Report by Consumer and ID
      description: >-
        Get a report that has been generated by a previous call to one of the
        Generate Report services.


        The report's `status` field contains "inProgress", "failure", or
        "success". If the status shows "inProgress", the client app should wait
        20 seconds and then call this API again.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetReportByConsumer
      parameters:
        - $ref: '#/components/parameters/PurposeParameter'
        - $ref: '#/components/parameters/ConsumerIdParameter'
        - $ref: '#/components/parameters/ReportIdParameter'
        - $ref: '#/components/parameters/OnBehalfOfParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v1/customers/{customerId}/reports':
    get:
      tags:
        - Reports
      summary: Get Reports by Customer ID
      description: >-
        Get all reports that have been generated by previous calls to Generate
        Report services for the given customer.


        The `status` fields in the returned list contain "inProgress",
        "failure", or "success". If the status shows "inProgress", the client
        app should wait 20 seconds and then call this API again.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetReportsByCustomerId
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/PurposeParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetReportsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsErrorResponse'
  '/decisioning/v1/consumers/{consumerId}/reports':
    get:
      tags:
        - Reports
      summary: Get Reports by Consumer ID
      description: >-
        Get all reports that have been generated by previous calls to Generate
        Report services for the given consumer.


        The `status` fields in the returned list contain "inProgress",
        "failure", or "success". If the status shows "inProgress", the client
        app should wait 20 seconds and then call this API again.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetReportsByConsumerId
      parameters:
        - $ref: '#/components/parameters/PurposeParameter'
        - $ref: '#/components/parameters/ConsumerIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetReportsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsErrorResponse'
  '/aggregation/v1/customers/{customerId}/assets/{assetId}':
    get:
      tags:
        - Assets
      summary: Get Asset by Customer and ID
      description: >-
        Retrieve a binary file for the given asset ID.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetAssetByCustomerID
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AssetIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetAssetByCustomerIDResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/accounts/{accountId}/availableBalance/live':
    get:
      tags:
        - Payments
      summary: Get Available Balance - Live
      description: >-
        Retrieve the available and cleared account balances for a single account
        in real-time directly from a financial institution.


        Note: this is a premium service, billable per every successful API call.


        _Supported account types_: "checking", "savings", "moneyMarket", "cd"


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetAvailableBalanceLive
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetAvailableBalanceLiveResponse'
        '400':
          $ref: '#/components/responses/GetAvailableBalanceLiveBadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/accounts/{accountId}/availableBalance':
    get:
      tags:
        - Payments
      summary: Get Available Balance
      description: >-
        Retrieve the latest cached available and cleared account balances for a
        customer. Since we update and store balances throughout the day, this is
        the most accurate balance information available when a connection to a
        financial institution is unavailable or when a faster response is
        needed. Only deposit account types are supported: Checking, Savings,
        Money Market, and CD.


        Note: this is a premium service, billable per every successful API call.
        Enrollment is required.


        _Supported account types_: "checking", "savings", "moneyMarket", "cd"


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetAvailableBalance
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetAvailableBalanceResponse'
        '400':
          $ref: '#/components/responses/GetAvailableBalanceBadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/cashFlowBusiness':
    post:
      tags:
        - Cash Flow
      summary: Generate Cash Flow Report - Business
      description: >-
        Generate a Cash Flow Report (Business) report for all checking and
        savings under the given customer. This service retrieves up to two years
        of transaction history for the given account. It then uses this
        information to generate the CFR report. A consumer is not required to
        generate this report.


        This report is not provided under FCRA rules, and this report is not
        available in the Finicity Consumer Portal for the borrower to view.


        If no account type of checking or savings is found, the service will
        return HTTP 400 Bad Request.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GenerateCashFlowBusinessReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
      requestBody:
        $ref: '#/components/requestBodies/GenerateCashFlowReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GenerateCashFlowReportBusinessResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/cashFlowPersonal':
    post:
      tags:
        - Cash Flow
      summary: Generate Cash Flow Report - Personal
      description: >-
        Generate a Cash Flow Report (Personal) report for all checking and
        savings under the given customer. This service retrieves up to two years
        of transaction history for the given account. It then uses this
        information to generate the CFR report.


        This report is provided under FCRA rules, with Finicity acting as the
        CRA (Consumer Reporting Agency). If an individual account is included in
        the report - for example, with an individual acting as an personal
        guarantor on the loan - then this version of the report should be used.
        In case of an adverse action on the loan where the decision was based on
        this report, then the borrower can be referred to the [Finicity Consumer
        Portal](https://consumer.finicityreports.com) where they can view this
        report and submit a dispute if they feel any information in this report
        is inaccurate.


        Before calling this API, a consumer must be created for the given
        customer ID (see Consumers APIs).


        If no account type of checking or savings is found, the service will
        return HTTP 400 Bad Request.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GenerateCashFlowPersonalReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
      requestBody:
        $ref: '#/components/requestBodies/GenerateCashFlowReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GenerateCashFlowReportPersonalResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/microentry/v1/customers/{customerId}':
    post:
      tags:
        - Account Validation Assistance
      summary: Initiate Micro Entries
      description: >-
        Initiate the micro entries to customer's account.


        Two random micro amounts less than a dollar each will be deposited to
        provided customer's account.

          _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: InitiateMicroAmountDeposits
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/InitiateMicroAmountDepositsRequest'
      responses:
        '200':
          $ref: '#/components/responses/InitiateMicroAmountDepositsResponse'
        '400':
          $ref: '#/components/responses/InitiateMicroEntriesBadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
        '409':
          $ref: '#/components/responses/ConflictErrorResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsErrorResponse'
  '/microentry/v1/customers/{customerId}/accounts/{accountId}/amounts':
    post:
      tags:
        - Account Validation Assistance
      summary: Verify Micro Entries
      description: >-
        Verify the micro entries as received by customer in customer's account.

        Customer needs to verify the micro amounts received in customer's
        account. `customerId` and `accountId` are the identifiers of the
        customer and account  receiving the micro entries.

          _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: VerifyMicroAmountDeposits
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/VerifyMicroAmountDepositsRequest'
      responses:
        '200':
          $ref: '#/components/responses/VerifyMicroAmountDepositsResponse'
        '400':
          $ref: '#/components/responses/VerifyMicroAmountDepositsBadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/microentry/v1/customers/{customerId}/accounts/{accountId}':
    get:
      tags:
        - Account Validation Assistance
      summary: Get Micro Entries Details
      description: >-
        Fetch the micro entries details.

        `customerId` and `accountId` are the identifiers of the customer and
        account receiving the micro entries.

          _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      operationId: GetMicroDepositsDetails
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetMicroDepositsDetailsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  /analytics/balance/v1/customer/{customerId}:
    post:
      tags:
        - Balance Analytics
      summary: Generate Balance Analytics
      operationId: GenerateBalanceAnalytics
      description: >-
        Balance Analytics for Business analyzes bank balances over time to
        report metrics and identify behavior that may indicate risk.


        Calculated metrics include:

        * Current/available account balances

        * Minimum/maximum/average account balances over the requested time
          period and broken down by month

        * Daily ending balance of accounts for each day in the requested time
          period

        * Propensity of the customer's account balances to increase week over
          week

        * Number of days in the requested time period ending with a negative
          balance


        This version of the API is intended for piloting and integration testing
        your application with the Balance Analytics product. It does not adhere
        to FCRA requirements, and should not be used for production/lending
        purposes. See _Generate Balance Analytics - FCRA_ for the FCRA compliant
        version of this API.


        A successful call to this API will generate analytics and store a report
        within Finicity. The report can be retrieved via _Get Balance Analytics
        Report_ (operation: _GetObbAnalyticsReport_).


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReferenceNumberParameter'
      requestBody:
        $ref: '#/components/requestBodies/GenerateBalanceAnalyticsRequest'
      responses:
        '200':
          $ref: '#/components/responses/GenerateBalanceAnalyticsResponse'
        '400':
          $ref: '#/components/responses/ObbBadRequestResponse'
        '401':
          $ref: '#/components/responses/ObbUnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ObbAccessForbiddenResponse'
        '404':
          $ref: '#/components/responses/ObbResourceNotFoundResponse'
        '409':
          $ref: '#/components/responses/ObbResourceConflictResponse'
  /analytics/balance/v1/customer/{customerId}/fcra:
    post:
      tags:
        - Balance Analytics
      summary: Generate Balance Analytics - FCRA
      operationId: GenerateBalanceAnalyticsFcra
      description: >-
        Balance Analytics for Business analyzes bank balances over time to
        report metrics and identify behavior that may indicate risk.


        Calculated metrics include:

        * Current/available account balances

        * Minimum/maximum/average account balances over the requested time
          period and broken down by month

        * Daily ending balance of accounts for each day in the requested time
          period

        * Propensity of the customer's account balances to increase week over
          week

        * Number of days in the requested time period ending with a negative
          balance


        This version of the API is intended for production use. It maintains and
        enforces all compliance with FCRA rules and requirements.


        *Note:* this is a premium service, billable per every successful API
        call for non-testing customers.


        A successful call to this API will generate analytics and store a report
        within Finicity. The report can be retrieved via _Get Balance Analytics
        Report - FCRA_ (operation: _GetObbAnalyticsReportFCRA_).


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReferenceNumberParameter'
      requestBody:
        $ref: '#/components/requestBodies/GenerateBalanceAnalyticsFcraRequest'
      responses:
        '200':
          $ref: '#/components/responses/GenerateBalanceAnalyticsFcraResponse'
        '400':
          $ref: '#/components/responses/ObbBadRequestResponse'
        '401':
          $ref: '#/components/responses/ObbUnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ObbAccessForbiddenResponse'
        '404':
          $ref: '#/components/responses/ObbResourceNotFoundResponse'
        '409':
          $ref: '#/components/responses/ObbResourceConflictResponse'
  /analytics/cashflow/v1/customer/{customerId}:
    post:
      tags:
        - Cash Flow Analytics
      summary: Generate Cash Flow Analytics
      operationId: GenerateCashFlowAnalytics
      description: >-
        Cash Flow Analytics for Business analyzes cash flow over time to report
        metrics and identify behavior that may indicate risk.


        Calculated metrics include:

        * Average transaction value by month over the requested time period

        * Net cash flow over the requested time period and broken down by month

        * Count and report of weeks in the requested time period where there
          were zero transactions posted to the customer's accounts

        * Minimum/maximum/average/sum/count of deposits by month

        * Minimum/maximum/average/sum/count of withdrawals by month

        * Estimated amount of deposits that can be classified as business
          revenue

        * Number of transactions posted incurring a non-sufficient funds (NSF)
          fee, and net amount charged in NSF fees


        This version of the API is intended for piloting and integration testing
        your application with the Cash Flow Analytics product. It does not
        adhere to FCRA requirements, and should not be used for
        production/lending purposes. See _Generate Cash Flow Analytics - FCRA_
        for the FCRA compliant version of this API.


        A successful call to this API will generate analytics and store a report
        within Finicity. The report can be retrieved via _Get Cash Flow
        Analytics Report_ (operation: _GetCashFlowAnalyticsReport_).


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReferenceNumberParameter'
      requestBody:
        $ref: '#/components/requestBodies/GenerateCashFlowAnalyticsRequest'
      responses:
        '200':
          $ref: '#/components/responses/GenerateCashFlowAnalyticsResponse'
        '400':
          $ref: '#/components/responses/ObbBadRequestResponse'
        '401':
          $ref: '#/components/responses/ObbUnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ObbAccessForbiddenResponse'
        '404':
          $ref: '#/components/responses/ObbResourceNotFoundResponse'
        '409':
          $ref: '#/components/responses/ObbResourceConflictResponse'
  /analytics/cashflow/v1/customer/{customerId}/fcra:
    post:
      tags:
        - Cash Flow Analytics
      summary: Generate Cash Flow Analytics - FCRA
      operationId: GenerateCashFlowAnalyticsFcra
      description: >-
        Cash Flow Analytics for Business analyzes cash flow over time to report
        metrics and identify behavior that may indicate risk.


        Calculated metrics include:

        * Average transaction value by month over the requested time period

        * Net cash flow over the requested time period and broken down by month

        * Count and report of weeks in the requested time period where there
          were zero transactions posted to the customer's accounts

        * Minimum/maximum/average/sum/count of deposits by month

        * Minimum/maximum/average/sum/count of withdrawals by month

        * Estimated amount of deposits that can be classified as business
          revenue

        * Number of transactions posted incurring a non-sufficient funds (NSF)
          fee, and net amount charged in NSF fees


        This version of the API is intended for production use. It maintains and
        enforces all compliance with FCRA rules and requirements.


        *Note:* this is a premium service, billable per every successful API
        call for non-testing customers.


        A successful call to this API will generate analytics and store a report
        within Finicity. The report can be retrieved via _Get Cash Flow
        Analytics Report - FCRA_ (operation: _GetCashFlowAnalyticsReportFCRA_).


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReferenceNumberParameter'
      requestBody:
        $ref: '#/components/requestBodies/GenerateCashFlowAnalyticsFcraRequest'
      responses:
        '200':
          $ref: '#/components/responses/GenerateCashFlowAnalyticsFcraResponse'
        '400':
          $ref: '#/components/responses/ObbBadRequestResponse'
        '401':
          $ref: '#/components/responses/ObbUnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ObbAccessForbiddenResponse'
        '404':
          $ref: '#/components/responses/ObbResourceNotFoundResponse'
        '409':
          $ref: '#/components/responses/ObbResourceConflictResponse'
  /analytics/data/v1/{obb_report_id}:
    get:
      tags:
        - Balance Analytics
        - Cash Flow Analytics
      summary: Get OBB Analytics Report
      operationId: GetObbAnalyticsReport
      description: >-
        Retrieve the report saved by _Generate Balance Analytics_ or _Generate
        Cash Flow Analytics_. Requires the report ID generated by the previous
        call.


        Report data can either be retrieved as a JSON document or PDF file.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      parameters:
        - $ref: '#/components/parameters/ObbReportIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetObbAnalyticsReportResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  /analytics/data/v1/{obb_report_id}/fcra:
    get:
      tags:
        - Balance Analytics
        - Cash Flow Analytics
      summary: Get OBB Analytics Report - FCRA
      operationId: GetObbAnalyticsReportFcra
      description: >-
        Retrieve the report saved by _Generate Balance Analytics - FCRA_ or
        _Generate Cash Flow Analytics - FCRA_. Requires the report ID generated
        by the previous call.


        Report data can either be retrieved as a JSON document or PDF file.


        *Note:* this is a premium service, billable per every successful API
        call for non-testing customers.


        _Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)
      parameters:
        - $ref: '#/components/parameters/ObbReportIdParameter'
        - $ref: '#/components/parameters/RequiredPurposeParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetObbAnalyticsReportFcraResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'

  '/aggregation/v1/partners/accessKey':
    post:
      tags:
        - Third Party Access
      summary: Generate Third Party Access Key
      description: >-
        Generate access key for third party partners.

        A partner can provide access to third party partners with this access
        key.
      operationId: GenerateThirdPartyAccessKey
      requestBody:
        $ref: '#/components/requestBodies/GenerateThirdPartyAccessKeyRequest'
      responses:
        '200':
          $ref: '#/components/responses/GenerateThirdPartyAccessKeyResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/partners/accessKey/{consentReceiptId}':
    put:
      tags:
        - Third Party Access
      summary: Update Third Party Access
      description: >-
        Update access for third party partners
      operationId: UpdateThirdPartyAccessKey
      parameters:
        - $ref: '#/components/parameters/ConsentReceiptIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/UpdateThirdPartyAccessKeyRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateThirdPartyAccessKeyResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
    delete:
      tags:
        - Third Party Access
      summary: Revoke Third Party Access
      description: >-
        Revoke access of third party partners
      operationId: RevokeThirdPartyAccessKey
      parameters:
        - $ref: '#/components/parameters/ConsentReceiptIdParameter'
      responses:
        '204':
          $ref: '#/components/responses/RevokeThirdPartyAccessKeyResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
components:
  securitySchemes:
    FinicityAppKey:
      name: Finicity-App-Key
      type: apiKey
      in: header
      description: The "Finicity-App-Key" from the developer dashboard
    FinicityAppToken:
      name: Finicity-App-Token
      type: apiKey
      in: header
      description: A token returned by the `/authentication` API
  requestBodies:
    CreateTokenRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartnerCredentials'
    ModifyPartnerSecretRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartnerCredentialsWithNewSecret'
    GenerateConnectUrlRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectParameters'
    GenerateLiteConnectUrlRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LiteConnectParameters'
    GenerateFixConnectUrlRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FixConnectParameters'
    SendConnectEmailRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectEmailParameters'
    GenerateJointBorrowerConnectUrlRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectJointBorrowerParameters'
    MicroEntryVerifyRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MicroEntryVerifyRequestParameter'
    SendJointBorrowerConnectEmailRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectJointBorrowerEmailParameters'
    AddCustomerRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewCustomer'
    ModifyCustomerRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerUpdate'
    CreateConsumerRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewConsumer'
    ModifyConsumerRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConsumerUpdate'
    RegisterAppRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Application'
    ModifyAppRegistrationRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Application'
    GeneratePayrollReportRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PayrollReportConstraints'
          examples:
            GeneratePayrollReportRequestExample:
              $ref: '#/components/examples/GeneratePayrollReportRequestExample'
    GeneratePayStatementReportRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PayStatementReportConstraints'
          examples:
            GeneratePayStatementReportRequestExample:
              $ref: '#/components/examples/GeneratePayStatementReportRequestExample'
    GenerateCashFlowReportRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CashFlowReportConstraints'
          examples:
            GenerateCashFlowReportRequestExample:
              $ref: '#/components/examples/GenerateCashFlowReportRequestExample'
    GenerateTransactionsReportRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionsReportConstraints'
          examples:
            GenerateTransactionsReportRequestExample:
              $ref: '#/components/examples/GenerateTransactionsReportRequestExample'
    GenerateVOAReportRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VOAReportConstraints'
          examples:
            GenerateVOAReportRequestExample:
              $ref: '#/components/examples/GenerateVOAReportRequestExample'
    GenerateVOAWithIncomeReportRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VOAWithIncomeReportConstraints'
          examples:
            GenerateVOAWithIncomeReportRequestExample:
              $ref: '#/components/examples/GenerateVOAWithIncomeReportRequestExample'
    GeneratePrequalificationReportRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PrequalificationReportConstraints'
          examples:
            GeneratePrequalificationReportRequestExample:
              $ref: '#/components/examples/GeneratePrequalificationReportRequestExample'
    GenerateVOIReportRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VOIReportConstraints'
          examples:
            GenerateVOIReportRequestExample:
              $ref: '#/components/examples/GenerateVOIReportRequestExample'
    GenerateVOIEPaystubWithTXVerifyReportRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VOIEWithTXVerifyReportConstraints'
          examples:
            GenerateVOIEPaystubWithTXVerifyReportRequestExample:
              $ref: '#/components/examples/GenerateVOIEPaystubWithTXVerifyReportRequestExample'
    GenerateVOIEPaystubReportRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VOIEReportConstraints'
          examples:
            GenerateVOIEPaystubReportRequestExample:
              $ref: '#/components/examples/GenerateVOIEPaystubReportRequestExample'
    StoreCustomerPayStatementRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PayStatement'
    GenerateVOETransactionsReportRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VOETransactionsReportConstraints'
          examples:
            GenerateVOETransactionsReportRequestExample:
              $ref: '#/components/examples/GenerateVOETransactionsReportRequestExample'
    GenerateStatementReportRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StatementReportConstraints'
          examples:
            GenerateStatementReportRequestExample:
              $ref: '#/components/examples/GenerateStatementReportRequestExample'
    CreateTxPushTestTransactionRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TestTxPushTransaction'
    SubscribeToTxPushNotificationsRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TxPushSubscriptionParameters'
    GenerateBalanceAnalyticsRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BalanceAndCashFlowAnalyticsReportConstraints'
    GenerateBalanceAnalyticsFcraRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BalanceAndCashFlowAnalyticsReportConstraints'
    GenerateCashFlowAnalyticsRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BalanceAndCashFlowAnalyticsReportConstraints'
    GenerateCashFlowAnalyticsFcraRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BalanceAndCashFlowAnalyticsReportConstraints'
    InitiateMicroAmountDepositsRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MicroDepositInitiation'
    VerifyMicroAmountDepositsRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MicroDepositVerification'
    GenerateThirdPartyAccessKeyRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ThirdPartyAccessKeyData'
    UpdateThirdPartyAccessKeyRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ThirdPartyAccessKeyData'
  responses:
    CreateTokenResponse:
      description: The access token was successfully created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessToken'
    ModifyPartnerSecretResponse:
      description: The Partner Secret was successfully updated
    ModifyPartnerSecretBadRequestErrorResponse:
      description: The request was rejected
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            InvalidNewPartnerSecretExample:
              $ref: '#/components/examples/InvalidNewPartnerSecretExample'
            GenericBadRequestExample:
              $ref: '#/components/examples/GenericBadRequestExample'
    GenerateConnectUrlResponse:
      description: The URL link was successfully generated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectUrl'
    SendConnectEmailResponse:
      description: The URL link was successfully generated and the email sent
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectEmailUrl'
    MicroEntryVerifyUrlResponse:
      description: The URL link was successfully generated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectUrl'
    GenerateJointBorrowerConnectUrlResponse:
      description: The URL link was successfully generated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectUrl'
    AddCustomerResponse:
      description: The customer was successfully created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedCustomer'
    GetCustomersResponse:
      description: Customers were successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customers'
    GetCustomerResponse:
      description: The customer was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customer'
    GetCustomerWithAppDataResponse:
      description: The customer was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerWithAppData'
    ModifyCustomerResponse:
      description: The customer was successfully updated
    DeleteCustomerResponse:
      description: The customer was successfully deleted
    CreateConsumerResponse:
      description: The consumer was successfully created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedConsumer'
    GetConsumerForCustomerResponse:
      description: The consumer was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Consumer'
    GetConsumerResponse:
      description: The consumer was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Consumer'
    GetCustomerAccountsSimpleResponse:
      description: The account list was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerAccountsSimple'
    GetCustomerAccountSimpleResponse:
      description: The account was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerAccountSimple'
    ModifyConsumerResponse:
      description: The consumer was successfully updated
    GetCustomerAccountsResponse:
      description: The account list was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerAccounts'
    RefreshCustomerAccountsResponse:
      description: The account list was successfully refreshed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerAccounts'
    RefreshCustomerV2AccountsResponse:
      description: The account list was successfully refreshed
    DeleteCustomerAccountsByInstitutionLoginResponse:
      description: The customer accounts were successfully deleted
    DeleteCustomerAccountResponse:
      description: The customer account was successfully deleted
    LoadHistoricTransactionsForCustomerAccountResponse:
      description:
        Historic transactions have been loaded successfully. The transactions
        are now available by calling the Get Customer Account Transactions API.
    GetCustomerAccountResponse:
      description: The account was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerAccount'
    GetAccountOwnerResponse:
      description: The account owner was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountOwner'
    MFAChallengeNeededResponse:
      description:
        The response contains an MFA challenge in XML or JSON format. Contact
        your Account Manager or Systems Engineers to determine the best route to
        handle this error.
    RegisterAppResponse:
      description: The app registration was successfully created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegisteredApplication'
    SetCustomerAppIDResponse:
      description: The app was successfully assigned
    ModifyAppRegistrationResponse:
      description: The app registration was updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegisteredApplication'
    GetAppRegistrationStatusResponse:
      description: The app registration statuses were returned
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppStatuses'
    MigrateInstitutionLoginAccountsResponse:
      description: The migration succeeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerAccounts'
    GetCertifiedInstitutionsResponse:
      description: Institutions were successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CertifiedInstitutions'
    GetInstitutionResponse:
      description: Institution was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InstitutionWrapper'
    GetInstitutionsResponse:
      description: Institutions were successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Institutions'
    GetInstitutionBrandingResponse:
      description: Institution branding was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BrandingWrapper'
    GenerateVOEPayrollReportResponse:
      description:
        "The report is being generated. When finished, a notification will be
        sent to the specified callback URL (Report Listener Service) and the
        report can be fetched using Get Report APIs. If you don't use a callback
        URL, Get Report returns a minimal report with the following status:
        'inProgress'. Repeat the call every 20 seconds until Get Report returns
        a different status."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PayrollReportAck'
          examples:
            GenerateVOEPayrollReportResponseExample:
              $ref: '#/components/examples/GenerateVOEPayrollReportResponseExample'
    RefreshVOIEPayrollReportResponse:
      description:
        "The report is being generated. When finished, a notification will be
        sent to the specified callback URL (Report Listener Service) and the
        report can be fetched using Get Report APIs. If you don't use a callback
        URL, Get Report returns a minimal report with the following status:
        'inProgress'. Repeat the call every 20 seconds until Get Report returns
        a different status."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PayrollReportAck'
          examples:
            RefreshVOIEPayrollReportResponseExample:
              $ref: '#/components/examples/RefreshVOIEPayrollReportResponseExample'
    GenerateTransactionsReportResponse:
      description:
        "The report is being generated. When finished, a notification will be
        sent to the specified callback URL (Report Listener Service) and the
        report can be fetched using Get Report APIs. If you don't use a callback
        URL, Get Report returns a minimal report with the following status:
        'inProgress'. Repeat the call every 20 seconds until Get Report returns
        a different status."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionsReportAck'
          examples:
            GenerateTransactionsReportResponseExample:
              $ref: '#/components/examples/GenerateTransactionsReportResponseExample'
    GenerateVOAReportResponse:
      description:
        "The report is being generated. When finished, a notification will be
        sent to the specified callback URL (Report Listener Service) and the
        report can be fetched using Get Report APIs. If you don't use a callback
        URL, Get Report returns a minimal report with the following status:
        'inProgress'. Repeat the call every 20 seconds until Get Report returns
        a different status."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VOAReportAck'
          examples:
            GenerateVOAReportResponseExample:
              $ref: '#/components/examples/GenerateVOAReportResponseExample'
    GenerateVOAWithIncomeReportResponse:
      description:
        "The report is being generated. When finished, a notification will be
        sent to the specified callback URL (Report Listener Service) and the
        report can be fetched using Get Report APIs. If you don't use a callback
        URL, Get Report returns a minimal report with the following status:
        'inProgress'. Repeat the call every 20 seconds until Get Report returns
        a different status."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VOAWithIncomeReportAck'
          examples:
            GenerateVOAWithIncomeReportResponseExample:
              $ref: '#/components/examples/GenerateVOAWithIncomeReportResponseExample'
    GeneratePrequalificationCRAReportResponse:
      description:
        "The report is being generated. When finished, a notification will be
        sent to the specified callback URL (Report Listener Service) and the
        report can be fetched using Get Report APIs. If you don't use a callback
        URL, Get Report returns a minimal report with the following status:
        'inProgress'. Repeat the call every 20 seconds until Get Report returns
        a different status."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PrequalificationReportAck'
          examples:
            GeneratePrequalificationCRAReportResponseExample:
              $ref: '#/components/examples/GeneratePrequalificationCRAReportResponseExample'
    GeneratePrequalificationNonCRAReportResponse:
      description:
        "The report is being generated. When finished, a notification will be
        sent to the specified callback URL (Report Listener Service) and the
        report can be fetched using Get Report APIs. If you don't use a callback
        URL, Get Report returns a minimal report with the following status:
        'inProgress'. Repeat the call every 20 seconds until Get Report returns
        a different status."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PrequalificationReportAck'
          examples:
            GeneratePrequalificationNonCRAReportResponseExample:
              $ref: '#/components/examples/GeneratePrequalificationNonCRAReportResponseExample'
    GenerateVOIReportResponse:
      description:
        "The report is being generated. When finished, a notification will be
        sent to the specified callback URL (Report Listener Service) and the
        report can be fetched using Get Report APIs. If you don't use a callback
        URL, Get Report returns a minimal report with the following status:
        'inProgress'. Repeat the call every 20 seconds until Get Report returns
        a different status."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VOIReportAck'
          examples:
            GenerateVOIReportResponseExample:
              $ref: '#/components/examples/GenerateVOIReportResponseExample'
    GetReportResponse:
      description: The report was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Report'
          examples:
            CashFlowPersonalReportExample:
              $ref: '#/components/examples/CashFlowPersonalReportExample'
            CashFlowBusinessReportExample:
              $ref: '#/components/examples/CashFlowBusinessReportExample'
            PrequalificationCRAReportExample:
              $ref: '#/components/examples/PrequalificationCRAReportExample'
            PrequalificationNonCRAReportExample:
              $ref: '#/components/examples/PrequalificationNonCRAReportExample'
            PayStatementReportExample:
              $ref: '#/components/examples/PayStatementReportExample'
            StatementReportExample:
              $ref: '#/components/examples/StatementReportExample'
            TransactionsReportExample:
              $ref: '#/components/examples/TransactionsReportExample'
            VOAReportExample:
              $ref: '#/components/examples/VOAReportExample'
            VOAWithIncomeReportExample:
              $ref: '#/components/examples/VOAWithIncomeReportExample'
            VOEPayrollReportExample:
              $ref: '#/components/examples/VOEPayrollReportExample'
            VOETransactionsReportExample:
              $ref: '#/components/examples/VOETransactionsReportExample'
            VOIReportExample:
              $ref: '#/components/examples/VOIReportExample'
            VOIEPayrollReportExample:
              $ref: '#/components/examples/VOIEPayrollReportExample'
            VOIEPaystubReportExample:
              $ref: '#/components/examples/VOIEPaystubReportExample'
            VOIEPaystubWithTXVerifyReportExample:
              $ref: '#/components/examples/VOIEPaystubWithTXVerifyReportExample'
    GetReportsResponse:
      description: The reports summaries were successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReportSummaries'
    GetAssetByCustomerIDResponse:
      description: The asset was successfully downloaded
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary
    GetCustomerAccountStatementResponse:
      description: The statement was successfully downloaded as a PDF file
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary
    StoreCustomerPayStatementResponse:
      description: The pay statement was successfully uploaded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Asset'
    GenerateVOETransactionsReportResponse:
      description:
        "The report is being generated. When finished, a notification will be
        sent to the specified callback URL (Report Listener Service) and the
        report can be fetched using Get Report APIs. If you don't use a callback
        URL, Get Report returns a minimal report with the following status:
        'inProgress'. Repeat the call every 20 seconds until Get Report returns
        a different status."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VOETransactionsReportAck'
          examples:
            GenerateVOETransactionsReportResponseExample:
              $ref: '#/components/examples/GenerateVOETransactionsReportResponseExample'
    GeneratePayStatementReportResponse:
      description:
        "The report is being generated. When finished, a notification will be
        sent to the specified callback URL (Report Listener Service) and the
        report can be fetched using Get Report APIs. If you don't use a callback
        URL, Get Report returns a minimal report with the following status:
        'inProgress'. Repeat the call every 20 seconds until Get Report returns
        a different status."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PayStatementReportAck'
          examples:
            GeneratePayStatementReportResponseExample:
              $ref: '#/components/examples/GeneratePayStatementReportResponseExample'
    GenerateCashFlowReportBusinessResponse:
      description:
        "The report is being generated. When finished, a notification will be
        sent to the specified callback URL (Report Listener Service) and the
        report can be fetched using Get Report APIs. If you don't use a callback
        URL, Get Report returns a minimal report with the following status:
        'inProgress'. Repeat the call every 20 seconds until Get Report returns
        a different status."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CashFlowReportAck'
          examples:
            GenerateCashFlowReportBusinessResponseExample:
              $ref: '#/components/examples/GenerateCashFlowReportBusinessResponseExample'
    GenerateCashFlowReportPersonalResponse:
      description:
        "The report is being generated. When finished, a notification will be
        sent to the specified callback URL (Report Listener Service) and the
        report can be fetched using Get Report APIs. If you don't use a callback
        URL, Get Report returns a minimal report with the following status:
        'inProgress'. Repeat the call every 20 seconds until Get Report returns
        a different status."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CashFlowReportAck'
          examples:
            GenerateCashFlowReportPersonalResponseExample:
              $ref: '#/components/examples/GenerateCashFlowReportPersonalResponseExample'
    GenerateVOIEPaystubWithTXVerifyReportResponse:
      description:
        "The report is being generated. When finished, a notification will be
        sent to the specified callback URL (Report Listener Service) and the
        report can be fetched using Get Report APIs. If you don't use a callback
        URL, Get Report returns a minimal report with the following status:
        'inProgress'. Repeat the call every 20 seconds until Get Report returns
        a different status."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VOIEPaystubWithTXVerifyReportAck'
          examples:
            GenerateVOIEPaystubWithTXVerifyReportResponseExample:
              $ref: '#/components/examples/GenerateVOIEPaystubWithTXVerifyReportResponseExample'
    GenerateVOIEPaystubReportResponse:
      description:
        "The report is being generated. When finished, a notification will be
        sent to the specified callback URL (Report Listener Service) and the
        report can be fetched using Get Report APIs. If you don't use a callback
        URL, Get Report returns a minimal report with the following status:
        'inProgress'. Repeat the call every 20 seconds until Get Report returns
        a different status."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VOIEPaystubReportAck'
          examples:
            GenerateVOIEPaystubReportResponseExample:
              $ref: '#/components/examples/GenerateVOIEPaystubReportResponseExample'
    GenerateStatementReportResponse:
      description:
        "The report is being generated. When finished, a notification will be
        sent to the specified callback URL (Report Listener Service) and the
        report can be fetched using Get Report APIs. If you don't use a callback
        URL, Get Report returns a minimal report with the following status:
        'inProgress'. Repeat the call every 20 seconds until Get Report returns
        a different status."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StatementReportAck'
          examples:
            GenerateStatementReportResponseExample:
              $ref: '#/components/examples/GenerateStatementReportResponseExample'
    GetCustomerTransactionsResponse:
      description: The transactions were successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Transactions'
    GetCustomerTransactionResponse:
      description: The transaction was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Transaction'
    GetAccountACHDetailsResponse:
      description: Account ACH details were successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ACHDetails'
    GetAvailableBalanceResponse:
      description: The balance was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AvailableBalance'
    GetAvailableBalanceLiveResponse:
      description: The live balance was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AvailableBalance'
    GetLoanPaymentDetailsResponse:
      description: The loan payment details were successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoanPaymentDetails'
    GetPortfolioByCustomerResponse:
      description: The portfolio was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PortfolioSummary'
    GetPortfolioByConsumerResponse:
      description: The portfolio was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PortfolioWithConsumerSummary'
    DeleteTxPushSubscriptionResponse:
      description: The subscription was successfully deleted
    DisableTxPushNotificationsResponse:
      description: Subscriptions were successfully deleted for the given account
    SubscribeToTxPushNotificationsResponse:
      description: The subscription was successfully created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TxPushSubscriptions'
    CreateTxPushTestTransactionResponse:
      description: The test notification was successfully sent
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedTestTxPushTransaction'
    AuthenticationUnauthorizedErrorResponse:
      description: >-
        The request lacks valid authentication credentials. Check Partner ID,
        Partner Secret or Finicity-App-Key.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            MissingFinicityAppKeyExample:
              $ref: '#/components/examples/MissingFinicityAppKeyExample'
            InvalidCredentialsExample:
              $ref: '#/components/examples/InvalidCredentialsExample'
    UnauthorizedErrorResponse:
      description: >-
        The request lacks valid authentication credentials. Check
        "Finicity-App-Key" or "Finicity-App-Token".
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            ExpiredTokenExample:
              $ref: '#/components/examples/ExpiredTokenExample'
            MissingFinicityAppKeyExample:
              $ref: '#/components/examples/MissingFinicityAppKeyExample'
    BadRequestErrorResponse:
      description: The request was rejected
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            MissingFieldExample:
              $ref: '#/components/examples/MissingFieldExample'
            InvalidFieldExample:
              $ref: '#/components/examples/InvalidFieldExample'
            InvalidExperienceFieldExample:
              $ref: '#/components/examples/InvalidExperienceFieldExample'
            GenericBadRequestExample:
              $ref: '#/components/examples/GenericBadRequestExample'
            AccountTypeNotSupportedExample:
              $ref: '#/components/examples/AccountTypeNotSupportedExample'
    InitiateMicroEntriesBadRequestErrorResponse:
      description: The request was rejected
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            InvalidMemoExample:
              $ref: '#/components/examples/InvalidMemoExample'
            InvalidRoutingNumberExample:
              $ref: '#/components/examples/InvalidRoutingNumberExample'
            InvalidAccountNameExample:
              $ref: '#/components/examples/InvalidAccountNameExample'
            InvalidAccountNumberExample:
              $ref: '#/components/examples/InvalidAccountNumberExample'
            AccountAlreadyExistsExample:
              $ref: '#/components/examples/AccountAlreadyExistsExample'
            MicrodepositsInitiationFailedExample:
              $ref: '#/components/examples/MicrodepositsInitiationFailedExample'
            MicrodepositsProcessingFailedExample:
              $ref: '#/components/examples/MicrodepositsProcessingFailedExample'
            TooManyRequestsExample:
              $ref: '#/components/examples/TooManyRequestsExample'
    TooManyRequestsErrorResponse:
      description:
        The service can't accept more requests or is not available from the
        [Test Drive](https://signup.finicity.com/).
    ResourceNotFoundErrorResponse:
      description: The resource doesn't exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            ConsumerNotFoundExample:
              $ref: '#/components/examples/ConsumerNotFoundExample'
            NoAccountForInstitutionLoginIdExample:
              $ref: '#/components/examples/NoAccountForInstitutionLoginIdExample'
            CustomerNotFoundExample:
              $ref: '#/components/examples/CustomerNotFoundExample'
            NoConsumerForCustomerExample:
              $ref: '#/components/examples/NoConsumerForCustomerExample'
            ResourceNotFoundExample:
              $ref: '#/components/examples/ResourceNotFoundExample'
            NoRegisteredApplicationExample:
              $ref: '#/components/examples/NoRegisteredApplicationExample'
    ConflictErrorResponse:
      description: The resource already exists
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            ConsumerExistsConflictExample:
              $ref: '#/components/examples/ConsumerExistsConflictExample'
    InitiateMicroAmountDepositsResponse:
      description: Micro entries were successfully initiated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiatedMicroDeposit'
    VerifyMicroAmountDepositsResponse:
      description: Micro entries were successfully verified
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VerifiedMicroDeposit'
    VerifyMicroAmountDepositsBadRequestErrorResponse:
      description:
        Micro entries verification failed. status field could be any except
        "Verified" and "Completed".
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MicroDepositVerificationError'
          examples:
            InvalidAmountFormatExample:
              $ref: '#/components/examples/InvalidAmountFormatExample'
            MicrodepositStatusErrorExample:
              $ref: '#/components/examples/MicrodepositStatusErrorExample'
            MicrodepositVerificationAttemptsExample:
              $ref: '#/components/examples/MicrodepositVerificationAttemptsExample'
            MicrodepositAmountsDidNotMatchExample:
              $ref: '#/components/examples/MicrodepositAmountsDidNotMatchExample'
    GetMicroDepositsDetailsResponse:
      description: Micro entries were successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MicroDepositDetails'
    GetAccountACHDetailsBadRequestErrorResponse:
      description: The request was rejected
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            MissingFieldExample:
              $ref: '#/components/examples/MissingFieldExample'
            InvalidFieldExample:
              $ref: '#/components/examples/InvalidFieldExample'
            GenericBadRequestExample:
              $ref: '#/components/examples/GenericBadRequestExample'
            AccountTypeNotSupportedExample:
              $ref: '#/components/examples/AccountTypeNotSupportedExample'
    GetAvailableBalanceLiveBadRequestErrorResponse:
      description: The request was rejected
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            MissingFieldExample:
              $ref: '#/components/examples/MissingFieldExample'
            InvalidFieldExample:
              $ref: '#/components/examples/InvalidFieldExample'
            GenericBadRequestExample:
              $ref: '#/components/examples/GenericBadRequestExample'
            AccountTypeNotSupportedExample:
              $ref: '#/components/examples/AccountTypeNotSupportedExample'
    GetAvailableBalanceBadRequestErrorResponse:
      description: The request was rejected
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            MissingFieldExample:
              $ref: '#/components/examples/MissingFieldExample'
            InvalidFieldExample:
              $ref: '#/components/examples/InvalidFieldExample'
            GenericBadRequestExample:
              $ref: '#/components/examples/GenericBadRequestExample'
            AccountTypeNotSupportedExample:
              $ref: '#/components/examples/AccountTypeNotSupportedExample'
    GenerateBalanceAnalyticsResponse:
      description: >-
        Response given when balance analytics were generated successfully,
        providing the caller with a report ID which can be used to retrieve the
        report as JSON or a PDF.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BalanceAndCashFlowAnalyticsReportAck'
          examples:
            GenerateBalanceAnalyticsResponseExample:
              $ref: '#/components/examples/GenerateBalanceAnalyticsResponseExample'
    GenerateBalanceAnalyticsFcraResponse:
      description: >-
        Response given when balance analytics (FCRA) were generated
        successfully, providing the caller with a report ID which can be used to
        retrieve the report as JSON or a PDF.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BalanceAndCashFlowAnalyticsReportAck'
          examples:
            GenerateBalanceAnalyticsFcraResponseExample:
              $ref: '#/components/examples/GenerateBalanceAnalyticsResponseExample'
    GenerateCashFlowAnalyticsResponse:
      description: >-
        Response given when cash flow analytics were generated successfully,
        providing the caller with a report ID which can be used to retrieve the
        report as JSON or a PDF.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BalanceAndCashFlowAnalyticsReportAck'
          examples:
            GenerateCashFlowAnalyticsResponseExample:
              $ref: '#/components/examples/GenerateCashFlowAnalyticsResponseExample'
    GenerateCashFlowAnalyticsFcraResponse:
      description: >-
        Response given when cash flow analytics (FCRA) were generated
        successfully, providing the caller with a report ID which can be used to
        retrieve the report as JSON or a PDF.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BalanceAndCashFlowAnalyticsReportAck'
          examples:
            GenerateCashFlowAnalyticsFcraResponseExample:
              $ref: '#/components/examples/GenerateCashFlowAnalyticsResponseExample'
    GetObbAnalyticsReportResponse:
      description: OBB Analytics report data as JSON or PDF
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ObbAnalyticsReport'
          examples:
            BalanceAnalyticsReportExample:
              $ref: '#/components/examples/BalanceAnalyticsReportExample'
            CashFlowAnalyticsReportExample:
              $ref: '#/components/examples/CashFlowAnalyticsReportExample'
        application/pdf:
          schema:
            type: string
            format: binary
    GetObbAnalyticsReportFcraResponse:
      description: OBB Analytics FCRA report data as JSON or PDF
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ObbAnalyticsReport'
          examples:
            BalanceAnalyticsFcraReportExample:
              $ref: '#/components/examples/BalanceAnalyticsReportExample'
            CashFlowAnalyticsFcraReportExample:
              $ref: '#/components/examples/CashFlowAnalyticsReportExample'
        application/pdf:
          schema:
            type: string
            format: binary
    ObbBadRequestResponse:
      description: A bad request was provided
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ObbErrorMessage'
          examples:
            ObbBadRequestResponseExample:
              $ref: '#/components/examples/ObbBadRequestResponseExample'
    ObbUnauthorizedResponse:
      description: Unauthorized request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ObbErrorMessage'
          examples:
            ObbUnauthorizedResponseExample:
              $ref: '#/components/examples/ObbUnauthorizedResponseExample'
    ObbAccessForbiddenResponse:
      description: Access forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ObbErrorMessage'
          examples:
            ObbAccessForbiddenResponseExample:
              $ref: '#/components/examples/ObbAccessForbiddenResponseExample'
    ObbResourceNotFoundResponse:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ObbErrorMessage'
          examples:
            ObbResourceNotFoundResponseExample:
              $ref: '#/components/examples/ObbResourceNotFoundResponseExample'
    ObbResourceConflictResponse:
      description: Resource conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ObbErrorMessage'
          examples:
            ObbResourceConflictResponseExample:
              $ref: '#/components/examples/ObbResourceConflictResponseExample'
    GenerateThirdPartyAccessKeyResponse:
      description: The third party access key was successfully generated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ThirdPartyAccessKeyReceiptData'
    UpdateThirdPartyAccessKeyResponse:
      description: The third party access key was successfully updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ThirdPartyAccessKeyReceiptData'
    RevokeThirdPartyAccessKeyResponse:
      description: The third party access key was successfully revoked
    GetAccountOwnerDetailsResponse:
      description: The account owner was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountOwnerHolders'
  examples:
    MissingFinicityAppKeyExample:
      value:
        code: 10026
        message: Missing parameter (Finicity-App-Key)
    InvalidCredentialsExample:
      value:
        code: 10001
        message: Invalid credentials
    GenericBadRequestExample:
      value:
        code: 14020
        message: Bad request.
    AccountTypeNotSupportedExample:
      value:
        code: 14020
        message: 'Bad request. (Account type not supported).'
    InvalidMemoExample:
      value:
        code: 3000003
        message: 'Invalid memo'
    InvalidRoutingNumberExample:
      value:
        code: 20024
        message: 'Invalid routing number'
    InvalidAccountNumberExample:
      value:
        code: 3000001
        message: 'Invalid account number'
    AccountAlreadyExistsExample:
      value:
        code: 3100001
        message: 'Account already exist'
    MicrodepositsInitiationFailedExample:
      value:
        code: 3200001
        message: 'Microdeposits initiation failed'
    MicrodepositsProcessingFailedExample:
      value:
        code: 3000000
        message:
          Microdeposit initiation can't be processed at this time due to
          technical difficulties. Please try after some time
    InvalidAccountNameExample:
      value:
        code: 3100001
        message: 'Account already exist'
    InvalidAmountFormatExample:
      value:
        code: 3000003
        message: 'Invalid amount format'
    MicrodepositStatusErrorExample:
      value:
        code: 3200002
        message: 'Microdeposit is in <status> status'
    MicrodepositVerificationAttemptsExample:
      value:
        code: 3200003
        message: 'Microdeposit verification attempts exceeded'
    MicrodepositAmountsDidNotMatchExample:
      value:
        code: 3200004
        message: Microdeposit amounts didn't match
    TooManyRequestsExample:
      value:
        code: 3300001
        message: 'Too many request. Please try after some time'
    MissingFieldExample:
      value:
        code: '10010'
        status: '400'
        message: '"partnerId" is required'
        user_message: >-
          One or more of the fields could not be validated. Please ensure you
          have entered the correct data.
        tags: ''
    InvalidFieldExample:
      value:
        code: '10010'
        status: '400'
        message: Customer ID does not exist or does not belong to this partner
        user_message: >-
          One or more of the fields could not be validated. Please ensure you
          have entered the correct data.
        tags: ''
    InvalidExperienceFieldExample:
      value:
        code: '10010'
        status: '400'
        message: '"experience" must be a valid GUID'
        user_message:
          'One or more of the fields could not be validated. Please ensure you
          have entered the correct data.'
        tags: ''
    InvalidNewPartnerSecretExample:
      value:
        code: 24437
        message: New password is not as per policy
    ExpiredTokenExample:
      value:
        code: '10022'
        status: '401'
        message: Invalid authorization credentials
        user_message: The session has expired or is invalid
        tags: ''
    NoAccountForInstitutionLoginIdExample:
      value:
        code: '38007'
        status: '404'
        title: Connecting accounts error
        user_message:
          Customer does not have any accounts associated with
          institutionLoginId.
        tags: ''
        level: 'error'
        message:
          'Customer does not have any accounts associated with
          institutionLoginId.'
    CustomerNotFoundExample:
      value:
        code: 14001
        message: 'Customer not found.'
    ConsumerNotFoundExample:
      value:
        code: 10100
        message: 'Cannot find consumer with id 1234.'
    NoConsumerForCustomerExample:
      value:
        code: 10100
        message: 'Cannot find consumer for customer with id 5011115315."'
    ResourceNotFoundExample:
      value:
        code: 14001
        message: 'Resource not found.'
    NoRegisteredApplicationExample:
      value:
        code: 50051
        message: 'No registered partner applications found.'
    ConsumerExistsConflictExample:
      value:
        code: 11000
        message: 'A consumer already exists for customer 4025024821'
    GeneratePayrollReportRequestExample:
      value:
        payrollData:
          ssn: '999990000'
          dob: '315576000'
          reportId: abcdefghijkl-voiepayroll
        reportCustomFields:
          - label: loanID
            value: '12345'
            shown: true
        payStatementsFromDate: 1580558400
        marketSegment: Mortgage
        excludeEmpInfo: false
        purpose: '31'
    GenerateVOEPayrollReportResponseExample:
      value:
        id: 41h4nzppn47u-voepayroll
        portfolioId: 9qud7dtuzbew-3-port
        customerType: active
        customerId: 1011140000
        requestId: 7a7qyps2iy
        requesterName: Decisioning API
        createdDate: 1579819592
        title: Finicity Verification of Employment - Payroll
        consumerId: 656cf7083c5c06e0c125a698579f0000
        consumerSsn: '6789'
        constraints:
          payrollData:
            payrollDataRetrievalId: hahvhe2k0000
            employerNames:
              - ACME INC
            reportId: abcdefghijkl-voiepayroll
          payStatementsFromDate: 1580558400
          reportCustomFields:
            - label: loanID
              value: '12345'
              shown: true
        type: voePayroll
        status: inProgress
    RefreshVOIEPayrollReportResponseExample:
      value:
        id: 123456789012-voiepayroll
        customerId: 1011140000
        consumerId: 656cf7083c5c06e0c125a698579f0000
        consumerSsn: '6789'
        requesterName: Decisioning API
        requestId: 7a7qyps2iy
        type: voiePayroll
        status: inProgress
        createdDate: 1579819592
        constraints:
          payrollData:
            payrollDataRetrievalId: hahvhe2k0000
            employerNames:
              - ACME INC
            reportId: abcdefghijkl-voiepayroll
          payStatementsFromDate: 1580558400
          reportCustomFields:
            - label: loanID
              value: '12345'
              shown: true
        customerType: active
        title: Finicity Verification of Income and Employment - Payroll
        portfolioId: 9qud7dtuzbew-2-port
    GeneratePayStatementReportRequestExample:
      value:
        paystatementReport:
          assetIds:
            - 6f8fb0a0-e882-4f57-b672-cf53f1397581
          extractEarnings: true
          extractDeductions: false
          extractDirectDeposit: true
        reportCustomFields:
          - label: loanID
            value: '12345'
            shown: true
          - label: trackingID
            value: '5555'
            shown: true
          - label: loanType
            value: car
            shown: false
          - label: vendorID
            value: 1613aa23
            shown: true
          - label: vendorName
            value: PSC Finance
            shown: false
    GeneratePayStatementReportResponseExample:
      value:
        id: y0ejausptjg1-paystatement
        portfolioId: spd8aehuw63i-10-port
        customerType: active
        customerId: 1003413624
        requestId: 8wy5htqg8u
        requesterName: Decisioning API
        createdDate: 1588350269
        title: Finicity Pay Statement Extraction Report
        consumerId: 4089f408963dd6b90b28a935e9903c0e
        consumerSsn: '6789'
        constraints:
          paystatementReport:
            assetIds:
              - 6f8fb0a0-e882-4f57-b672-cf53f1397581
            extractEarnings: true
            extractDeductions: false
            extractDirectDeposit: true
          reportCustomFields:
            - label: loanID
              value: '12345'
              shown: true
            - label: trackingID
              value: '5555'
              shown: true
            - label: loanType
              value: car
              shown: false
            - label: vendorID
              value: 1613aa23
              shown: true
            - label: vendorName
              value: PSC Finance
              shown: false
        type: paystatement
        status: inProgress
    GenerateStatementReportRequestExample:
      value:
        statementReportData:
          accountId: 1000076901
          index: 1
        reportCustomFields:
          - label: loanID
            value: '123456'
            shown: true
    GenerateStatementReportResponseExample:
      value:
        id: 38dknche83oh-statement
        portfolioId: sy7aa68w2ugx-1-port
        customerType: active
        customerId: 1010560999
        requestId: ny7x32stfq
        requesterName: Demo
        createdDate: 1596226182
        title: Finicity Statement Report
        consumerId: 555595ec74c8ec57adf44dadddb6a35
        consumerSsn: '1234'
        constraints:
          statementReportData:
            accountId: 1000076901
            index: 1
          reportCustomFields:
            - label: loanID
              value: '123456'
              shown: true
        type: statement
        status: inProgress
    GenerateCashFlowReportRequestExample:
      value:
        accountIds: '1000535275'
        incomeStreamConfidenceMinimum: 50
        reportCustomFields:
          - label: loanID
            value: '12345'
            shown: true
          - label: trackingID
            value: '5555'
            shown: true
          - label: loanType
            value: car
            shown: false
          - label: vendorID
            value: 1613aa23
            shown: true
          - label: vendorName
            value: PSC Finance
            shown: false
        showNsf: false
        fromDate: 1580558400
    GenerateCashFlowReportBusinessResponseExample:
      value:
        id: 383z55zudewm-cfrb
        customerType: active
        customerId: 1275320
        requestId: 7a7qyps2iy
        requesterName: Decisioning API
        createdDate: 1579819592
        title: Finicity Cash Flow Report - Business
        consumerId: 3f7ff2cf0ffb3d0cd59875e070c9b1d4
        consumerSsn: '1234'
        constraints:
          accountIds:
            - '1000535275'
          reportCustomFields:
            - label: loanID
              value: '12345'
              shown: true
            - label: trackingID
              value: '5555'
              shown: true
            - label: loanType
              value: car
              shown: false
            - label: vendorID
              value: 1613aa23
              shown: true
            - label: vendorName
              value: PSC Finance
              shown: false
        type: cfrb
        status: inProgress
    GenerateCashFlowReportPersonalResponseExample:
      value:
        id: 383z51zurqwo-cfrp
        customerType: active
        customerId: 1275320
        requestId: 7a7qyps2iy
        requesterName: Decisioning API
        createdDate: 1579819592
        title: Finicity Cash Flow Report - Personal
        consumerId: 3f7ff2cf0ffb3d0cd59875e070c9b1d4
        consumerSsn: '1234'
        constraints:
          accountIds:
            - '1000535275'
          reportCustomFields:
            - label: loanID
              value: '12345'
              shown: true
            - label: trackingID
              value: '5555'
              shown: true
            - label: loanType
              value: car
              shown: false
            - label: vendorID
              value: 1613aa23
              shown: true
            - label: vendorName
              value: PSC Finance
              shown: false
        type: cfrp
        status: inProgress
    GenerateTransactionsReportRequestExample:
      value:
        accountIds: 1027339038 1027339039
        reportCustomFields:
          - label: loanID
            value: '12345'
            shown: true
          - label: trackingID
            value: '5555'
            shown: true
          - label: loanType
            value: car
            shown: false
          - label: vendorID
            value: 1613aa23
            shown: true
          - label: vendorName
            value: PSC Finance
            shown: false
        fromDate: 1580558400
    GenerateTransactionsReportResponseExample:
      value:
        id: dnuru2ua2trs-transactions
        portfolioId: hupvwpdzr9dq-16-port
        customerType: testing
        customerId: 1000018865
        requestID: ky2nhsufhv
        requesterName: Decisioning API Tests
        createdDate: 1594678007
        title: Finicity Transactions Report
        consumerId: a925b07c9e028c680ad9c1d18d2e7199
        consumerSsn: '6789'
        constraints:
          accountIds:
            - '1000075473'
          fromDate: 1578952809
          toDate: 1594677609
          includePending: true
          reportCustomFields:
            - label: loanID
              value: '12345'
              shown: true
            - label: trackingID
              value: '5555'
              shown: true
            - label: loanType
              value: car
              shown: false
            - label: vendorID
              value: 1613aa23
              shown: true
            - label: vendorName
              value: PSC Finance
              shown: false
        type: transactions
        status: inProgress
    GenerateVOAReportRequestExample:
      value:
        accountIds: '1000535275'
        reportCustomFields:
          - label: loanID
            value: '12345'
            shown: true
          - label: trackingID
            value: '5555'
            shown: true
          - label: loanType
            value: car
            shown: false
          - label: vendorID
            value: 1613aa23
            shown: true
          - label: vendorName
            value: PSC Finance
            shown: false
        showNsf: false
        fromDate: 1580558400
    GenerateVOAReportResponseExample:
      value:
        id: u4hstnnak45g
        portfolioId: dyr6qvqd2yhb-1-port
        customerType: active
        customerId: 1000006677
        requestId: sfb7xp439w
        requesterName: Decisioning API
        createdDate: 1588350269
        title: Finicity Verification of Assets
        consumerId: ac39e237c7619a4ecf014b8d399c0696
        consumerSsn: '6789'
        constraints:
          accountIds:
            - '1000535275'
            - '1000535276'
          fromDate: 1577986990
          showNsf: false
          reportCustomFields:
            - label: loanID
              value: '12345'
              shown: true
            - label: trackingID
              value: '5555'
              shown: true
            - label: loanType
              value: car
              shown: false
            - label: vendorID
              value: 1613aa23
              shown: true
            - label: vendorName
              value: PSC Finance
              shown: false
        type: voa
        status: inProgress
    GenerateVOAWithIncomeReportRequestExample:
      value:
        accountIds: '1000535275'
        fromDate: 1580558400
        reportCustomFields:
          - label: loanID
            value: '12345'
            shown: true
          - label: trackingID
            value: '5555'
            shown: true
          - label: loanType
            value: car
            shown: false
          - label: vendorID
            value: 1613aa23
            shown: true
          - label: vendorName
            value: PSC Finance
            shown: false
        showNsf: false
        incomeStreamConfidenceMinimum: 50
    GenerateVOAWithIncomeReportResponseExample:
      value:
        id: u4hstnyak45g
        portfolioId: dyr6weqd2yhb-1-port
        customerType: active
        customerId: 1000006677
        requestId: sfb7x1we9w
        requesterName: Decisioning API
        createdDate: 1588350269
        title: Verification of Asset and Income - Transactions
        consumerId: ac39e237c7619a4ecf014b8d399c0696
        consumerSsn: '6789'
        constraints:
          accountIds:
            - '1000535275'
          fromDate: 1580558400
          reportCustomFields:
            - label: loanID
              value: '12345'
              shown: true
            - label: trackingID
              value: '5555'
              shown: true
            - label: loanType
              value: car
              shown: false
            - label: vendorID
              value: 1613aa23
              shown: true
            - label: vendorName
              value: PSC Finance
              shown: false
          showNsf: false
          incomeStreamConfidenceMinimum: 50
        type: voaHistory
        status: inProgress
    GeneratePrequalificationReportRequestExample:
      value:
        accountIds: '1000535275'
        fromDate: 1580558400
        reportCustomFields:
          - label: loanID
            value: '12345'
            shown: true
          - label: trackingID
            value: '5555'
            shown: true
          - label: loanType
            value: car
            shown: false
          - label: vendorID
            value: 1613aa23
            shown: true
          - label: vendorName
            value: PSC Finance
            shown: false
        showNsf: false
    GeneratePrequalificationCRAReportResponseExample:
      value:
        id: 88w4fbssrbja-prequalvoa
        portfolioId: 0whcism47a34-5-port
        customerType: active
        customerId: 1000006677
        requestId: sfb7xacr9w
        requesterName: Decisioning API
        createdDate: 1588350269
        title: Asset Ready Report (CRA)
        consumerId: cb619e10185177cd92271c4da2df3fa3
        consumerSsn: '6789'
        constraints:
          accountIds:
            - '1000535275'
            - '1000535276'
          fromDate: 1577986990
          reportCustomFields:
            - label: loanID
              value: '12345'
              shown: true
            - label: trackingID
              value: '5555'
              shown: true
            - label: loanType
              value: car
              shown: false
            - label: vendorID
              value: 1613aa23
              shown: true
            - label: vendorName
              value: PSC Finance
              shown: false
          showNsf: false
        type: preQualVoa
        status: inProgress
    GeneratePrequalificationNonCRAReportResponseExample:
      value:
        id: rceiqx616awa-assetsummary
        portfolioId: 0whcism47ttt-5-port
        customerType: active
        customerId: 1000006677
        requestId: sfb7xp4iui
        requesterName: Decisioning API
        createdDate: 1588350269
        title: Asset Ready Report (NON-CRA)
        constraints:
          accountIds:
            - '1000535275'
            - '1000535276'
          fromDate: 1577986990
          reportCustomFields:
            - label: loanID
              value: '12345'
              shown: true
            - label: trackingID
              value: '5555'
              shown: true
            - label: loanType
              value: car
              shown: false
            - label: vendorID
              value: 1613aa23
              shown: true
            - label: vendorName
              value: PSC Finance
              shown: false
          showNsf: false
        type: assetSummary
        status: inProgress
    GenerateVOETransactionsReportRequestExample:
      value:
        reportId: j7k8qbgwsa7d-voietxverify
        accountIds: '123456789'
        fromDate: 1580558400
        reportCustomFields:
          - label: loanID
            value: '12345'
            shown: true
          - label: trackingID
            value: '5555'
            shown: true
          - label: loanType
            value: car
            shown: false
          - label: vendorID
            value: 1613aa23
            shown: true
          - label: vendorName
            value: PSC Finance
            shown: false
        incomeStreamConfidenceMinimum: 50
    GenerateVOETransactionsReportResponseExample:
      value:
        id: u4hstny1k25g-voetransactions
        portfolioId: dyr6weqd2yhb-2-port
        customerType: active
        customerId: 1000006677
        requestId: sfb7x1we9w
        requesterName: Decisioning API
        createdDate: 1588350269
        title: Finicity Verification Employment - Transactions
        consumerId: ac39e237c7619a4ecf014b8d399c0696
        consumerSsn: '6789'
        constraints:
          reportId: j7k8qbgwsa7d-voietxverify
          reportCustomFields:
            - label: loanID
              value: '12345'
              shown: true
            - label: trackingID
              value: '5555'
              shown: true
            - label: loanType
              value: car
              shown: false
            - label: vendorID
              value: 1613aa23
              shown: true
            - label: vendorName
              value: PSC Finance
              shown: false
        type: voeTransactions
        status: inProgress
    GenerateVOIEPaystubReportRequestExample:
      value:
        voieWithStatementData:
          assetIds:
            - d50ed92f-543b-431c-8286-c8b8f6556679
        reportCustomFields:
          - label: loanID
            value: '123456'
            shown: true
          - label: trackingID
            value: '5555'
            shown: true
    GenerateVOIEPaystubReportResponseExample:
      value:
        id: 2f3z55zuwewm-voietxverify
        portfolioId: 9qud7dtuzbew-13-port
        customerType: active
        customerId: 1275320
        requestId: 7a7qyps2iy
        requesterName: Decisioning API
        createdDate: 1579819592
        title: Verification of Income and Employment - Paystub
        consumerId: 3f7ff2cf0ffb3d0cd59875e070c9b1d4
        consumerSsn: '6789'
        constraints:
          voieWithStatementData:
            assetIds:
              - d50ed92f-543b-431c-8286-c8b8f6556679
            extractEarnings: true
            extractDeductions: false
            extractDirectDeposit: true
          reportCustomFields:
            - label: loanID
              value: '123456'
              shown: true
            - label: trackingID
              value: '5555'
              shown: true
        type: voieTxVerify
        status: inProgress
    GenerateVOIEPaystubWithTXVerifyReportRequestExample:
      value:
        accountIds: '1028361677'
        voieWithInterviewData:
          txVerifyInterview:
            - assetId: 7eb57060-6d98-4449-992d-4dd4490448f3-1236011097
        reportCustomFields:
          - label: loanID
            value: '123456'
            shown: true
    GenerateVOIEPaystubWithTXVerifyReportResponseExample:
      value:
        id: 2f3z55zuwewm-voietxverify
        customerId: 1275320
        consumerId: 3f7ff2cf0ffb3d0cd59875e070c9b1d4
        consumerSsn: '6789'
        requesterName: Decisioning API
        requestId: 7a7qyps2iy
        type: voieTxVerify
        status: inProgress
        createdDate: 1579819592
        constraints:
          accountIds:
            - '1000535275'
          voieWithInterviewData:
            txVerifyInterview:
              - assetId: 6f8fb0a0-e882-4f57-b672-cf53f1397581
                accounts: []
            extractEarnings: true
            extractDeductions: false
            extractDirectDeposit: true
          reportCustomFields:
            - label: loanID
              value: '123456'
              shown: true
        customerType: active
        title:
          Finicity Verification of Income and Employment - Paystub (with
          TXVerify)
        portfolioId: 9qud7dtuzbew-2-port
    GenerateVOIReportRequestExample:
      value:
        accountIds: 1000535275 1000535276
        fromDate: 1577986990
        reportCustomFields:
          - label: loanID
            value: '12345'
            shown: true
          - label: trackingID
            value: '5555'
            shown: true
          - label: loanType
            value: car
            shown: false
          - label: vendorID
            value: 1613aa23
            shown: true
          - label: vendorName
            value: PSC Finance
            shown: false
        incomeStreamConfidenceMinimum: 50
    GenerateVOIReportResponseExample:
      value:
        id: u4hstnnaewetr-voi
        portfolioId: dyr6qvqd2erw-1-port
        customerType: active
        customerId: 1000006677
        requestId: sfb7xp4wer
        requesterName: Decisioning API
        createdDate: 1588350269
        title: Finicity Verification of Income
        consumerId: ac39e237c7619a4ecf014b8d399c0696
        consumerSsn: '6789'
        constraints:
          accountIds:
            - '1000535275'
            - '1000535276'
          fromDate: 1577986990
          reportCustomFields:
            - label: loanID
              value: '12345'
              shown: true
            - label: trackingID
              value: '5555'
              shown: true
            - label: loanType
              value: car
              shown: false
            - label: vendorID
              value: 1613aa23
              shown: true
            - label: vendorName
              value: PSC Finance
              shown: false
        type: voi
        status: inProgress
    CashFlowPersonalReportExample:
      summary: Cash Flow Report - Personal
      value:
        id: sd1j45yn37wr-cfrp
        portfolioId: igi5kj6hh58y-1-port
        customerType: testing
        customerId: 5555
        requestId: xtw6tjemt6
        title: Finicity Cash Flow Report - Personal
        consumerId: 555595ec74c8ec57adf44dadddb6a35
        consumerSsn: '1111'
        requesterName: Decisioning API Tests
        type: cfrp
        status: success
        createdDate: 1575666823
        startDate: 1512594823
        endDate: 1575666823
        days: 730
        seasoned: true
        institutions:
          - id: '102105'
            name: FinBank Profiles
            urlHomeApp: http://www.finbank.com
            accounts:
              - id: '6681984'
                ownerName: PATRICK & LORRAINE PURCHASER
                ownerAddress: 7195 BELMONT ST. PARLIN, NJ 08859
                name: Checking
                number: XX1111
                type: checking
                aggregationStatusCode: '0'
                currentBalance: 100000
                availableBalance: 1000
                balanceDate: 1614880526
                transactions:
                  - id: '100671406523'
                    amount: -81.7
                    postedDate: 1614859200
                    description: TMOBILE*AUTO PAY
                    normalizedPayee: T-Mobile
                    institutionTransactionId: '0000000000'
                    category: Mobile Phone
                cashFlowBalance:
                  monthlyCashFlowBalances:
                    - month: 1551423600
                      minDailyBalance: -65894.54
                      maxDailyBalance: -62196.98
                      averageDailyBalance: -64594.87
                      standardDeviationOfDailyBalance: '1099'
                      numberOfDaysNegativeBalance: '28'
                      numberOfDaysPositiveBalance: '0'
                  minDailyBalance: 3479.39
                  maxDailyBalance: 3479.39
                  twelveMonthAverageDailyBalance: 3479.39
                  sixMonthAverageDailyBalance: 3479.39
                  twoMonthAverageDailyBalance: 3479.39
                  twelveMonthStandardDeviationOfDailyBalance: '20'
                  sixMonthStandardDeviationOfDailyBalance: '20'
                  twoMonthStandardDeviationOfDailyBalance: '20'
                  numberDaysNegativeBalance: '6'
                  numberOfDaysPositiveBalance: '0'
                cashFlowCredit:
                  monthlyCashFlowCredits:
                    - month: 1551423600
                      numberOfCredits: '3'
                      totalCreditsAmount: 5000.29
                      largestCredit: 2182.34
                      numberOfCreditsLessTransfers: '3'
                      totalCreditsAmountLessTransfers: 5000.29
                      averageCreditAmount: 1666.76
                      estimatedNumberOfLoanDeposits: '0'
                      estimatedLoanDepositAmount: 0
                  twelveMonthCreditTotal: 1200
                  twelveMonthCreditTotalLessTransfers: 1000
                  sixMonthCreditTotal: 750
                  sixMonthCreditTotalLessTransfers: 500
                  twoMonthCreditTotal: 150
                  twoMonthCreditTotalLessTransfers: 100
                cashFlowDebit:
                  monthlyCashFlowDebits:
                    - month: 1551423600
                      numberOfDebits: '12'
                      totalDebitsAmount: -2063.43
                      largestDebit: -953.73
                      numberOfDebitsLessTransfers: '12'
                      totalDebitsAmountLessTransfers: -2063.43
                      averageDebitAmount: -171.95
                  twelveMonthDebitTotal: 1200
                  twelveMonthDebitTotalLessTransfers: 1000
                  sixMonthDebitTotal: 750
                  sixMonthDebitTotalLessTransfers: 500
                  twoMonthDebitTotal: 150
                  twoMonthDebitTotalLessTransfers: 100
                cashFlowCharacteristic:
                  monthlyCashFlowCharacteristics:
                    - month: 1551423600
                      totalCreditsLessTotalDebits: 2936.86
                      totalCreditsLessTotalDebitsLessTransfers: 2936.86
                      averageTransactionAmount: 195.79
                  averageMonthlyNet: 2350
                  averageMonthlyNetLessTransfers: 1000
                  twelveMonthTotalNet: 12500
                  twelveMonthTotalNetLessTransfers: 12400
                  sixMonthAverageTotalCreditsLessTotalDebits: 55555
                  sixMonthAverageTotalCreditsLessTotalDebitsLessTransfers: 55555
                  twoMonthAverageTotalCreditsLessTotalDebits: 55555
                  twoMonthAverageTotalCreditsLessTotalDebitsLessTransfers: 55555
        cashFlowBalanceSummary:
          monthlyCashFlowBalanceSummaries:
            - month: 1551423600
              minDailyBalance: -65894.54
              maxDailyBalance: -62196.98
              averageDailyBalance: -64594.87
              standardDeviationOfDailyBalance: '1099'
              numberOfDaysNegativeBalance: '28'
              numberOfDaysPositiveBalance: '0'
          minDailyBalance: 3479.39
          maxDailyBalance: 3479.39
          twelveMonthAverageDailyBalance: 3479.39
          sixMonthAverageDailyBalance: 3479.39
          twoMonthAverageDailyBalance: 3479.39
          twelveMonthStandardDeviationOfDailyBalance: '20'
          sixMonthStandardDeviationOfDailyBalance: '20'
          twoMonthStandardDeviationOfDailyBalance: '20'
          numberOfDaysNegativeBalance: '6'
          numberOfDaysPositiveBalance: '11'
        cashFlowCreditSummary:
          monthlyCashFlowCreditSummaries:
            - month: 1551423600
              numberOfCredits: '3'
              totalCreditsAmount: 5000.29
              largestCredit: 2182.34
              numberOfCreditsLessTransfers: '3'
              totalCreditsAmountLessTransfers: 5000.29
              averageCreditAmount: 1666.76
              estimatedNumberOfLoanDeposits: '0'
              estimatedLoanDepositAmount: 0
          twelveMonthCreditTotal: 1200
          twelveMonthCreditTotalLessTransfers: 1000
          sixMonthCreditTotal: 750
          sixMonthCreditTotalLessTransfers: 500
          twoMonthCreditTotal: 150
          twoMonthCreditTotalLessTransfers: 100
        cashFlowDebitSummary:
          monthlyCashFlowDebitSummaries:
            - month: 1551423600
              numberOfDebits: '12'
              totalDebitsAmount: -2063.43
              largestDebit: -953.73
              numberOfDebitsLessTransfers: '12'
              totalDebitsAmountLessTransfers: -2063.43
              averageDebitAmount: -171.95
          twelveMonthDebitTotal: -1200
          twelveMonthDebitTotalLessTransfers: -1000
          sixMonthDebitTotal: -750
          sixMonthDebitTotalLessTransfers: -500
          twoMonthDebitTotal: -150
          twoMonthDebitTotalLessTransfers: -100
        cashFlowCharacteristicsSummary:
          monthlyCashFlowCharacteristicSummaries:
            - month: 1551423600
              totalCreditsLessTotalDebits: 2936.86
              totalCreditsLessTotalDebitsLessTransfers: 2936.86
              averageTransactionAmount: 195.79
          averageMonthlyNet: 1250
          averageMonthlyNetLessTransfers: 1000
          twelveMonthTotalNet: 12500
          twelveMonthTotalNetLessTransfers: 12400
          sixMonthAverageTotalCreditsLessTotalDebits: 55555
          sixMonthAverageTotalCreditsLessTotalDebitsLessTransfers: 55555
          twoMonthAverageTotalCreditsLessTotalDebits: 55555
          twoMonthAverageTotalCreditsLessTotalDebitsLessTransfers: 55555
        possibleLoanDeposits:
          - id: '102105'
            name: FinBank Profiles
            urlHomeApp: http://www.finbank.com
            accounts:
              - id: '6681984'
                ownerName: PATRICK & LORRAINE PURCHASER
                ownerAddress: 7195 BELMONT ST. PARLIN, NJ 08859
                name: Checking
                number: XX1111
                type: checking
                aggregationStatusCode: '0'
                currentBalance: 100000
                availableBalance: 1000
                balanceDate: 1614880526
                transactions:
                  - id: '100671406523'
                    amount: -81.7
                    postedDate: 1614859200
                    description: TMOBILE*AUTO PAY
                    normalizedPayee: T-Mobile
                    institutionTransactionId: '0000000000'
                    category: Mobile Phone
    CashFlowBusinessReportExample:
      summary: Cash Flow Report - Business
      value:
        id: sd1j45yn37wr-cfrb
        customerType: testing
        customerId: 5555
        requestId: xtw6tjemt6
        title: Finicity Cash Flow Report - Business
        requesterName: Decisioning API Tests
        type: cfrb
        status: success
        createdDate: 1575666823
        startDate: 1512594823
        endDate: 1575666823
        days: 730
        seasoned: true
        institutions:
          - id: '102105'
            name: FinBank Profiles
            urlHomeApp: http://www.finbank.com
            accounts:
              - id: '6681984'
                ownerName: PATRICK & LORRAINE PURCHASER
                ownerAddress: 7195 BELMONT ST. PARLIN, NJ 08859
                name: Checking
                number: XX1111
                type: checking
                aggregationStatusCode: '0'
                currentBalance: 100000
                availableBalance: 1000
                balanceDate: 1614880526
                transactions:
                  - id: '100671406523'
                    amount: -81.7
                    postedDate: 1614859200
                    description: TMOBILE*AUTO PAY
                    normalizedPayee: T-Mobile
                    institutionTransactionId: '0000000000'
                    category: Mobile Phone
                cashFlowBalance:
                  monthlyCashFlowBalances:
                    - month: 1551423600
                      minDailyBalance: -65894.54
                      maxDailyBalance: -62196.98
                      averageDailyBalance: -64594.87
                      standardDeviationOfDailyBalance: '1099'
                      numberOfDaysNegativeBalance: '28'
                      numberOfDaysPositiveBalance: '0'
                  minDailyBalance: 3479.39
                  maxDailyBalance: 3479.39
                  twelveMonthAverageDailyBalance: 3479.39
                  sixMonthAverageDailyBalance: 3479.39
                  twoMonthAverageDailyBalance: 3479.39
                  twelveMonthStandardDeviationOfDailyBalance: '20'
                  sixMonthStandardDeviationOfDailyBalance: '20'
                  twoMonthStandardDeviationOfDailyBalance: '20'
                  numberDaysNegativeBalance: '6'
                  numberOfDaysPositiveBalance: '0'
                cashFlowCredit:
                  monthlyCashFlowCredits:
                    - month: 1551423600
                      numberOfCredits: '3'
                      totalCreditsAmount: 5000.29
                      largestCredit: 2182.34
                      numberOfCreditsLessTransfers: '3'
                      totalCreditsAmountLessTransfers: 5000.29
                      averageCreditAmount: 1666.76
                      estimatedNumberOfLoanDeposits: '0'
                      estimatedLoanDepositAmount: 0
                  twelveMonthCreditTotal: 1200
                  twelveMonthCreditTotalLessTransfers: 1000
                  sixMonthCreditTotal: 750
                  sixMonthCreditTotalLessTransfers: 500
                  twoMonthCreditTotal: 150
                  twoMonthCreditTotalLessTransfers: 100
                cashFlowDebit:
                  monthlyCashFlowDebits:
                    - month: 1551423600
                      numberOfDebits: '12'
                      totalDebitsAmount: -2063.43
                      largestDebit: -953.73
                      numberOfDebitsLessTransfers: '12'
                      totalDebitsAmountLessTransfers: -2063.43
                      averageDebitAmount: -171.95
                  twelveMonthDebitTotal: 1200
                  twelveMonthDebitTotalLessTransfers: 1000
                  sixMonthDebitTotal: 750
                  sixMonthDebitTotalLessTransfers: 500
                  twoMonthDebitTotal: 150
                  twoMonthDebitTotalLessTransfers: 100
                cashFlowCharacteristic:
                  monthlyCashFlowCharacteristics:
                    - month: 1551423600
                      totalCreditsLessTotalDebits: 2936.86
                      totalCreditsLessTotalDebitsLessTransfers: 2936.86
                      averageTransactionAmount: 195.79
                  averageMonthlyNet: 2350
                  averageMonthlyNetLessTransfers: 1000
                  twelveMonthTotalNet: 12500
                  twelveMonthTotalNetLessTransfers: 12400
                  sixMonthAverageTotalCreditsLessTotalDebits: 55555
                  sixMonthAverageTotalCreditsLessTotalDebitsLessTransfers: 55555
                  twoMonthAverageTotalCreditsLessTotalDebits: 55555
                  twoMonthAverageTotalCreditsLessTotalDebitsLessTransfers: 55555
        cashFlowBalanceSummary:
          monthlyCashFlowBalanceSummaries:
            - month: 1551423600
              minDailyBalance: -65894.54
              maxDailyBalance: -62196.98
              averageDailyBalance: -64594.87
              standardDeviationOfDailyBalance: '1099'
              numberOfDaysNegativeBalance: '28'
              numberOfDaysPositiveBalance: '0'
          minDailyBalance: 3479.39
          maxDailyBalance: 3479.39
          twelveMonthAverageDailyBalance: 3479.39
          sixMonthAverageDailyBalance: 3479.39
          twoMonthAverageDailyBalance: 3479.39
          twelveMonthStandardDeviationOfDailyBalance: '20'
          sixMonthStandardDeviationOfDailyBalance: '20'
          twoMonthStandardDeviationOfDailyBalance: '20'
          numberOfDaysNegativeBalance: '6'
          numberOfDaysPositiveBalance: '11'
        cashFlowCreditSummary:
          monthlyCashFlowCreditSummaries:
            - month: 1551423600
              numberOfCredits: '3'
              totalCreditsAmount: 5000.29
              largestCredit: 2182.34
              numberOfCreditsLessTransfers: '3'
              totalCreditsAmountLessTransfers: 5000.29
              averageCreditAmount: 1666.76
              estimatedNumberOfLoanDeposits: '0'
              estimatedLoanDepositAmount: 0
          twelveMonthCreditTotal: 1200
          twelveMonthCreditTotalLessTransfers: 1000
          sixMonthCreditTotal: 750
          sixMonthCreditTotalLessTransfers: 500
          twoMonthCreditTotal: 150
          twoMonthCreditTotalLessTransfers: 100
        cashFlowDebitSummary:
          monthlyCashFlowDebitSummaries:
            - month: 1551423600
              numberOfDebits: '12'
              totalDebitsAmount: -2063.43
              largestDebit: -953.73
              numberOfDebitsLessTransfers: '12'
              totalDebitsAmountLessTransfers: -2063.43
              averageDebitAmount: -171.95
          twelveMonthDebitTotal: -1200
          twelveMonthDebitTotalLessTransfers: -1000
          sixMonthDebitTotal: -750
          sixMonthDebitTotalLessTransfers: -500
          twoMonthDebitTotal: -150
          twoMonthDebitTotalLessTransfers: -100
        cashFlowCharacteristicsSummary:
          monthlyCashFlowCharacteristicSummaries:
            - month: 1551423600
              totalCreditsLessTotalDebits: 2936.86
              totalCreditsLessTotalDebitsLessTransfers: 2936.86
              averageTransactionAmount: 195.79
          averageMonthlyNet: 1250
          averageMonthlyNetLessTransfers: 1000
          twelveMonthTotalNet: 12500
          twelveMonthTotalNetLessTransfers: 12400
          sixMonthAverageTotalCreditsLessTotalDebits: 55555
          sixMonthAverageTotalCreditsLessTotalDebitsLessTransfers: 55555
          twoMonthAverageTotalCreditsLessTotalDebits: 55555
          twoMonthAverageTotalCreditsLessTotalDebitsLessTransfers: 55555
        possibleLoanDeposits:
          - id: '102105'
            name: FinBank Profiles
            urlHomeApp: http://www.finbank.com
            accounts:
              - id: '6681984'
                ownerName: PATRICK & LORRAINE PURCHASER
                ownerAddress: 7195 BELMONT ST. PARLIN, NJ 08859
                name: Checking
                number: XX1111
                type: checking
                aggregationStatusCode: '0'
                currentBalance: 100000
                availableBalance: 1000
                balanceDate: 1614880526
                transactions:
                  - id: '100671406523'
                    amount: -81.7
                    postedDate: 1614859200
                    description: TMOBILE*AUTO PAY
                    normalizedPayee: T-Mobile
                    institutionTransactionId: '0000000000'
                    category: Mobile Phone
    PrequalificationCRAReportExample:
      summary: Prequalification CRA Report
      value:
        id: 88w4fbssrbja-prequalvoa
        customerId: 1000006677
        requesterName: Decisioning API
        requestId: sfb7xacr9w
        type: preQualVoa
        status: success
        createdDate: 1588350269
        constraints:
          accountIds:
            - '1000535275'
            - '1000535276'
          fromDate: 1577986990
          reportCustomFields:
            - label: loanID
              value: '12345'
              shown: true
            - label: trackingID
              value: '5555'
              shown: true
            - label: loanType
              value: car
              shown: false
            - label: vendorID
              value: 1613aa23
              shown: true
            - label: vendorName
              value: PSC Finance
              shown: false
          showNsf: false
        customerType: active
        title: Asset Ready Report (CRA)
        startDate: 1572625469
        endDate: 1588350269
        days: 230
        seasoned: true
        consolidatedAvailableBalance: 1929.57
        portfolioId: 0whcism47a34-5-port
        consumerId: ac39e237c7619a4ecf014b8d399c0696
        consumerSsn: '6789'
        institutions:
          id: 101732
          name: FinBank
          urlHomeApp: https://finbank.prod.fini.city/CCBankImageMFA/login.jsp
          accounts:
            id: 1000023996
            number: '1111'
            name: Checking
            type: checking
            aggregationStatusCode: 0
            balance: 501.24
            balanceDate: 1588350276
            averageMonthlyBalance: 501.02
            totNumberInsufficientFundsFeeDebitTxAccount: 0
            totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount: 0
            totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount: 120
            transactions: []
            asset:
              type: checking
              availableBalance: 1000
              currentBalance: 1000
              twoMonthAverage: -1865.96
              sixMonthAverage: -7616.01
              beginningBalance: -17795.6
            details:
              interestMarginBalance: -50000
              availableCashBalance: 1500
              vestedBalance: 300000
              currentLoanBalance: 0
              availableBalanceAmount: 1000
        assets:
          currentBalance: 1000
          availableBalance: 1000
          twoMonthAverage: -1865.96
          sixMonthAverage: -7616.01
          beginningBalance: -17795.6
    PrequalificationNonCRAReportExample:
      summary: Prequalification Non-CRA Report
      value:
        id: rceiqx616awa-assetsummary
        customerId: 1000006677
        requesterName: Decisioning API
        requestId: sfb7xp4iui
        type: assetSummary
        status: success
        createdDate: 1588350269
        constraints:
          accountIds:
            - '1000535275'
            - '1000535276'
          fromDate: 1577986990
          reportCustomFields:
            - label: loanID
              value: '12345'
              shown: true
            - label: trackingID
              value: '5555'
              shown: true
            - label: loanType
              value: car
              shown: false
            - label: vendorID
              value: 1613aa23
              shown: true
            - label: vendorName
              value: PSC Finance
              shown: false
          showNsf: false
        customerType: active
        title: Asset Ready Report (non-CRA)
        startDate: 1572625469
        endDate: 1588350269
        days: 230
        seasoned: true
        consolidatedAvailableBalance: 1929.57
        portfolioId: 0whcism47ttt-5-port
        institutions:
          - id: 101732
            name: FinBank
            urlHomeApp: https://finbank.prod.fini.city/CCBankImageMFA/login.jsp
            accounts:
              - id: 1000023996
                number: '1111'
                ownerName: JOHN DOE
                ownerAddress: 924 GAINSVILLE HIGHWAY SUITE 130 BUFORD, GA 30518
                name: Checking
                type: checking
                availableBalance: 0
                aggregationStatusCode: 0
                balance: 501.24
                balanceDate: 1588350276
                averageMonthlyBalance: 501.02
                totNumberInsufficientFundsFeeDebitTxAccount: 0
                totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount: 0
                totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount: 120
                transactions: []
                asset:
                  type: checking
                  currentBalance: 1000
                  twoMonthAverage: -1865.96
                  sixMonthAverage: -7616.01
                  beginningBalance: -17795.6
                details:
                  interestMarginBalance: -50000
                  availableCashBalance: 1500
                  vestedBalance: 300000
                  currentLoanBalance: 0
                  availableBalanceAmount: 1000
        assets:
          currentBalance: 1000
          twoMonthAverage: -1865.96
          sixMonthAverage: -7616.01
          beginningBalance: -17795.6
    PayStatementReportExample:
      summary: Pay Statement Report
      value:
        id: y0ejausptjg1-paystatement
        customerId: 1003413624
        consumerId: 4089f408963dd6b90b28a935e9903c0e
        consumerSsn: '6789'
        requesterName: Decisioning API
        requestId: 8wy5htqg8u
        type: paystatement
        status: success
        createdDate: 1588350269
        constraints:
          paystatementReport:
            assetIds:
              - 6f8fb0a0-e882-4f57-b672-cf53f1397581
            extractEarnings: true
            extractDeductions: false
            extractDirectDeposit: true
          reportCustomFields:
            - label: loanID
              value: '12345'
              shown: true
            - label: trackingID
              value: '5555'
              shown: true
            - label: loanType
              value: car
              shown: false
            - label: vendorID
              value: 1613aa23
              shown: true
            - label: vendorName
              value: PSC Finance
              shown: false
        customerType: active
        title: Finicity Pay Statement Extraction Report
        startDate: 1572625469
        endDate: 1588350269
        portfolioId: spd8aehuw63i-10-port
        reportStyle: paystatement
        numberOfBillableAssets: 1
        assetIds:
          - 6f8fb0a0-e882-4f57-b672-cf53f1397581
        payStatementTxVerifyDaoList:
          payPeriod: LastPayPeriod
          billable: true
          assetId: 6f8fb0a0-e882-4f57-b672-cf53f1397581
          payDate: 1559241000
          startDate: 1557513000
          endDate: 1558722600
          netPayCurrent: 1802.22
          netPayYTD: 36000
          grossPayCurrent: 24200
          grossPayYTD: 72600
          payrollProvider: Finicity
          employer:
            name: Rocket Surgery
          employee:
            name: Patrick Purchaser
          payStat:
            name: regular 1
            type: regular
            description: regular income
            amountCurrent: 6000
            amountYTD: 18000
          deductions:
            - name: '401'
              description: 401k
              amountCurrent: 1744.61
              amountYTD: 1744.6
              type: 401 Deductions
          directDeposits:
            - financialInstitutionName: America First
              accountType: Checking
              amountCurrent: 1744.61
              accountLastFour: XX34
              description: Payroll
    StatementReportExample:
      summary: Statement Report
      value:
        id: 38dknche83oh-statement
        customerType: active
        customerId: 1000262464
        requestId: nd4b55a4bg
        title: Finicity Statement Report
        consumerId: d15ff15ed0c8627eae61c452928d7fc3
        consumerSsn: '1111'
        requesterName: Demo
        constraints:
          statementReportData:
            accountId: 1000076901
            index: 1
          reportCustomFields:
            - label: loanID
              value: '123456'
              shown: true
        type: statement
        status: success
        createdDate: 1586189339
        assetId: aaaa3be2-6f1a-4aac-a360-4ad240aa652d
    TransactionsReportExample:
      summary: Transactions Report
      value:
        id: '1000075473'
        title: Finicity Transactions Report
        customerType: testing
        customerId: 1000018865
        consumerId: a925b07c9e028c680ad9c1d18d2e7199
        consumerSsn: '6789'
        type: transactions
        status: success
        createdDate: 1594678007
        constraints:
          accountIds:
            - '1000075473'
          fromDate: 1578952809
          toDate: 1594677609
          includePending: true
          reportCustomFields:
            - label: loanID
              value: '12345'
              shown: true
            - label: trackingID
              value: '5555'
              shown: true
            - label: loanType
              value: car
              shown: false
            - label: vendorID
              value: 1613aa23
              shown: true
            - label: vendorName
              value: PSC Finance
              shown: false
        startDate: 1579348800
        endDate: 1594382400
        days: 174
        seasoned: false
        portfolioId: wqbh0r2kbv5g-4-port
        institutions:
          - id: 102105
            name: FinBank Profiles - A
            urlHomeApp: http://www.finbank.com
            accounts:
              - id: 1000075473
                number: '5015'
                name: Super Checking
                type: checking
                availableBalance: 1000
                aggregationStatusCode: 0
                balance: 1000
                balanceDate: 1594676289
                transactions:
                  - id: 100001490719
                    amount: -224
                    postedDate: 1594382400
                    description: ACH Withdrawal AMERICA FIRST CR
                    normalizedPayee: America First Cr
                    institutionTransactionId: '0000000000'
                    category: Income
                    memo: AMERICA FIRST CR
                  - id: 100001490897
                    amount: -81.7
                    postedDate: 1594123200
                    description: TMOBILE*AUTO PAY
                    normalizedPayee: T-Mobile
                    institutionTransactionId: '0000000000'
                    category: Mobile Phone
                    memo: TMOBILE debit
    VOAReportExample:
      summary: VOA Report
      value:
        id: u4hstnnak45g
        customerId: 1000006677
        consumerId: ac39e237c7619a4ecf014b8d399c0696
        consumerSsn: '6789'
        requesterName: Decisioning API
        requestId: sfb7xp439w
        type: voa
        status: success
        createdDate: 1588350269
        constraints:
          accountIds:
            - '1000535275'
            - '1000535276'
          fromDate: 1577986990
          reportCustomFields:
            - label: loanID
              value: '12345'
              shown: true
            - label: trackingID
              value: '5555'
              shown: true
            - label: loanType
              value: car
              shown: false
            - label: vendorID
              value: 1613aa23
              shown: true
            - label: vendorName
              value: PSC Finance
              shown: false
          showNsf: false
        customerType: active
        title: Finicity Verification of Assets
        startDate: 1572625469
        endDate: 1588350269
        days: 180
        seasoned: false
        consolidatedAvailableBalance: 2345
        portfolioId: dyr6qvqd2yhb-1-port
        institutions:
          id: 101732
          name: FinBank
          urlHomeApp: https://finbank.prod.fini.city/CCBankImageMFA/login.jsp
          accounts:
            id: 1000023996
            number: '1111'
            ownerName: JOHN DOE
            ownerAddress: 924 GAINSVILLE HIGHWAY SUITE 130 BUFORD, GA 30518
            name: Checking
            type: checking
            availableBalance: 501.24
            aggregationStatusCode: 0
            balance: 501.24
            balanceDate: 1588350276
            averageMonthlyBalance: 501.02
            totNumberInsufficientFundsFeeDebitTxAccount: 0
            totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount: 0
            totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount: 120
            transactions:
              - id: 100000527471
                amount: 22.21
                postedDate: 1582286400
                description: FINICITY INC PAYROLL
                memo: Finicity amount credit
                normalizedPayee: Finicity
                institutionTransactionId: '100000000'
                category: Paycheck
                bestRepresentation: FINICITY INC PAYROLL
            details:
              interestMarginBalance: -50000
              availableCashBalance: 1500
              vestedBalance: 300000
              currentLoanBalance: 0
              availableBalanceAmount: 1000
            asset:
              currentBalance: 1000
              twoMonthAverage: -1865.96
              sixMonthAverage: -7616.01
              beginningBalance: -17795.6
        assets:
          type: checking
          availableBalance: 1000
          currentBalance: 1000
          twoMonthAverage: -1865.96
          sixMonthAverage: -7616.01
          beginningBalance: -17795.6
    VOAWithIncomeReportExample:
      summary: VOA With Income Report
      value:
        id: u4hstnyak45g
        portfolioId: dyr6weqd2yhb-1-port
        customerType: active
        customerId: 1000006677
        requestId: sfb7x1we9w
        title: Finicity Verification of Asset and Income - Transactions
        consumerId: ac39e237c7619a4ecf014b8d399c0696
        consumerSsn: '6789'
        requesterName: Decisioning API
        constraints:
          accountIds:
            - '1000535275'
            - '1000535276'
          fromDate: 1577986990
          reportCustomFields:
            - label: loanID
              value: '12345'
              shown: true
            - label: trackingID
              value: '5555'
              shown: true
            - label: loanType
              value: car
              shown: false
            - label: vendorID
              value: 1613aa23
              shown: true
            - label: vendorName
              value: PSC Finance
              shown: false
          showNsf: false
        type: voaHistory
        status: success
        createdDate: 1588350269
        startDate: 1572625469
        endDate: 1588350269
        days: 230
        seasoned: true
        institutions:
          id: 101732
          name: FinBank
          urlHomeApp: https://finbank.prod.fini.city/CCBankImageMFA/login.jsp
          accounts:
            id: 6001966289
            number: '1111'
            ownerName: JOHN DOE
            ownerAddress: 924 GAINSVILLE HIGHWAY SUITE 130 BUFORD, GA 30518
            name: Checking
            type: checking
            currency: USD
            aggregationStatusCode: 0
            balance: 509.37
            balanceDate: 1652114265
            averageMonthlyBalance: 507.37
            totNumberInsufficientFundsFeeDebitTxAccount: 0
            totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount: 0
            transactions:
              id: 100000527471
              amount: 22.21
              postedDate: 1582286400
              description: FINICITY INC PAYROLL
              normalizedPayee: Finicity
              institutionTransactionId: '100000000'
              category: Paycheck
            asset:
              type: checking
              currentBalance: 1000
              twoMonthAverage: -1865.96
              sixMonthAverage: -7616.01
              beginningBalance: -17795.6
            details:
              interestMarginBalance: -50000
              availableCashBalance: 1500
              vestedBalance: 300000
              currentLoanBalance: 0
              availableBalanceAmount: 1000
            incomeStreams:
              id: dens28i3vsch-voah
              name: none
              status: ACTIVE
              estimateInclusion: MODERATE
              confidence: 70
              cadence:
                startDate: 1577986990
                stopDate: 1587986990
                days: 14
              netMonthly:
                - month: 1522562400
                  net: 2004.77
              netAnnual: 110475.7
              projectedNetAnnual: 0
              estimatedGrossAnnual: 0
              projectedGrossAnnual: 151609
              averageMonthlyIncomeNet: 9206.31
              incomeStreamMonths: 18
              transactions:
                - id: 100000527471
                  amount: 22.21
                  postedDate: 1582286400
                  description: FINICITY INC PAYROLL
                  normalizedPayee: Finicity
                  institutionTransactionId: '100000000'
                  category: Paycheck
        assets:
          currentBalance: 1000
          twoMonthAverage: -1865.96
          sixMonthAverage: -7616.01
          beginningBalance: -17795.6
        consolidatedAvailableBalance: 2345
    VOEPayrollReportExample:
      summary: VOE - Payroll Report
      value:
        id: 41h4nzppn47u-voepayroll
        portfolioId: 9qud7dtuzbew-3-port
        gseEnabled: true
        createdDate: 1579819592
        requesterName: Decisioning API
        requestId: 7a7qyps2iy
        customerType: active
        customerId: 1275320
        consumerId: 3f7ff2cf0ffb3d0cd59875e070c9b1d4
        consumerSsn: '6789'
        type: voePayroll
        title: Verification of Employment - Payroll
        status: success
        constraints:
          payrollData:
            payrollDataRetrievalId: hahvhe2k0000
            employerNames:
              - ACME INC
            reportId: abcdefghijkl-voiepayroll
        employmentHistory:
          - asOfDate: 1596175200
            employerName: ACME INC
            payrollSource: finPayroll
            employee:
              name: John Doe Smith
              givenName: John
              middleName: Doe
              familyName: Smith
              address:
                - address1: Address 1
                  city: City
                  state: TX
                  zip: '99999'
            employment:
              employerName: ACME INC
              legalEntityId: '752760000'
              originalHireDate: 1527832800
              latestHireDate: 1527832800
              latestPayDate: 1596175200
              daysSinceLastPay: 10
              numberPayCadenceWithoutPay: 1
              employmentEndDate: 1527832800
              employmentDuration: P1Y6M0D
              employerAddress:
                - address1: Address 1
                  city: City
                  state: TX
                  zip: '99999'
              employmentStatusCode: A
              employmentStatusName: Active
              workLevelCode: FT
              workLevelName: Full Time-Regular
              workLevelStatus: Full Time
              positionTitle: Shift Supervisor
              positionDuration: P1Y6M0D
            income:
              payFrequency: Weekly
    VOETransactionsReportExample:
      summary: VOE - Transactions Report
      value:
        id: n1rndg1iz8yy-voetransactions
        portfolioId: dyr6weqd2yhb-2-port
        customerType: active
        customerId: 1000006677
        requestId: sfb7x1we9w
        title: Finicity Verification of Employment - Transactions
        consumerId: ac39e237c7619a4ecf014b8d399c0696
        consumerSsn: '6789'
        requesterName: Decisioning API
        constraints:
          reportId: j7k8qbgwsa7d-voietxverify
          reportCustomFields:
            - label: loanID
              value: '12345'
              shown: true
            - label: trackingID
              value: '5555'
              shown: true
          incomeStreamConfidenceMinimum: 50
        type: voeTransactions
        status: success
        createdDate: 1588350269
        startDate: 1572625469
        endDate: 1588350269
        days: 120
        seasoned: true
        institutions:
          - id: 101732
            name: FinBank
            urlHomeApp: https://finbank.prod.fini.city/CCBankImageMFA/login.jsp
            accounts:
              - id: 1000023996
                number: '1111'
                ownerName: JOHN DOE
                ownerAddress: 924 GAINSVILLE HIGHWAY SUITE 130 BUFORD, GA 30518
                name: Checking
                type: checking
                aggregationStatusCode: 0
                incomeStreams:
                  - id: u4hstnyak45g1
                    name: none
                    status: ACTIVE
                    estimateInclusion: MODERATE
                    confidence: 70
                    cadence:
                      startDate: 1577986990
                      stopDate: 1587986990
                      days: 14
                    daysSinceLastTransaction: 15
                    nextExpectedTransactionDate: 1698788820
                    incomeStreamMonths: 18
                    transactions:
                      - id: 100000527471
                        postedDate: 1582286400
                        description: FINICITY INC PAYROLL
                        normalizedPayee: Finicity
                        institutionTransactionId: '100000000'
                        category: Paycheck
    VOIReportExample:
      summary: VOI Report
      value:
        id: u4hstnnaewetr-voi
        customerId: 1000006677
        consumerId: ac39e237c7619a4ecf014b8d399c0696
        consumerSsn: '6789'
        requesterName: Decisioning API
        requestId: sfb7xp4wer
        type: voi
        status: success
        createdDate: 1588350269
        customerType: active
        title: Finicity Verification of Income
        startDate: 1572625469
        endDate: 1588350269
        days: 200
        seasoned: true
        portfolioId: dyr6qvqd2erw-1-port
        institutions:
          id: 101732
          name: FinBank
          urlHomeApp: https://finbank.prod.fini.city/CCBankImageMFA/login.jsp
          accounts:
            id: 1000023996
            number: '1111'
            name: Checking
            type: checking
            aggregationStatusCode: 0
            incomeStreams:
              id: dens28i3vsch-voi1
              name: none
              status: ACTIVE
              estimateInclusion: MODERATE
              confidence: 70
              cadence:
                startDate: 1577986990
                stopDate: 1587986990
                days: 14
              netMonthly:
                - month: 1522562400
                  net: 2004.77
              netAnnual: 110475.7
              projectedNetAnnual: 0
              estimatedGrossAnnual: 0
              projectedGrossAnnual: 151609
              averageMonthlyIncomeNet: 9206.31
              incomeStreamMonths: 18
              transactions:
                - id: 100000527471
                  amount: 22.21
                  postedDate: 1582286400
                  description: FINICITY INC PAYROLL
                  memo: Finicity amount credit
                  institutionTransactionId: '100000000'
                  category: Paycheck
            balance: 714.16
            averageMonthlyBalance: 720.75
            transactions: []
            availableBalance: 714.16
            currentBalance: 714.16
            beginningBalance: 714.77
            miscDeposits:
              - id: 100000527471
                amount: 22.21
                postedDate: 1582286400
                description: FINICITY INC PAYROLL
                memo: Finicity amount credit
                institutionTransactionId: '100000000'
                category: Paycheck
        income:
          - confidenceType: MODERATE
            netMonthly:
              - month: 1522562400
                net: 2004.77
            incomeEstimate:
              netAnnual: 1000.12
              projectedNetAnnual: 1500.23
              estimatedGrossAnnual: 2000.12
              projectedGrossAnnual: 2500.23
    VOIEPayrollReportExample:
      summary: VOIE - Payroll Report
      value:
        id: 41h4nzppn37u-voiepayroll
        portfolioId: 9qud7dtuzbew-13-port
        gseEnabled: true
        customerType: active
        customerId: 1275320
        requestId: 7a7qyps2iy
        consumerId: 3f7ff2cf0ffb3d0cd59875e070c9b1d4
        consumerSsn: '6789'
        requesterName: Decisioning API
        type: voiePayroll
        status: success
        createdDate: 1579819592
        title: Verification of Income and Employment - Payroll
        constraints:
          payrollData:
            payrollDataRetrievalId: hahvhe2k0000
            employerNames:
              - ACME INC
          reportCustomFields:
            label: loanID
            value: '12345'
            shown: true
          payStatementsFromDate: 1580558400
        employmentHistory:
          asOfDate: 1596175200
          employerName: ACME INC
          payrollSource: finPayroll
          employee:
            name: John Doe Smith
            givenName: John
            middleName: Doe
            familyName: Smith
            address:
              - address1: Address 1
                city: City
                state: TX
                zip: '99999'
          employment:
            employerName: ACME INC
            legalEntityId: '752760000'
            originalHireDate: 1527832800
            latestHireDate: 1527832800
            latestPayDate: 1596175200
            daysSinceLastPay: 10
            numberPayCadenceWithoutPay: 1
            employmentEndDate: 1527832800
            employmentDuration: P1Y6M0D
            employerAddress:
              - address1: Address 1
                city: City
                state: TX
                zip: '99999'
            employmentStatusCode: A
            employmentStatusName: Active
            workLevelCode: FT
            workLevelName: Full Time-Regular
            workLevelStatus: Full Time
            positionTitle: Shift Supervisor
            positionDuration: P1Y6M0D
          income:
            payFrequency: Weekly
            payType: Hourly
            basePayRate: 27.5
            annualIncome:
              - year: '2021'
                grossPayAmountYTD: 73925.12
                netPayAmountYTD: 73925.12
                basePayAmountYTD: 73925.12
                overtimePayAmountYTD: 100.01
              - year: '2020'
                grossPayAmountYTD: 73925.12
                netPayAmountYTD: 73925.12
                basePayAmountYTD: 73925.12
                overtimePayAmountYTD: 100.01
              - year: '2019'
                grossPayAmountYTD: 73925.12
                netPayAmountYTD: 73925.12
                basePayAmountYTD: 73925.12
                overtimePayAmountYTD: 100.01
            monthlyIncome:
              estimatedMonthlyBasePay: 2000
              estimatedMonthlyOvertimePay: 100
            directPayStatements:
              - payrollPayHistoryId: cy1a742k28
                lastPayPeriodIndicator: true
                mainPayStatementFields:
                  payDate: 1596175200
                  startDate: 1595138400
                  endDate: 1595656800
                  payPeriodHours: 40
                  payFrequency: Weekly
                  payType: Hourly
                  grossPayAmount: 1888.75
                  grossPayAmountYTD: 73925
                  netPayAmount: 1401.95
                  netPayAmountYTD: 73925
                earnings:
                  - name: basePayAmount
                    type: base
                    rate: 27.5
                    amount: 1100
                    amountYTD: 5500
                deductions:
                  - type: Federal tax
                    amount: 143.45
                  - type: State tax
                    amount: 12.5
                directDeposits:
                  - accountTypeCode: Savings
                    amount: 1401.95
                    accountLastFour: '1234'
                    routingNumber: '000000000'
    VOIEPaystubReportExample:
      summary: VOIE - Paystub Report
      value:
        id: 2f3z55zuwewm-voietxverify
        portfolioId: 9qud7dtuzbew-13-port
        customerType: active
        customerId: 1275320
        consumerId: 3f7ff2cf0ffb3d0cd59875e070c9b1d4
        consumerSsn: '6789'
        requesterName: Decisioning API
        requestId: 7a7qyps2iy
        type: voieTxVerify
        status: success
        createdDate: 1579819592
        title: Verification of Income and Employment - Paystub
        reportStyle: voieWithStatement
        constraints:
          voieWithStatementData:
            assetIds:
              - d50ed92f-543b-431c-8286-c8b8f6556679
            extractEarnings: true
            extractDeductions: false
            extractDirectDeposit: true
          reportCustomFields:
            - label: loanID
              value: '12345'
              shown: true
            - label: trackingID
              value: '5555'
              shown: true
        assetIds:
          - 6f8fb0a0-e882-4f57-b672-cf53f1397581
        numberOfBillableAssets: 1
        payStatements:
          payPeriod: LastPayPeriod
          billable: true
          assetId: 6f8fb0a0-e882-4f57-b672-cf53f1397581
          payDate: 1559241000
          startDate: 1557513000
          endDate: 1558722600
          netPayCurrent: 1802.22
          netPayYTD: 36000
          grossPayCurrent: 24200
          grossPayYTD: 72600
          employer:
            name: Rocket Surgery
          employee:
            name: Patrick Purchaser
          payStat:
            name: regular 1
            type: regular
            description: regular income
            amountCurrent: 6000
            amountYTD: 18000
          directDeposits:
            - amountCurrent: 1744.61
              accountLastFour: '1234'
          monthlyIncome:
            estimatedMonthlyBasePay: 2000
            estimatedMonthlyOvertimePay: 50
            estimatedMonthlyBonusPay: 20
            estimatedMonthlyCommissionPay: 50
          institutions: []
    VOIEPaystubWithTXVerifyReportExample:
      summary: VOIE - Paystub With TXVerify Report
      value:
        id: 2f3z55zuwewm-voietxverify
        customerId: 1275320
        consumerId: 3f7ff2cf0ffb3d0cd59875e070c9b1d4
        consumerSsn: '6789'
        requesterName: Decisioning API
        requestId: 7a7qyps2iy
        type: voieTxVerify
        status: success
        createdDate: 1579819592
        title: Verification of Income and Employment - Paystub (with TXVerify)
        constraints:
          accountIds:
            - '1000535275'
            - '6001966284'
          fromDate: 1620322948
          voieWithInterviewData:
            txVerifyInterview:
              - assetId: 6f8fb0a0-e882-4f57-b672-cf53f1397581
                accounts: []
            extractEarnings: true
            extractDeductions: false
            extractDirectDeposit: true
          reportCustomFields:
            - label: loanID
              value: '12345'
              shown: true
            - label: trackingID
              value: '5555'
              shown: true
          incomeStreamConfidenceMinimum: 50
        customerType: active
        portfolioId: 9qud7dtuzbew-13-port
        numberOfBillableAssets: 1
        reportStyle: voieWithInterview
        assetIds:
          - 6f8fb0a0-e882-4f57-b672-cf53f1397581
        payStatements:
          payPeriod: LastPayPeriod
          billable: true
          assetId: 6f8fb0a0-e882-4f57-b672-cf53f1397581
          payDate: 1559241000
          startDate: 1557513000
          endDate: 1558722600
          netPayCurrent: 1802.22
          netPayYTD: 36000
          grossPayCurrent: 24200
          grossPayYTD: 72600
          matchType: NET_PAY_MATCH
          employer:
            name: Rocket Surgery
          employee:
            name: Patrick Purchaser
          payStat:
            name: regular 1
            type: regular
            description: regular income
            amountCurrent: 6000
            amountYTD: 18000
          directDeposits:
            - fiName: America First
              accountType: Checking
              amountCurrent: 1744.61
              description: Payroll
          monthlyIncome:
            estimatedMonthlyBasePay: 2000
            estimatedMonthlyOvertimePay: 50
            estimatedMonthlyBonusPay: 20
            estimatedMonthlyCommissionPay: 50
          institutions:
            id: 101732
            name: FinBank
            urlHomeApp: https://finbank.prod.fini.city/CCBankImageMFA/login.jsp
            accounts:
              id: 1000023996
              number: '1111'
              ownerName: JOHN DOE
              ownerAddress: 924 GAINSVILLE HIGHWAY SUITE 130 BUFORD, GA 30518
              name: Checking
              type: checking
              availableBalance: 123.45
              aggregationStatusCode: 0
              balance: 123.45
              balanceDate: 1588350276
              averageMonthlyBalance: 301.45
              transactions: []
              details:
                interestMarginBalance: -50000
                availableCashBalance: 1500
                vestedBalance: 300000
                currentLoanBalance: 0
                availableBalanceAmount: 2000
              incomeStream:
                id: dens28i3vsch-voitxverify2
                name: none
                status: ACTIVE
                confidence: 70
                cadence:
                  startDate: 1577986990
                  stopDate: 1587986990
                  days: 180
                netAnnual: 110475.7
                projectedNetAnnual: 0
                estimatedGrossAnnual: 0
                projectedGrossAnnual: 151609
                incomeStreamMonths: 24
                averageMonthlyIncomeNet: 9206.31
                transactions:
                  - id: 100000527471
                    amount: 1802.22
                    postedDate: 1559241000
                    description: FINICITY INC PAYROLL
                    memo: Finicity amount credit
                    institutionTransactionId: '100000000'
                    category: Paycheck
                    payStatementMatchTypes:
                      - DATE
                      - NET_AMOUNT
                      - DIRECT_DEPOSIT_AMOUNT
                      - EMPLOYER_NAME
                      - INCOME_STREAM_PAYCHECK
              incomeStreams:
                - id: dens28i3vsch-voitxverify2
                  name: none
                  status: ACTIVE
                  confidence: 70
                  cadence:
                    startDate: 1577986990
                    stopDate: 1587986990
                    days: 180
                  netAnnual: 110475.7
                  projectedNetAnnual: 0
                  estimatedGrossAnnual: 0
                  projectedGrossAnnual: 151609
                  incomeStreamMonths: 24
                  averageMonthlyIncomeNet: 9206.31
                  transactions:
                    - id: 100000527471
                      amount: 1802.22
                      postedDate: 1559241000
                      description: FINICITY INC PAYROLL
                      memo: Finicity amount credit
                      institutionTransactionId: '100000000'
                      category: Paycheck
                      payStatementMatchTypes:
                        - DATE
                        - NET_AMOUNT
                        - DIRECT_DEPOSIT_AMOUNT
                        - EMPLOYER_NAME
                        - INCOME_STREAM_PAYCHECK
        institutions:
          id: 101732
          name: FinBank
          urlHomeApp: https://finbank.prod.fini.city/CCBankImageMFA/login.jsp
          accounts:
            - id: 1000023996
              ownerName: JOHN DOE
              ownerAddress: 924 GAINSVILLE HIGHWAY SUITE 130 BUFORD, GA 30518
              name: Checking
              number: '1111'
              type: checking
              aggregationStatusCode: 0
              incomeStreams:
                - id: dens28i3vsch-voietxverify
                  name: none
                  status: ACTIVE
                  confidence: 70
                  cadence:
                    startDate: 1577986990
                    stopDate: 1587986990
                    days: 180
                  netMonthly:
                    - month: 1522562400
                      net: 2004.77
                  netAnnual: 110475.7
                  projectedNetAnnual: 0
                  estimatedGrossAnnual: 0
                  projectedGrossAnnual: 151609
                  averageMonthlyIncomeNet: 9206.31
                  incomeStreamMonths: 24
                  transactions:
                    - id: 100000527471
                      amount: 1802.22
                      postedDate: 1559241000
                      description: FINICITY INC PAYROLL
                      memo: Finicity amount credit
                      institutionTransactionId: '100000000'
                      category: Paycheck
              balance: 123.45
              averageMonthlyBalance: 301.45
              transactions: []
              availableBalance: 123.45
    ObbBadRequestResponseExample:
      value:
        errorCode: 400
        message: "Missing required parameter 'customerId'"
    ObbUnauthorizedResponseExample:
      value:
        errorCode: 401
        message: 'Invalid Finicity-App-Key'
    ObbAccessForbiddenResponseExample:
      value:
        errorCode: 403
        message: 'Partner does not have access to this resource'
    ObbResourceNotFoundResponseExample:
      value:
        errorCode: 404
        message: 'Customer not found'
    ObbResourceConflictResponseExample:
      value:
        errorCode: 409
        message: 'Customer is not registered as a business'
    GenerateBalanceAnalyticsResponseExample:
      value:
        accountIds: [10001, 10002, 10003]
        businessId: 123
        createdDate: '2022-02-10T05:00:00-07:00'
        customerId: 10001
        reportId: '145cabe0-2b38-4175-9b7e-115431359839'
        reportPin: 'qert'
        requesterName: 'Mortage ABC LLC'
        title: 'Finicity Balance Analytics'
    GenerateCashFlowAnalyticsResponseExample:
      value:
        accountIds: [10001, 10002, 10003]
        businessId: 123
        createdDate: '2022-02-10T05:00:00-07:00'
        customerId: 10001
        reportId: '145cabe0-2b38-4175-9b7e-115431359839'
        reportPin: 'qert'
        requesterName: 'Mortage ABC LLC'
        title: 'Finicity Cashflow Analytics'
    BalanceAnalyticsReportExample:
      value:
        accountResults:
          - accountDetails:
              accountNumberDisplay: '8888'
              accountOwner:
                address: 123 Main St, Portland, OR 12345
                name: Johnny Appleseed
              aggregationAttemptDate: '2022-03-30T14:47:19-07:00'
              aggregationStatusCode: 0
              aggregationSuccessDate: '2022-03-30T14:47:19-07:00'
              currency: USD
              currentBalance: 2239.22
              id: 1234902309er
              institution:
                institutionIconUrl: https://prod-carpintero-branding.s3.us-west-2.amazonaws.com/101732/icon.svg
                institutionId: 12345
                institutionName: Wells Fargo
                institutionPrimaryColor: '#1B3E4A'
              institutionLoginId: 1007302745
              name: Super Checking
              realAccountNumberLast4: 5678
              status: active
              type: checking
            accountId: 5001127492
            balanceAnalyticsMetrics:
              availableBalance:
                description: Available Balance
                example: 1000.01
                type: number
              availableBalanceDate:
                description: Available Balance date
                example: '2022-02-18T02:34:00-07:00'
                type: string
                minLength: 25
                maxLength: 25
              averageDailyBalanceByMonthForTheReportTimePeriod:
                - amount: 890.99
                  period: last30to1
                  periodBeginDate: '2022-03-01'
                  periodEndDate: '2022-03-30'
              averageDailyBalanceForTheReportTimePeriod:
                description: Average Daily Balance
                example: -10442.53
                type: number
              averageWeekdayBalanceForTheReportTimePeriod:
                description: Average Weekday Balance
                example: -10442.53
                type: number
              countDailyNegativeBalancesByMonthForTheReportTimePeriod:
                - count: 5
                  period: last30to1
                  periodBeginDate: '2022-03-01'
                  periodEndDate: '2022-03-30'
              currentRunningBalance:
                description: Current Running Balance Date
                example: 1000.01
                type: number
              currentRunningBalanceDate:
                description: Current Running Balance date
                example: '2022-02-10T05:00:00-07:00'
                type: string
                minLength: 25
                maxLength: 25
              dailyBalancesByWeekdayForTheReportTimePeriod:
                - date: '2021-10-11'
                  dayOfWeek: Monday
                  endingBalance: 21527.3
              dailyBalancesForTheReportTimePeriod:
                - date: '2021-10-11'
                  dayOfWeek: Monday
                  endingBalance: 21527.3
              historicNumberOfWeeksAverageBalanceIncreasing:
                historicAverageWeeklyBalances:
                  - amount: 679.07
                    fromDate: '2020-01-01'
                    toDate: '2020-01-07'
                    week: 1
                historicNumberOfWeeksAverageBalanceIncreasing: 3
                historicNumberOfWeeksWithDataAvailable: 4
              maximumDailyBalanceByMonthForTheReportTimePeriod:
                - amount: 890.99
                  period: last30to1
                  periodBeginDate: '2022-03-01'
                  periodEndDate: '2022-03-30'
              maximumRunningBalanceForTheReportTimePeriod: -28749.44
              minimumDailyBalanceByMonthForTheReportTimePeriod:
                - amount: 890.99
                  period: last30to1
                  periodBeginDate: '2022-03-01'
                  periodEndDate: '2022-03-30'
              minimumRunningBalanceForTheReportTimePeriod: -28749.44
            currentReportRequest:
              reportBeginDate: '2022-03-01'
              reportEndDate: '2022-03-30'
              reportRequestDate: '2022-03-30T14:47:19-07:00'
              requestedDaysForReport: 90
              requestedReportBeginDate: '2022-01-01'
            historicDataAvailability:
              historicAvailabilityBeginDate: '2022-03-01'
              historicAvailabilityEndDate: '2022-03-30'
              historicAvailableDays: 30
              historicDataAvailability:
                Data is available from 2022-03-01 to 2022-03-30
        businessId: 4444
        businessSummary:
          balanceAnalyticsMetrics:
            availableBalance:
              description: Available Balance
              example: 1000.01
              type: number
            availableBalanceDate:
              description: Available Balance date
              example: '2022-02-18T02:34:00-07:00'
              type: string
              minLength: 25
              maxLength: 25
            averageDailyBalanceByMonthForTheReportTimePeriod:
              - amount: 890.99
                period: last30to1
                periodBeginDate: '2022-03-01'
                periodEndDate: '2022-03-30'
            averageDailyBalanceForTheReportTimePeriod:
              description: Average Daily Balance
              example: -10442.53
              type: number
            averageWeekdayBalanceForTheReportTimePeriod:
              description: Average Weekday Balance
              example: -10442.53
              type: number
            countDailyNegativeBalancesByMonthForTheReportTimePeriod:
              - count: 5
                period: last30to1
                periodBeginDate: '2022-03-01'
                periodEndDate: '2022-03-30'
            currentRunningBalance:
              description: Current Running Balance Date
              example: 1000.01
              type: number
            currentRunningBalanceDate:
              description: Current Running Balance date
              example: '2022-02-10T05:00:00-07:00'
              type: string
              minLength: 25
              maxLength: 25
            dailyBalancesByWeekdayForTheReportTimePeriod:
              - date: '2021-10-11'
                dayOfWeek: Monday
                endingBalance: 21527.3
            dailyBalancesForTheReportTimePeriod:
              - date: '2021-10-11'
                dayOfWeek: Monday
                endingBalance: 21527.3
            historicNumberOfWeeksAverageBalanceIncreasing:
              historicAverageWeeklyBalances:
                - amount: 679.07
                  fromDate: '2020-01-01'
                  toDate: '2020-01-07'
                  week: 1
              historicNumberOfWeeksAverageBalanceIncreasing: 3
              historicNumberOfWeeksWithDataAvailable: 4
            maximumDailyBalanceByMonthForTheReportTimePeriod:
              - amount: 890.99
                period: last30to1
                periodBeginDate: '2022-03-01'
                periodEndDate: '2022-03-30'
            maximumRunningBalanceForTheReportTimePeriod: -28749.44
            minimumDailyBalanceByMonthForTheReportTimePeriod:
              - amount: 890.99
                period: last30to1
                periodBeginDate: '2022-03-01'
                periodEndDate: '2022-03-30'
            minimumRunningBalanceForTheReportTimePeriod: -28749.44
          currentReportRequest:
            reportBeginDate: '2022-03-01'
            reportEndDate: '2022-03-30'
            reportRequestDate: '2022-03-30T14:47:19-07:00'
            requestedDaysForReport: 90
            requestedReportBeginDate: '2022-01-01'
          historicDataAvailability:
            historicAvailabilityBeginDate: '2022-03-01'
            historicAvailabilityEndDate: '2022-03-30'
            historicAvailableDays: 30
            historicDataAvailability:
              Data is available from 2022-03-01 to 2022-03-30
        customerId: 10001
        reportHeader:
          businessAddress: 123 Main St
          businessCity: Portland
          businessName: B&G Construction
          businessState: OR
          businessZip: '12345'
          referenceNumber: 32asdfaasd0823
          reportDate: '2022-03-16T21:28:38-07:00'
          reportId: 8ff8b4b2-706f-45c3-8d66-857bdb516214
        requesterName: 'Mortgage ABC LLC'
        title: 'Fincity Balance Analytics'
    CashFlowAnalyticsReportExample:
      value:
        accountResults:
          - accountDetails:
              accountNumberDisplay: '8888'
              accountOwner:
                address: 123 Main St, Portland, OR 12345
                name: Johnny Appleseed
              aggregationAttemptDate: '2022-03-30T14:47:19-07:00'
              aggregationStatusCode: 0
              aggregationSuccessDate: '2022-03-30T14:47:19-07:00'
              currency: USD
              currentBalance: 2239.22
              id: 1234902309er
              institution:
                institutionIconUrl: https://prod-carpintero-branding.s3.us-west-2.amazonaws.com/101732/icon.svg
                institutionId: 12345
                institutionName: Wells Fargo
                institutionPrimaryColor: '#1B3E4A'
              institutionLoginId: 1007302745
              name: Super Checking
              realAccountNumberLast4: 5678
              status: active
              type: checking
            accountId: 10000001
            cashflowAnalyticsMetrics:
              inflow:
                averageDepositByMonthForTheReportTimePeriod:
                  - amount: 890.99
                    period: last30to1
                    periodBeginDate: '2022-03-01'
                    periodEndDate: '2022-03-30'
                countDepositsByMonthForTheReportTimePeriod:
                  - count: 5
                    period: last30to1
                    periodBeginDate: '2022-03-01'
                    periodEndDate: '2022-03-30'
                historicCountOfDepositTransactions: 20
                historicSumOfDeposits: 389.22
                maximumDepositByMonthForTheReportTimePeriod:
                  - amount: 890.99
                    period: last30to1
                    periodBeginDate: '2022-03-01'
                    periodEndDate: '2022-03-30'
                minimumDepositByMonthForTheReportTimePeriod:
                  - amount: 890.99
                    period: last30to1
                    periodBeginDate: '2022-03-01'
                    periodEndDate: '2022-03-30'
                sumDepositsByMonthForTheReportTimePeriod:
                  - amount: 890.99
                    period: last30to1
                    periodBeginDate: '2022-03-01'
                    periodEndDate: '2022-03-30'
              negativeTriggers:
                insufficientFundFees:
                  countOfTransactionsForTheReportTimePeriod: 1
                  sumOfTransactionsForTheReportTimePeriod: -1.65
                  transactions:
                    - amount: -1.65
                      description: OVERDRAFT FEE
                      memo: NSF
                      postedDate: '2022-12-19'
                      transactionId: 23092384290
              outflow:
                averageDepositByMonthForTheReportTimePeriod:
                  - amount: 890.99
                    period: last30to1
                    periodBeginDate: '2022-03-01'
                    periodEndDate: '2022-03-30'
                countDepositsByMonthForTheReportTimePeriod:
                  - count: 5
                    period: last30to1
                    periodBeginDate: '2022-03-01'
                    periodEndDate: '2022-03-30'
                historicCountOfDepositTransactions: 20
                historicSumOfDeposits: 389.22
                maximumDepositByMonthForTheReportTimePeriod:
                  - amount: 890.99
                    period: last30to1
                    periodBeginDate: '2022-03-01'
                    periodEndDate: '2022-03-30'
                minimumDepositByMonthForTheReportTimePeriod:
                  - amount: 890.99
                    period: last30to1
                    periodBeginDate: '2022-03-01'
                    periodEndDate: '2022-03-30'
                sumDepositsByMonthForTheReportTimePeriod:
                  - amount: 890.99
                    period: last30to1
                    periodBeginDate: '2022-03-01'
                    periodEndDate: '2022-03-30'
              revenueByMonthForTheReportTimePeriod:
                - amount: 890.99
                  period: last30to1
                  periodBeginDate: '2022-03-01'
                  periodEndDate: '2022-03-30'
              revenueForTheReportTimePeriod: 43893.44
              transactionAnalytics:
                activityDepositsCreditsForTheReportTimePeriod:
                  - date: '2020-03-25'
                    depositsCredits: 500.0
                    transactionDescription: VENMO CASHOUT
                activityWithdrawalsDebitsForTheReportTimePeriod:
                  - date: '2020-03-25'
                    transactionDescription: Payment to Chase card ending in
                    withdrawalsDebits: 15.69
                averageTransactionValueByMonthForTheReportTimePeriod:
                  - amount: 890.99
                    period: last30to1
                    periodBeginDate: '2022-03-01'
                    periodEndDate: '2022-03-30'
                historicWeeksWithZeroTransactions:
                  historicNumberOfWeeksWithDataAvailable: 10
                  historicNumberOfWeeksZeroTransactions: 5
                  historicWeeksWithZeroTransactions:
                    - fromDate: '2020-01-01'
                      toDate: '2020-01-07'
                      week: 1
                lastTransactionDate:
                  items:
                    properties:
                      date:
                        description: Date the deposit transaction was posted
                        example: '2020-03-25'
                        type: string
                      depositsCredits:
                        description:
                          Amount of transaction if deposit, otherwise null
                        example: 500.0
                        type: number
                      withdrawalsDebits:
                        description:
                          Amount of transaction if withdrawal, otherwise null
                        example: 500.0
                        type: number
                      zeroAmountTransaction:
                        description:
                          Amount of transaction if zero, otherwise null
                        example: 0.0
                        type: number
                      transactionDescription:
                        description: Description of transaction
                        example: VENMO CASHOUT
                        type: string
                    required:
                      - date
                    type: object
                  type: array
                netCashFlowByMonthForTheReportTimePeriod:
                  - amount: 890.99
                    period: last30to1
                    periodBeginDate: '2022-03-01'
                    periodEndDate: '2022-03-30'
                netCashFlowForTheReportTimePeriod: 1544.94
            currentReportRequest:
              reportBeginDate: '2022-03-01'
              reportEndDate: '2022-03-30'
              reportRequestDate: '2022-03-30T14:47:19-07:00'
              requestedDaysForReport: 90
              requestedReportBeginDate: '2022-01-01'
            historicDataAvailability:
              historicAvailabilityBeginDate: '2022-03-01'
              historicAvailabilityEndDate: '2022-03-30'
              historicAvailableDays: 30
              historicDataAvailability:
                Data is available from 2022-03-01 to 2022-03-30
        businessId: 4444
        businessSummary:
          cashflowAnalyticsMetrics:
            inflow:
              averageDepositByMonthForTheReportTimePeriod:
                - amount: 890.99
                  period: last30to1
                  periodBeginDate: '2022-03-01'
                  periodEndDate: '2022-03-30'
              countDepositsByMonthForTheReportTimePeriod:
                - count: 5
                  period: last30to1
                  periodBeginDate: '2022-03-01'
                  periodEndDate: '2022-03-30'
              historicCountOfDepositTransactions: 20
              historicSumOfDeposits: 389.22
              maximumDepositByMonthForTheReportTimePeriod:
                - amount: 890.99
                  period: last30to1
                  periodBeginDate: '2022-03-01'
                  periodEndDate: '2022-03-30'
              minimumDepositByMonthForTheReportTimePeriod:
                - amount: 890.99
                  period: last30to1
                  periodBeginDate: '2022-03-01'
                  periodEndDate: '2022-03-30'
              sumDepositsByMonthForTheReportTimePeriod:
                - amount: 890.99
                  period: last30to1
                  periodBeginDate: '2022-03-01'
                  periodEndDate: '2022-03-30'
            negativeTriggers:
              insufficientFundFees:
                countOfTransactionsForTheReportTimePeriod: 1
                sumOfTransactionsForTheReportTimePeriod: -1.65
                transactions:
                  - amount: -1.65
                    description: OVERDRAFT FEE
                    memo: NSF
                    postedDate: '2022-12-19'
                    transactionId: 23092384290
            outflow:
              averageDepositByMonthForTheReportTimePeriod:
                - amount: 890.99
                  period: last30to1
                  periodBeginDate: '2022-03-01'
                  periodEndDate: '2022-03-30'
              countDepositsByMonthForTheReportTimePeriod:
                - count: 5
                  period: last30to1
                  periodBeginDate: '2022-03-01'
                  periodEndDate: '2022-03-30'
              historicCountOfDepositTransactions: 20
              historicSumOfDeposits: 389.22
              maximumDepositByMonthForTheReportTimePeriod:
                - amount: 890.99
                  period: last30to1
                  periodBeginDate: '2022-03-01'
                  periodEndDate: '2022-03-30'
              minimumDepositByMonthForTheReportTimePeriod:
                - amount: 890.99
                  period: last30to1
                  periodBeginDate: '2022-03-01'
                  periodEndDate: '2022-03-30'
              sumDepositsByMonthForTheReportTimePeriod:
                - amount: 890.99
                  period: last30to1
                  periodBeginDate: '2022-03-01'
                  periodEndDate: '2022-03-30'
            revenueByMonthForTheReportTimePeriod:
              - amount: 890.99
                period: last30to1
                periodBeginDate: '2022-03-01'
                periodEndDate: '2022-03-30'
            revenueForTheReportTimePeriod: 43893.44
            transactionAnalytics:
              activityDepositsCreditsForTheReportTimePeriod:
                - date: '2020-03-25'
                  depositsCredits: 500.0
                  transactionDescription: VENMO CASHOUT
              activityWithdrawalsDebitsForTheReportTimePeriod:
                - date: '2020-03-25'
                  transactionDescription: Payment to Chase card ending in
                  withdrawalsDebits: 15.69
              averageTransactionValueByMonthForTheReportTimePeriod:
                - amount: 890.99
                  period: last30to1
                  periodBeginDate: '2022-03-01'
                  periodEndDate: '2022-03-30'
              historicWeeksWithZeroTransactions:
                historicNumberOfWeeksWithDataAvailable: 10
                historicNumberOfWeeksZeroTransactions: 5
                historicWeeksWithZeroTransactions:
                  - fromDate: '2020-01-01'
                    toDate: '2020-01-07'
                    week: 1
              lastTransactionDate:
                items:
                  properties:
                    date:
                      description: Date the deposit transaction was posted
                      example: '2020-03-25'
                      type: string
                    depositsCredits:
                      description:
                        Amount of transaction if deposit, otherwise null
                      example: 500.0
                      type: number
                    withdrawalsDebits:
                      description:
                        Amount of transaction if withdrawal, otherwise null
                      example: 500.0
                      type: number
                    zeroAmountTransaction:
                      description: Amount of transaction if zero, otherwise null
                      example: 0.0
                      type: number
                    transactionDescription:
                      description: Description of transaction
                      example: VENMO CASHOUT
                      type: string
                  required:
                    - date
                  type: object
                type: array
              netCashFlowByMonthForTheReportTimePeriod:
                - amount: 890.99
                  period: last30to1
                  periodBeginDate: '2022-03-01'
                  periodEndDate: '2022-03-30'
              netCashFlowForTheReportTimePeriod: 1544.94
          currentReportRequest:
            reportBeginDate: '2022-03-01'
            reportEndDate: '2022-03-30'
            reportRequestDate: '2022-03-30T14:47:19-07:00'
            requestedDaysForReport: 90
            requestedReportBeginDate: '2022-01-01'
          historicDataAvailability:
            historicAvailabilityBeginDate: '2022-03-01'
            historicAvailabilityEndDate: '2022-03-30'
            historicAvailableDays: 30
            historicDataAvailability:
              Data is available from 2022-03-01 to 2022-03-30
        customerId: 10001
        reportHeader:
          businessAddress: 123 Main St
          businessCity: Portland
          businessName: B&G Construction
          businessState: OR
          businessZip: '12345'
          referenceNumber: 32asdfaasd0823
          reportDate: '2022-03-16T21:28:38-07:00'
          reportId: 8ff8b4b2-706f-45c3-8d66-857bdb516214
        requesterName: 'Mortgage ABC LLC'
        title: 'Finicity Cash Flow Analytics'
        totalRevenue: 904909.33
  parameters:
    AssetIdParameter:
      description: The asset ID
      name: assetId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/AssetId'
      example: 097545c5-1c2a-4f20-a5ef-77f0820344c9-2018601178
    CustomerIdParameter:
      description: A customer ID
      name: customerId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/CustomerId'
      example: '1005061234'
    AccountStatusParameter:
      description: A filter to fetch account in the given status
      name: status
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/AccountStatus'
      example: pending
    WithInsightsParameter:
      description: >-
        If this parameter is true, Identity Insights data will be returned along
        with the account owner information
      name: withInsights
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/WithInsights'
      example: false
    TransactionIdParameter:
      description: A transaction ID
      name: transactionId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/TransactionId'
      example: 21284820852
    IncludePendingParameter:
      description: If pending transactions must be included
      name: includePending
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/IncludePending'
      example: false
    ApplicationIdPathParameter:
      description: The application ID
      name: applicationId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ApplicationId'
      example: '123456789'
    ApplicationIdQueryParameter:
      description: The application ID
      name: applicationId
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/ApplicationId'
      example: '123456789'
    AppRegistrationStatusParameter:
      description: Look up app registration requests by status
      name: status
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/AppRegistrationStatus'
      example: P
    ApplicationNameParameter:
      description: Look up app registration requests by app name
      name: appName
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/ApplicationName'
      example: Awesome Budget App
    SubmittedDateParameter:
      description:
        Look up app registration requests by the date they were submitted
      name: submittedDate
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/UnixDate'
      example: 1607450357
    ModifiedDateParameter:
      description:
        Look up app registration requests by the date the request was updated.
        This can be used to determine when a request was updated to "A" or "R".
      name: modifiedDate
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/UnixDate'
      example: 1607450357
    PreAppIdQueryParameter:
      description: The application registration tracking ID
      name: preAppId
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/PreAppId'
      example: '2581'
    PreAppIdPathParameter:
      description: The application registration tracking ID
      name: preAppId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/PreAppId'
      example: '2581'
    CustomerSearchParameter:
      name: search
      in: query
      required: false
      description: >-
        The text you wish to match. Leave this empty if you wish to return all
        customers. Must be URL-encoded (see: [Handling Spaces in
        Queries](https://docs.finicity.com/endpoint-syntax-and-format/)).
      schema:
        type: string
        example: searchvalue
    CustomerUsernameParameter:
      name: username
      in: query
      required: false
      description: Username for exact match (will return 0 or 1 record)
      schema:
        $ref: '#/components/schemas/CustomerUsername'
      example: customerusername1
    CustomerTypeParameter:
      name: type
      in: query
      required: false
      description: >-
        "testing" or "active" to return only customers of that type, or leave
        empty to return all customers
      schema:
        $ref: '#/components/schemas/CustomerType'
      example: 'active'
    AccountIdParameter:
      description: The account ID
      name: accountId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/AccountId'
      example: '5011648377'
    StatementIndexParameter:
      name: index
      in: query
      required: false
      description:
        Request statements from 1-24. By default, 1 is the most recent
        statement. Increase the index value to count back (by month) and
        retrieve its most recent statement.
      schema:
        type: integer
        format: int32
        default: 1
        example: 1
        maximum: 24
    SubscriptionIdParameter:
      description: The subscription ID
      name: subscriptionId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/SubscriptionId'
      example: 17554874
    InstitutionLoginIdParameter:
      description: The institution login ID
      name: institutionLoginId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/InstitutionLoginId'
      example: '1007302745'
    InstitutionIdParameter:
      description: The institution ID
      name: institutionId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/NumericInstitutionId'
      example: 4222
    RequiredPurposeParameter:
      name: purpose
      in: query
      required: true
      description: >-
        2-digit code from [Permissible Purpose
        Codes](https://docs.finicity.com/permissible-purpose-codes/), specifying
        the reason for retrieving this report. Required for retrieving some
        reports.
      schema:
        type: string
      example: '3F'
    PurposeParameter:
      name: purpose
      in: query
      required: false
      description: >-
        2-digit code from [Permissible Purpose
        Codes](https://docs.finicity.com/permissible-purpose-codes/), specifying
        the reason for retrieving this report. Required for retrieving some
        reports.
      schema:
        $ref: '#/components/schemas/PurposeCode'
      example: '3F'
    ReportIdParameter:
      name: reportId
      in: path
      description: ID of the report
      required: true
      schema:
        $ref: '#/components/schemas/ReportId'
      example: u4hstnnak45g
    OnBehalfOfParameter:
      name: onBehalfOf
      in: query
      description:
        The name of the entity you are retrieving the report on behalf of
      required: false
      schema:
        type: string
        example: 'Some entity'
    ConsumerIdParameter:
      description: The consumer ID
      name: consumerId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ConsumerId'
      example: '0bf46322c167b562e6cbed9d40e19a4c'
    PortfolioIdParameter:
      description:
        A portfolio ID with the portfolio version number. Using the portfolio
        number without a version number will return the most recently generated
        reports.
      name: portfolioId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/PortfolioId'
      example: y4zsgccj4xpw-6-port
    StartParameter:
      name: start
      in: query
      required: false
      description: Index of the page of results to return
      schema:
        type: integer
        format: int32
        default: 1
        example: 1
    LimitParameter:
      name: limit
      in: query
      required: false
      description: Maximum number of results per page
      schema:
        type: integer
        format: int32
        default: 25
        maximum: 1000
        example: 1
    SortParameter:
      name: sort
      in: query
      required: false
      description: 'Date sort order: "asc" for ascending, "desc" for descending'
      schema:
        type: string
        default: 'desc'
        example: 'desc'
    ResultPageParameter:
      name: page
      in: query
      required: false
      description: Index of the page of results to return
      schema:
        type: integer
        format: int32
        default: 1
        example: 1
    ResultPageSizeParameter:
      name: pageSize
      in: query
      required: false
      description: Maximum number of results per page
      schema:
        type: integer
        format: int32
        default: 1
        example: 20
    ProductTypeParameter:
      name: type
      in: query
      description:
        'A product type: "transAgg", "ach", "stateAgg", "voi", "voa", "aha",
        "availBalance", "accountOwner"'
      required: false
      schema:
        type: string
        example: voa
    InstitutionSearchParameter:
      name: search
      in: query
      description:
        Search term (financial institution `name` field). Leave empty for all
        FIs.
      required: false
      schema:
        type: string
        example: finbank
    RequiredFromDateParameter:
      description: A start date
      name: fromDate
      in: query
      required: true
      schema:
        $ref: '#/components/schemas/UnixDate'
      example: 1607450357
    RequiredToDateParameter:
      description: A end date
      name: toDate
      in: query
      required: true
      schema:
        $ref: '#/components/schemas/UnixDate'
      example: 1607450357
    ReportCallbackUrlParameter:
      name: callbackUrl
      in: query
      required: false
      description:
        A Report Listener URL to receive notifications. The webhook must respond
        to the Finicity API with a 2xx HTTP status code.
      schema:
        type: string
        example: 'https://finicity-test/webhook'
    ConsentReceiptIdParameter:
      description: Third party access key receipt ID
      name: consentReceiptId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ConsentReceiptId'
      example: cr_4pfI3r1X8aOHrDDwrwC01NHFxOXlT1
    StatementTypeParameter:
      name: type
      in: query
      required: false
      description: The type of statement to retrieve
      schema:
        $ref: '#/components/schemas/StatementType'
      example: taxStatement
    AccountTypeParameter:
      description: >-
        A filter to fetch accounts for the given type. Currently supported
        types: "ava"
      name: account_type
      in: query
      required: false
      schema:
        type: string
      example: ava
    ReferenceNumberParameter:
      name: reference-number
      in: query
      required: false
      description: Partner-provided reference number to correlate reports.
      schema:
        type: string
        example: abc123
    ObbReportIdParameter:
      description: Report ID generated and returned by OBB products
      example: bcab9592-e032-4e7b-b737-0380619a0573
      in: path
      name: obb_report_id
      required: true
      schema:
        description: Report ID generated and returned by OBB products
        type: string
  schemas:
    ACHDetails:
      required:
        - routingNumber
        - realAccountNumber
      type: object
      properties:
        routingNumber:
          type: string
          description: >-
            The routing number of the financial institution for specific
            customer account
          example: '123456789'
        realAccountNumber:
          type: string
          description:
            The account number for initiating ACH transfers for this account
          example: '002345678901'
      description:
        The routing and account number information to initiate ACH transfers
    AccessToken:
      required:
        - token
      type: object
      description: >-
        A temporary access token to be passed in the `Finicity-App-Token` HTTP
        header of all subsequent API requests
      properties:
        token:
          description: The access token value
          type: string
          example: YBh22Sb9Es6e66Q7lWdt
    AccountDetails:
      type: object
      properties:
        interestMarginBalance:
          type: number
          description: >-
            Only available for investment accounts. Net interest earned after
            deducting interest paid out.
          example: -50000
        availableCashBalance:
          type: number
          description: >-
            Only available for investment accounts. Amount available for cash
            withdrawal.
          example: 1500
        vestedBalance:
          type: number
          description:
            Only available for investment accounts. Vested amount in account.
          example: 300000
        currentLoanBalance:
          type: number
          description:
            Only available for investment accounts. Current loan balance.
          example: 0
        availableBalanceAmount:
          type: number
          description: The available balance for the account
          example: 1000
    AccountId:
      type: string
      description: An account ID
      example: '5011648377'
    AccountNumberDisplay:
      type: string
      description: |-
        The account number from a financial institution in truncated format:

          * Last four digits: "1234"

          * Last four digits with suffix: "1234-9"

          * Full value for string accounts: "john@gmail.com"
        example: '1234-9'
    AccountNumberLast4:
      type: string
      description: The last 4 digits of the ACH account number
      example: '5678'
    AccountOwner:
      required:
        - ownerName
        - ownerAddress
      type: object
      properties:
        ownerName:
          type: string
          description: >-
            The name of the account owner. Can be multiple account owners in one
            string. This is how the source data is returned from the
            institution.
          example: John Smith
        ownerAddress:
          $ref: '#/components/schemas/Address'
        asOfDate:
          $ref: '#/components/schemas/UnixDate'
      description: Owner of a customer account
    AccountOwnerAddress:
      description: Account owner address
      type: object
      properties:
        ownerAddress:
          $ref: '#/components/schemas/Address'
        type:
          $ref: '#/components/schemas/AddressType'
        line1:
          $ref: '#/components/schemas/AddressLine1'
        line2:
          $ref: '#/components/schemas/AddressLine2'
        line3:
          $ref: '#/components/schemas/AddressLine3'
        city:
          $ref: '#/components/schemas/City'
        state:
          $ref: '#/components/schemas/State'
        postalCode:
          $ref: '#/components/schemas/ZipCode'
        country:
          $ref: '#/components/schemas/Country'
    AccountOwnerAddresses:
      description: List of addresses
      type: array
      items:
        $ref: '#/components/schemas/AccountOwnerAddress'
    AccountOwnerDetails:
      required:
        - ownerName
        - addresses
      type: object
      properties:
        relationship:
          $ref: '#/components/schemas/AccountOwnerRelationshipType'
        ownerName:
          $ref: '#/components/schemas/AccountOwnerName'
        firstName:
          $ref: '#/components/schemas/FirstName'
        middleName:
          $ref: '#/components/schemas/MiddleName'
        lastName:
          $ref: '#/components/schemas/LastName'
        suffix:
          $ref: '#/components/schemas/Suffix'
        nameClassification:
          $ref: '#/components/schemas/NameClassificationType'
        nameClassificationconfidencescore:
          $ref: '#/components/schemas/ClassificationConfidenceScore'
        addresses:
          $ref: '#/components/schemas/AccountOwnerAddresses'
        emails:
          $ref: '#/components/schemas/AccountOwnerEmails'
        phones:
          $ref: '#/components/schemas/AccountOwnerPhones'
        documentations:
          $ref: '#/components/schemas/AccountOwnerDocumentations'
        identityInsights:
          $ref: '#/components/schemas/AccountOwnerIdentityInsights'
      description: Owner of a customer account
    AccountOwnerDocumentation:
      description: Account owner documentation
      type: object
      properties:
        taxId:
          $ref: '#/components/schemas/TaxId'
        taxIdCountry:
          $ref: '#/components/schemas/Country'
        governmentId:
          $ref: '#/components/schemas/GovernmentId'
    AccountOwnerDocumentations:
      description: List of account owner documentation
      type: array
      items:
        $ref: '#/components/schemas/AccountOwnerDocumentation'
    AccountOwnerEmail:
      description: Account owner email
      type: object
      properties:
        isPrimary:
          $ref: '#/components/schemas/AccountOwnerEmailPrimary'
        email:
          $ref: '#/components/schemas/EmailAddress'
        emailType:
          $ref: '#/components/schemas/AccountOwnerEmailType'
    AccountOwnerEmailPrimary:
      type: boolean
      description: The email is primary.
      example: true
    AccountOwnerEmailType:
      type: string
      description: |-
        The account owner's email type.

        * "Personal" 

        * "Business"
      example: Personal
    AccountOwnerEmails:
      description: List of emails
      type: array
      items:
        $ref: '#/components/schemas/AccountOwnerEmail'
    AccountOwnerHolders:
      required:
        - holders
      type: object
      properties:
        holders:
          type: array
          items:
            $ref: '#/components/schemas/AccountOwnerDetails'
          description: List of account owners
    AccountOwnerIdentityInsights:
      description: List of account owner Identity Insights
      type: object
      properties:
        isEmailValid:
          $ref: '#/components/schemas/EmailValid'
        emailFirstSeenDays:
          $ref: '#/components/schemas/EmailFirstSeenDays'
        emailDomainCreationDate:
          $ref: '#/components/schemas/EmailDomainCreationDate'
        emailToName:
          $ref: '#/components/schemas/EmailToName'
        ipRisk:
          $ref: '#/components/schemas/IpRisk'
        ipRiskScore:
          $ref: '#/components/schemas/IpRiskScore'
        ipLastSeenDays:
          $ref: '#/components/schemas/IpLastSeenDays'
        ipGeolocationCountryCode:
          $ref: '#/components/schemas/IpGeolocationCountryCode'
        ipGeolocationSubdivision:
          $ref: '#/components/schemas/IpGeolocationSubdivision'
        ipPhoneDistance:
          $ref: '#/components/schemas/IpPhoneDistance'
        ipAddressDistance:
          $ref: '#/components/schemas/IpAddressDistance'
        isPhoneValid:
          $ref: '#/components/schemas/PhoneValid'
        phoneLineType:
          $ref: '#/components/schemas/PhoneLineType'
        phoneCarrier:
          $ref: '#/components/schemas/PhoneCarrier'
        phoneCountryCode:
          $ref: '#/components/schemas/PhoneCountryCode'
        phoneLastSeenDays:
          $ref: '#/components/schemas/PhoneLastSeenDays'
        phoneEmailFirstSeenDays:
          $ref: '#/components/schemas/PhoneEmailFirstSeenDays'
        phoneToName:
          $ref: '#/components/schemas/PhoneToName'
        phoneToAddress:
          $ref: '#/components/schemas/PhoneToAddress'
        addressValidityLevel:
          $ref: '#/components/schemas/AddressValidityLevel'
        addressToName:
          $ref: '#/components/schemas/AddressToName'
        identityNetworkScore:
          $ref: '#/components/schemas/IdentityNetworkScore'
        identityRiskScore:
          $ref: '#/components/schemas/IdentityRiskScore'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/Warnings'
    AccountOwnerName:
      type: string
      description: >-
        The full name of the account owner. Multiple account owners are returned
        in one string per the source data from the institution.
      example: 'John Smith, PhD'
    AccountOwnerPhone:
      description: Consumer phone
      type: object
      properties:
        type:
          $ref: '#/components/schemas/AccountOwnerPhoneType'
        country:
          $ref: '#/components/schemas/PhoneCountry'
        phone:
          $ref: '#/components/schemas/PhoneNumber'
    AccountOwnerPhoneType:
      type: string
      description: |-
        The account owner's phone type:   

        * "HOME"

        * "BUSINESS"

        * "CELL"

        * "FAX"
      example: HOME
    AccountOwnerPhones:
      description: List of phones
      type: array
      items:
        $ref: '#/components/schemas/AccountOwnerPhone'
    AccountOwnerRelationshipType:
      type: string
      description: |-
        The type of relationship to the account:  
        * "AUTHORIZED_USER"  

        * "BUSINESS"   

        * "FOR_BENEFIT_OF_PRIMARY"  

        * "FOR_BENEFIT_OF_PRIMARY_JOINT_RESTRICTED"  

        * "FOR_BENEFIT_OF_SECONDARY"

        * "FOR_BENEFIT_OF_SECONDARY_JOINT_RESTRICTED"

        * "FOR_BENEFIT_OF_SOLE_OWNER_RESTRICTED"

        * "POWER_OF_ATTORNEY"

        * "PRIMARY_JOINT_TENANTS"

        * "PRIMARY"

        * "PRIMARY_BORROWER"

        * "PRIMARY_JOINT"

        * "SECONDARY"

        * "SECONDARY_JOINT_TENANTS"

        * "SECONDARY_BORROWER"

        * "SECONDARY_JOINT"

        * "SOLE_OWNER"

        * "TRUSTEE"

        * "UNIFORM_TRANSFER_TO_MINOR"
      example: AUTHORIZED_USER
    AccountStatus:
      description: An account status
      type: string
      example: pending
    AccountType:
      type: string
      description: >-
        The list of supported account types.

        * "checking": Standard checking

        * "savings": Standard savings

        * "cd": Certificates of deposit

        * "moneyMarket": Money Market

        * "creditCard": Standard credit cards

        * "lineOfCredit": Home equity, line of credit

        * "investment": Generic investment (no details)

        * "investmentTaxDeferred": Generic tax-advantaged investment (no
        details)

        * "employeeStockPurchasePlan": ESPP, Employee Stock Ownership Plans
        (ESOP), Stock Purchase Plans

        * "ira": Individual Retirement Account (not Rollover or Roth)

        * "401k": 401K Plan

        * "roth": Roth IRA, Roth 401K

        * "403b": 403B Plan

        * "529plan": 529 Plan (True value is 529)

        * "rollover": Rollover IRA

        * "ugma": Uniform Gifts to Minors Act

        * "utma": Uniform Transfers to Minors Act

        * "keogh": Keogh Plan

        * "457plan": 457 Plan (True value is 457)

        * "401a": 401A Plan

        * "brokerageAccount": Brokerage Account

        * "educationSavings": Education Savings Account that is not a 529

        * "healthSavingsAccount": HSA (Health Savings Accounts)

        * "pension": Pension

        * "profitSharingPlan": Profit Sharing Plan

        * "roth401k": Roth 401K

        * "sepIRA": Simplified Employee Pension IRA

        * "simpleIRA": Simple IRA

        * "thriftSavingsPlan": Thrift Savings Plan

        * "variableAnnuity": Variable Annuity

        * "cryptocurrency": Cryptocurrency Wallet, Cryptocurrency Account

        * "mortgage": Standard Mortgages

        * "loan": Auto loans, equity loans, other loans

        * "studentLoan": Student Loan

        * "studentLoanGroup": Student Loan Group

        * "studentLoanAccount": Student Loan Account
      example: checking
    ActiveStatus:
      description: 'Possible values: "ACTIVE", "INACTIVE"'
      type: string
    Address:
      type: string
      description: A street address
      example: 434 W Ascension Way
    AddressLine1:
      type: string
      description: Address line 1
      example: 434 W Ascension Way
    AddressLine2:
      type: string
      description: Address line 2
      example: 'Suite #200'
    AddressLine3:
      type: string
      description: Address line 3
      example: UT 84123
    AddressToName:
      type: string
      description: |-
        The match status between the input name and the queried entity.
        * not-found
        * match
        * no-match
      example: match
    AddressType:
      type: string
      description: |-
        The type of address location:
        * "Business"
        * "Home"
        * "Mailing"
      example: Home
    AddressValidityLevel:
      type: number
      description: >-
        The most granular level to which the address could be validated. Ex. If
        the address was only valid to the city level (but not to the house
        level), it would return “valid_to_city”.
          * missing_address - An input address was not provided.

          * invalid - The input address is not valid.

          * valid - The input address is valid.

          * valid_to_country - The input address could only be validated to the
        country level. This means the country of the input address is valid, but
        the other elements of the input address were unable to be confirmed as
        valid or invalid.

          * valid_to_city - The input address was validated to the city level.
        This means the country, state, city, and postal code of the input
        address are valid, but the street, house number, and subpremise of the
        input address were unable to be confirmed as valid or invalid.

          * valid_to_street - The input address was validated to the street
        level. This means the country, state, city, postal code, and street of
        the input address are valid, but the house number and subpremise of the
        input address were unable to be confirmed as valid or invalid.

            * valid_to_house_number - The input address was validated to the
        street and house number level. This means the country, state,
        city,postal code, street, and house number of the input address are
        valid, but the subpremise of the input address was unable to be
        confirmed as valid or invalid. 

            * valid_to_house_number_missing_apt - The input address was
        validated to the street and house number level. This means the country,
        state, city, postal code, street, and house number of the input address
        are valid, but the subpremise of the input address was missing and thus
        unable to be confirmed as valid or invalid.
      example: valid
    AggregationStatus:
      type: string
      description: |-
        "pending" during account discovery, always "active" following
          successful account activation
      example: active
    AggregationStatusCode:
      type: integer
      description: >-
        The status of the most recent aggregation attempt (see [Aggregation
        Status Codes](https://docs.finicity.com/aggregation-status-codes/)).
        Won't be present until you have run your first aggregation for the
        account.
    AnnualIncome:
      required:
        - year
        - grossPayAmountYTD
      type: object
      properties:
        year:
          type: string
          description:
            The year for the amounts given in YTD totals for an employer
          example: 2022
        grossPayAmountYTD:
          type: number
          description:
            Year to date (YTD) gross pay amount for the indicated year
          example: 123.45
        netPayAmountYTD:
          type: number
          description: Year to date (YTD) net pay amount for the indicated year
          example: 123.45
        basePayAmountYTD:
          type: number
          description: Year to date (YTD) base pay amount for the year indicated
          example: 123.45
        overtimePayAmountYTD:
          type: number
          description:
            Year to date (YTD) overtime pay amount for the year indicated
          example: 123.45
        otherPayAmountYTD:
          type: number
          description: >-
            Year to date (YTD) other pay amount for the indicated year. Other
            pay is pay that is not categorized into one of the other categories.
          example: 123.45
        commissionPayAmount:
          type: number
          description:
            Year to date (YTD) commission pay amount for the indicated year
          example: 123.45
    AppFinancialInstitutionStatus:
      description:
        The registration status fields for each specific OAuth financial
        institution
      required:
        - id
        - decryptionKeyActivated
        - createdDate
        - lastModifiedDate
        - status
      type: object
      properties:
        id:
          $ref: '#/components/schemas/NumericInstitutionId'
        abbrvName:
          type: string
          description: The application's abbreviated name
          example: VAEJ
        logoUrl:
          type: string
          description: An URL to a logo file
          example: >-
            https://prod-direct-integration-client.s3.us-west-2.amazonaws.com/976521f99-7b36-4b3b-a3e0-faff9545836d/102224/90x90.png
        decryptionKeyActivated:
          type: boolean
          description:
            Status of decryption keys for financial institution app registration
          example: false
        createdDate:
          $ref: '#/components/schemas/UnixDate'
        lastModifiedDate:
          $ref: '#/components/schemas/UnixDate'
        status:
          type: boolean
          description: '"false" indicates registration is still pending'
          example: true
    AppRegistrationStatus:
      description: >-
        The status of an app registration request. "A" means approved. "P" means
        pending which is the status when initially submitted or when the app is
        modified and awaiting approval. "R" means rejected. If it is rejected
        there will be a note with the rejected reason.
      type: string
      example: P
    AppStatus:
      description: Registration status details for the application
      required:
        - partnerId
        - preAppId
        - appName
        - submittedDate
        - modifiedDate
        - status
      type: object
      properties:
        partnerId:
          $ref: '#/components/schemas/PartnerId'
        preAppId:
          $ref: '#/components/schemas/PreAppId'
        note:
          type: string
          description: >-
            A note on the registration. Typically used to indicate reasons for
            rejected apps.
          example: Approved
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        appName:
          $ref: '#/components/schemas/ApplicationName'
        submittedDate:
          $ref: '#/components/schemas/UnixDate'
        modifiedDate:
          $ref: '#/components/schemas/UnixDate'
        status:
          $ref: '#/components/schemas/AppRegistrationStatus'
        scopes:
          type: string
          description: Indicates scopes of data accessible to the app
          example: Account Info
        institutionDetails:
          type: array
          items:
            $ref: '#/components/schemas/AppFinancialInstitutionStatus'
          description:
            A list of the registration status for each FI for the application
    AppStatuses:
      description: >-
        The response for the Get App Registration Status API which returns an
        array of status objects
      required:
        - totalRecords
        - totalPages
        - pageNumber
        - numberOfRecordsPerPage
        - applications
      type: object
      properties:
        totalRecords:
          type: integer
          description: The total number of results
          format: int64
          example: 50
        totalPages:
          type: integer
          description: The total number of pages
          format: int64
          example: 5
        pageNumber:
          type: integer
          description: The current page number
          format: int64
          example: 2
        numberOfRecordsPerPage:
          type: integer
          description: The number of results per page
          format: int64
          example: 10
        applications:
          description: A list of applications with their statuses
          type: array
          items:
            $ref: '#/components/schemas/AppStatus'
    Application:
      required:
        - appDescription
        - appName
        - appUrl
        - ownerAddressLine1
        - ownerAddressLine2
        - ownerCity
        - ownerCountry
        - ownerName
        - ownerPostalCode
        - ownerState
        - image
      type: object
      properties:
        appDescription:
          type: string
          description: >-
            A short description of the app. This will be visible to end users in
            the FI interface.
          example: The app that makes your budgeting experience awesome
        appName:
          $ref: '#/components/schemas/ApplicationName'
        appUrl:
          type: string
          description: >-
            An URL for the app. This will be visible to end users in the FI
            interface.
          example: 'https://www.finicity.com/'
        ownerAddressLine1:
          $ref: '#/components/schemas/AddressLine1'
        ownerAddressLine2:
          $ref: '#/components/schemas/AddressLine2'
        ownerCity:
          type: string
          description: >-
            City for the business entity that owns the app. Information for
            registration purposes only and not given to the end user.
          example: Murray
        ownerCountry:
          type: string
          description: >-
            Country for the  business entity that owns the app. Information for
            registration purposes only and not given to the end user.
          example: USA
        ownerName:
          type: string
          description: >-
            Business name for the business entity that owns the app. Information
            for registration purposes only and not given to the end user.
          example: Finicity
        ownerPostalCode:
          type: string
          description: >-
            Zip code for the business entity that owns the app. Information for
            registration purposes only and not given to the end user.
          example: '84123'
        ownerState:
          type: string
          description: >-
            State for the business entity that owns the app. Information for
            registration purposes only and not given to the end user.
          example: UT
        image:
          type: string
          description: >-
            An app logo passed as a Base64 encoded image (1:1 SVG file, must be
            less than 50KB)
          example: >-
            PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjxzdmcgICAKICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICB2ZXJzaW9uPSIxLjEiCiAgIHZpZXdCb3g9IjAgMCAwIDAiCiAgIGhlaWdodD0iMCIKICAgd2lkdGg9IjAiPgogICAgPGcvPgo8L3N2Zz4K
    ApplicationId:
      type: string
      description: >-
        `applicationId` value returned from the Get App Registration Status API
        and the partner assign the customers to. This cannot be changed once
        set. Only applicable in cases of partners with multiple registered
        applications. If the partner only has one app, this can usually be
        omitted. This field is populated after the app is in a status approved.
      example: '123456789'
    ApplicationName:
      type: string
      description: The name of the application assigned to the customer
      example: Awesome Budget App
    AsOfDate:
      type: integer
      description:
        The last time the payroll data was updated in the payroll provider's
        system
      format: int64
      example: 1596175200
    Asset:
      description: An asset
      required:
        - assetId
      type: object
      properties:
        assetId:
          $ref: '#/components/schemas/AssetId'
    AssetId:
      type: string
      description: >-
        An asset ID. Generated by Connect or by using the Store Customer Pay
        Statement API.
      example: 097545c5-1c2a-4f20-a5ef-77f0820344c9-2018601178
    AvailableBalance:
      required:
        - id
        - realAccountNumberLast4
        - availableBalance
        - availableBalanceDate
        - clearedBalance
        - clearedBalanceDate
        - aggregationStatusCode
        - currency
      type: object
      properties:
        id:
          $ref: '#/components/schemas/NumericCustomerId'
        realAccountNumberLast4:
          $ref: '#/components/schemas/AccountNumberLast4'
        availableBalance:
          type: number
          description: The available balance of the account
          example: 173.47
        availableBalanceDate:
          $ref: '#/components/schemas/UnixDate'
        clearedBalance:
          type: number
          description: >-
            The cleared balance of the account. Also referred as posted balance,
            current balance, ledger balance
          example: 222.25
        clearedBalanceDate:
          $ref: '#/components/schemas/UnixDate'
        aggregationStatusCode:
          $ref: '#/components/schemas/AggregationStatusCode'
        currency:
          $ref: '#/components/schemas/Currency'
    BalanceAnalyticsAccountResult:
      properties:
        accountDetails:
          allOf:
            - $ref: '#/components/schemas/ObbAccountDetails'
          description: Details of the account and financial institution
        accountId:
          $ref: '#/components/schemas/NumericAccountId'
        balanceAnalyticsMetrics:
          allOf:
            - $ref: '#/components/schemas/BalanceAnalyticsMetrics'
          description: Balance analytics metrics and calculations
        currentReportRequest:
          allOf:
            - $ref: '#/components/schemas/ObbCurrentReportRequestDetails'
          description: Describes the requested attributes of the report
        historicDataAvailability:
          allOf:
            - $ref: '#/components/schemas/ObbDataAvailability'
          description:
            Describes the availability of historical data for the account
      required:
        - accountId
        - accountDetails
        - historicDataAvailability
        - currentReportRequest
      type: object
    BalanceAnalyticsBusinessSummary:
      properties:
        balanceAnalyticsMetrics:
          allOf:
            - $ref: '#/components/schemas/BalanceAnalyticsMetrics'
          description: >-
            Balance analytics metrics and calculations across all accounts in
            the report
        currentReportRequest:
          allOf:
            - $ref: '#/components/schemas/ObbCurrentReportRequestDetails'
          description: Describes the requested attributes of the report
        historicDataAvailability:
          allOf:
            - $ref: '#/components/schemas/ObbDataAvailability'
          description: >-
            Describes the availability of historical data for all accounts owned
            by the business
      type: object
    BalanceAnalyticsMetrics:
      properties:
        availableBalance:
          description: Available Balance
          example: 1000.01
          type: number
        availableBalanceDate:
          description: Available Balance date
          example: '2022-02-18T02:34:00-07:00'
          type: string
          minLength: 25
          maxLength: 25
        averageDailyBalanceByMonthForTheReportTimePeriod:
          description:
            Average daily ending balance each month over the report time period
          items:
            $ref: '#/components/schemas/ObbDateRangeAndAmount'
          type: array
        averageDailyBalanceForTheReportTimePeriod:
          description: Average Daily Balance
          example: -10442.53
          type: number
        averageWeekdayBalanceForTheReportTimePeriod:
          description: Average Weekday Balance
          example: -10442.53
          type: number
        countDailyNegativeBalancesByMonthForTheReportTimePeriod:
          description: >-
            Number of negative daily ending balances each month over the report
            time period
          items:
            $ref: '#/components/schemas/ObbDateRangeAndCount'
          type: array
        currentRunningBalance:
          description: Current Running Balance Date
          example: 1000.01
          type: number
        currentRunningBalanceDate:
          description: Current Running Balance date
          example: '2022-02-10T05:00:00-07:00'
          type: string
          minLength: 25
          maxLength: 25
        dailyBalancesByWeekdayForTheReportTimePeriod:
          default: []
          description: >-
            Daily balance of the account during weekdays over the length of the
            report
          example:
            - date: '2022-03-23'
              dayOfWeek: Monday
              endingBalance: 21527.3
          items:
            $ref: '#/components/schemas/ObbDailyBalance'
          type: array
        dailyBalancesForTheReportTimePeriod:
          default: []
          description:
            Daily balance of the account over the length of the report
          example:
            - date: '2022-03-22'
              dayOfWeek: Sunday
              endingBalance: 21527.3
          items:
            $ref: '#/components/schemas/ObbDailyBalance'
          type: array
        historicNumberOfWeeksAverageBalanceIncreasing:
          allOf:
            - $ref: '#/components/schemas/ObbNumWeeksAverageBalanceIncreasing'
          description: >-
            Report of average account balance week over week and count of weeks
            where the average balance increased
        maximumDailyBalanceByMonthForTheReportTimePeriod:
          description:
            Maximum daily ending balance each month over the report time period
          items:
            $ref: '#/components/schemas/ObbDateRangeAndAmount'
          type: array
        maximumRunningBalanceForTheReportTimePeriod:
          description: Maximum Running Balance
          example: -28749.44
          type: number
        minimumDailyBalanceByMonthForTheReportTimePeriod:
          description:
            Minimum daily ending balance each month over the report time period
          items:
            $ref: '#/components/schemas/ObbDateRangeAndAmount'
          type: array
        minimumRunningBalanceForTheReportTimePeriod:
          description: Minimum Running Balance
          example: -28749.44
          type: number
      type: object
    BalanceAnalyticsReport:
      description: Balance analytics report data as JSON
      properties:
        accountResults:
          description: Balance results per account
          items:
            $ref: '#/components/schemas/BalanceAnalyticsAccountResult'
          type: array
        businessId:
          description: Business ID
          example: 4444
          type: integer
        businessSummary:
          allOf:
            - $ref: '#/components/schemas/BalanceAnalyticsBusinessSummary'
          description:
            Balance analytics summarized across all accounts in the report
        customerId:
          $ref: '#/components/schemas/NumericCustomerId'
        reportHeader:
          allOf:
            - $ref: '#/components/schemas/ObbReportHeader'
          description: Customer and report metadata
        requesterName:
          description: Name of requester
          example: Mortgage ABC LLC
          type: string
          minLength: 0
          maxLength: 255
        title:
          $ref: '#/components/schemas/ReportTitle'
      required:
        - customerId
        - title
        - reportHeader
      type: object
    BalanceAndCashFlowAnalyticsReportAck:
      description: >-
        Response given when analtyics were generated successfully, providing the
        caller with a report ID which can be used to retrieve the report as JSON
        or a PDF.
      properties:
        accountIds:
          description: List of account IDs included in the report
          type: array
          items:
            $ref: '#/components/schemas/NumericAccountId'
        businessId:
          description: Business ID associated with the requested customer
          type: integer
          example: 1234
        createdDate:
          description: Created date of balance analytics request
          type: string
          minLength: 25
          maxLength: 25
          example: '2022-02-10T05:00:00-07:00'
        customerId:
          $ref: '#/components/schemas/NumericCustomerId'
        reportId:
          $ref: '#/components/schemas/ReportId'
        reportPin:
          description: PIN that may be used to access the report
          type: string
          minLength: 0
          maxLength: 50
          example: 'qert'
        requesterName:
          description: Name of requester
          type: string
          minLength: 0
          maxLength: 255
          example: 'Mortgage ABC LLC'
        title:
          $ref: '#/components/schemas/ReportTitle'
      required:
        - reportId
        - reportPin
        - customerId
        - accountIds
        - title
        - createdDate
      type: object
    BalanceAndCashFlowAnalyticsReportConstraints:
      description: >-
        Request parameters from the partner to control the customer accounts
        included in the report, and the length of time to report on.
      type: object
      properties:
        accountIds:
          description: >-
            The list of account IDs to include in the report. If omitted, all
            accounts on record for the customer will be used.
          type: array
          items:
            $ref: '#/components/schemas/NumericAccountId'
        lengthOfReport:
          description: >-
            Number of days to search for transactions. Must be one of 30, 90,
            180, 270, 365, or 730. If omitted, defaults to 2 years from current
            time at which the request was received (730 days).
          type: integer
          example: 730
    BaseReportAck:
      description: Properties shared by all generated reports
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ReportId'
        customerType:
          $ref: '#/components/schemas/CustomerType'
        customerId:
          $ref: '#/components/schemas/NumericCustomerId'
        requestId:
          $ref: '#/components/schemas/ReportRequestId'
        requesterName:
          $ref: '#/components/schemas/PartnerName'
        createdDate:
          $ref: '#/components/schemas/ReportCreatedDate'
        title:
          $ref: '#/components/schemas/ReportTitle'
        consumerId:
          $ref: '#/components/schemas/ConsumerId'
        consumerSsn:
          $ref: '#/components/schemas/SocialSecurityNumberLastDigits'
        type:
          $ref: '#/components/schemas/ReportType'
        status:
          $ref: '#/components/schemas/ReportStatus'
        errors:
          description: In case errors occurred during the report generation
          type: array
          items:
            $ref: '#/components/schemas/ErrorMessage'
    BaseReportAckWithPortfolioId:
      description:
        Properties shared by all generated reports having a portfolio ID
      allOf:
        - $ref: '#/components/schemas/BaseReportAck'
        - type: object
          properties:
            portfolioId:
              $ref: '#/components/schemas/PortfolioId'
    Birthday:
      type: object
      properties:
        year:
          type: integer
          description: The birthday 4-digit year
          format: int32
          example: 1989
        month:
          type: integer
          description: The birthday 2-digit month (1 is January)
          format: int32
          example: 8
        dayOfMonth:
          type: integer
          description: The birthday 2-digit day-of-month
          format: int32
          example: 13
      description: A birth date
    Borrower:
      required:
        - customerId
        - consumerId
        - type
      type: object
      properties:
        customerId:
          $ref: '#/components/schemas/CustomerId'
        consumerId:
          $ref: '#/components/schemas/ConsumerId'
        type:
          $ref: '#/components/schemas/BorrowerType'
        optionalConsumerInfo:
          $ref: '#/components/schemas/ConsumerInfo'
    BorrowerType:
      description: '"primary" or "jointBorrower"'
      type: string
      example: primary
    Borrowers:
      type: array
      items:
        $ref: '#/components/schemas/Borrower'
      description: >-
        (MVS) Array of borrowers to pass the primary and joint borrower's
        customer and consumer IDs
    Branding:
      type: object
      properties:
        logo:
          type: string
          description: >-
            File path of the institution's logo. For white backgrounds designed
            at 375 x 72, has built in spacing around it to normalize brand
            sizing.
          example: 'https://prod-carpintero-branding.s3.us-west-2.amazonaws.com/5/logo.svg'
        alternateLogo:
          type: string
          description: >-
            File path of the institution's alternate logo. For colored
            backgrounds designed at 375 x 72 has built in spacing around it to
            normalize brand sizing.
          example: >-
            https://prod-carpintero-branding.s3.us-west-2.amazonaws.com/5/alternateLogo.svg
        icon:
          type: string
          description: >-
            File path of the institution's icon. For search results designed at
            40 x 40.
          example: 'https://prod-carpintero-branding.s3.us-west-2.amazonaws.com/5/icon.svg'
        primaryColor:
          type: string
          description: Hex code for the institution's primary color
          example: '#0167AE'
        tile:
          type: string
          description: >-
            File path of institution name logo. For popular banks designed at
            160 x 72.
          example: 'https://prod-carpintero-branding.s3.us-west-2.amazonaws.com/5/tile.svg'
      description:
        All assets are SVGs so can be slightly resized without any issues.
    BrandingWrapper:
      required:
        - branding
      type: object
      properties:
        branding:
          $ref: '#/components/schemas/Branding'
    CadenceDetails:
      type: object
      properties:
        startDate:
          type: integer
          description: '`postedDate` of the first deposit transaction'
          format: int64
          example: 1577986990
        stopDate:
          type: integer
          description: >-
            `postedDate` of the final deposit transaction (omitted if status is
            active)
          format: int64
          example: 1587986990
        days:
          type: integer
          description: Number of days between the recurring deposits
          format: int32
          example: 14
    CashFlowActivityDepositsCredits:
      properties:
        date:
          description: Date the deposit transaction was posted
          example: '2020-03-25'
          type: string
          minLength: 10
          maxLength: 10
        depositsCredits:
          description: Amount of the deposit
          example: 500
          type: number
        transactionDescription:
          description: Description of transaction
          example: VENMO            CASHOUT
          type: string
          minLength: 0
          maxLength: 255
      required:
        - date
        - depositsCredits
      type: object
    CashFlowActivityWithdrawalsDebits:
      properties:
        date:
          description: Date the withdrawal transaction was posted
          example: '2020-03-25'
          type: string
          minLength: 10
          maxLength: 10
        transactionDescription:
          description: Description of transaction
          example: Payment to Chase card ending in
          type: string
          minLength: 0
          maxLength: 255
        withdrawalsDebits:
          description: Amount of the withdrawal
          example: 15.69
          type: number
      required:
        - date
        - withdrawalsDebits
      type: object
    CashFlowAnalyticsAccountResult:
      properties:
        accountDetails:
          allOf:
            - $ref: '#/components/schemas/ObbAccountDetails'
          description: Details of the account and financial institution
        accountId:
          $ref: '#/components/schemas/NumericAccountId'
        cashflowAnalyticsMetrics:
          allOf:
            - $ref: '#/components/schemas/CashFlowAnalyticsMetrics'
          description: Generated cashflow calculations/metrics
        currentReportRequest:
          allOf:
            - $ref: '#/components/schemas/ObbCurrentReportRequestDetails'
          description: Describes the requested attributes of the report
        historicDataAvailability:
          allOf:
            - $ref: '#/components/schemas/ObbDataAvailability'
          description:
            Describes the availability of data at the time the report was
            requested
      required:
        - accountId
        - accountDetails
        - historicDataAvailability
        - currentReportRequest
      type: object
    CashFlowAnalyticsBusinessSummary:
      properties:
        cashflowAnalyticsMetrics:
          allOf:
            - $ref: '#/components/schemas/CashFlowAnalyticsMetrics'
          description: >-
            Cash flow analytics metrics and calculations across all accounts in
            the report
        currentReportRequest:
          allOf:
            - $ref: '#/components/schemas/ObbCurrentReportRequestDetails'
          description: Describes the requested attributes of the report
        historicDataAvailability:
          allOf:
            - $ref: '#/components/schemas/ObbDataAvailability'
          description: >-
            Describes the availability of historical data for all accounts owned
            by the business
      required:
        - historicDataAvailability
        - currentReportRequest
      type: object
    CashFlowAnalyticsMetrics:
      properties:
        inflow:
          allOf:
            - $ref: '#/components/schemas/CashFlowInflowAttributes'
          description: Inflow Attributes
        negativeTriggers:
          allOf:
            - $ref: '#/components/schemas/CashFlowNegativeTriggers'
          description: >-
            Details of transactions that may be warning signs of bad
            creditworthiness
        outflow:
          allOf:
            - $ref: '#/components/schemas/CashFlowOutflowAttributes'
          description: Outflow attributes
        revenueByMonthForTheReportTimePeriod:
          description:
            'Sum of all transactions categorized as revenue, split by months'
          items:
            $ref: '#/components/schemas/ObbDateRangeAndAmount'
          type: array
        revenueForTheReportTimePeriod:
          description: Sum of all transactions categorized as revenue
          example: 43893.44
          type: number
        transactionAnalytics:
          allOf:
            - $ref: '#/components/schemas/CashFlowTransactionAnalyticsAttributes'
          description: Transaction Analytics Attributes
      type: object
    CashFlowAnalyticsReport:
      description: Cash Flow Analytics report data as JSON
      properties:
        accountResults:
          description: Cash flow results per account
          items:
            $ref: '#/components/schemas/CashFlowAnalyticsAccountResult'
          type: array
        businessId:
          description: Business ID
          example: 4444
          type: integer
        businessSummary:
          allOf:
            - $ref: '#/components/schemas/CashFlowAnalyticsBusinessSummary'
          description:
            Cash flow analytics summarized across all accounts in the report
        customerId:
          $ref: '#/components/schemas/NumericCustomerId'
        reportHeader:
          allOf:
            - $ref: '#/components/schemas/ObbReportHeader'
          description: Customer and report metadata
        requesterName:
          description: Name of requester
          example: Mortgage ABC LLC
          type: string
          minLength: 0
          maxLength: 255
        title:
          $ref: '#/components/schemas/ReportTitle'
        totalRevenue:
          description: The total revenue
          type: number
          example: 904909.33
      required:
        - customerId
        - title
        - reportHeader
      type: object
    CashFlowCashFlowBalance:
      required:
        - monthlyCashFlowBalances
        - minDailyBalance
        - maxDailyBalance
        - twelveMonthAverageDailyBalance
        - sixMonthAverageDailyBalance
        - twoMonthAverageDailyBalance
        - twelveMonthStandardDeviationOfDailyBalance
        - twoMonthStandardDeviationOfDailyBalance
        - numberOfDaysPositiveBalance
      type: object
      properties:
        monthlyCashFlowBalances:
          type: array
          items:
            $ref: '#/components/schemas/CashFlowMonthlyCashFlowBalances'
          description: List of attributes for each month
        minDailyBalance:
          type: number
          description: Min daily balance across entire transaction history
          example: 3479.39
        maxDailyBalance:
          type: number
          description: Max Daily Balance across entire transaction history
          example: 3479.39
        twelveMonthAverageDailyBalance:
          type: number
          description:
            Average Daily Balance across twelve months for the account
          example: 3479.39
        sixMonthAverageDailyBalance:
          type: number
          description: Average Daily Balance across six months for the account
          example: 3479.39
        twoMonthAverageDailyBalance:
          type: number
          description: Average Daily Balance across two months for the account
          example: 3479.39
        twelveMonthStandardDeviationOfDailyBalance:
          type: string
          description:
            Standard Deviation of Daily Balance across twelve months for the
            account
          example: '20'
        sixMonthStandardDeviationOfDailyBalance:
          type: string
          description:
            Standard Deviation of Daily Balance across six months for the
            account
          example: '20'
        twoMonthStandardDeviationOfDailyBalance:
          type: string
          description:
            Standard Deviation of Daily Balance across two months for the
            account
          example: '20'
        numberDaysNegativeBalance:
          type: string
          description:
            Number of Days Negative Balance over entire transaction history
          example: '6'
        numberOfDaysPositiveBalance:
          type: string
          description:
            Number of Days positive balance over entire transaction history
          example: '0'
    CashFlowCashFlowBalanceSummary:
      required:
        - monthlyCashFlowBalanceSummaries
        - minDailyBalance
        - maxDailyBalance
        - twelveMonthAverageDailyBalance
        - sixMonthAverageDailyBalance
        - twoMonthAverageDailyBalance
        - twelveMonthStandardDeviationOfDailyBalance
        - twoMonthStandardDeviationOfDailyBalance
        - numberOfDaysNegativeBalance
        - numberOfDaysPositiveBalance
      type: object
      properties:
        monthlyCashFlowBalanceSummaries:
          type: array
          items:
            $ref: '#/components/schemas/CashFlowMonthlyCashFlowBalanceSummaries'
          description: List of attributes for each month
        minDailyBalance:
          type: number
          description:
            Min Daily Balance across entire transaction history  for all
            accounts
          example: 3479.39
        maxDailyBalance:
          type: number
          description:
            Max Daily Balance across entire transaction history for all accounts
          example: 3479.39
        twelveMonthAverageDailyBalance:
          type: number
          description:
            Average Daily Balance across twelve months for all accounts
          example: 3479.39
        sixMonthAverageDailyBalance:
          type: number
          description: Average Daily Balance across six months for all accounts
          example: 3479.39
        twoMonthAverageDailyBalance:
          type: number
          description: Average Daily Balance across two months for all accounts
          example: 3479.39
        twelveMonthStandardDeviationOfDailyBalance:
          type: string
          description: >-
            Standard Deviation of Daily Balance across twelve months for all
            accounts
          example: '20'
        sixMonthStandardDeviationOfDailyBalance:
          type: string
          description:
            Standard Deviation of Daily Balance across six months for all
            accounts
          example: '20'
        twoMonthStandardDeviationOfDailyBalance:
          type: string
          description:
            Standard Deviation of Daily Balance across two months for all
            accounts
          example: '20'
        numberOfDaysNegativeBalance:
          type: string
          description: >-
            Number of Days Negative Balance over entire transaction history for
            all accounts
          example: '6'
        numberOfDaysPositiveBalance:
          type: string
          description: >-
            Number of Days Positive Balance over entire transaction history for
            all accounts
          example: '11'
    CashFlowCashFlowCharacteristic:
      required:
        - monthlyCashFlowCharacteristics
        - averageMonthlyNet
        - averageMonthlyNetLessTransfers
      type: object
      properties:
        monthlyCashFlowCharacteristics:
          type: array
          items:
            $ref: '#/components/schemas/CashFlowMonthlyCashFlowCharacteristics'
          description: List of attributes for each month
        averageMonthlyNet:
          type: number
          description: Average (Total Credits - Total Debits) for the account
          example: 2350
        averageMonthlyNetLessTransfers:
          type: number
          description:
            Average (Total Credits - Total Debits) without transfers for the
            account
          example: 1000
        twelveMonthTotalNet:
          type: number
          description: >-
            Sum of all monthly (Total Credits - Total Debits) each month for the
            account
          example: 12500
        twelveMonthTotalNetLessTransfers:
          type: number
          description: >-
            Sum of all monthly (Total Credits - Total Debits) without transfers
            for the account
          example: 12400
        sixMonthAverageTotalCreditsLessTotalDebits:
          type: number
          description: 6 Month Average (Total Credits - Total Debits)
          example: 55555
        sixMonthAverageTotalCreditsLessTotalDebitsLessTransfers:
          type: number
          description:
            6 Month Average (Total Credits - Total Debits) - (Without Transfers)
          example: 55555
        twoMonthAverageTotalCreditsLessTotalDebits:
          type: number
          description: 2 Month Average (Total Credits - Total Debits)
          example: 55555
        twoMonthAverageTotalCreditsLessTotalDebitsLessTransfers:
          type: number
          description:
            2 Month Average (Total Credits - Total Debits) - (Without Transfers)
          example: 55555
    CashFlowCashFlowCharacteristicsSummary:
      required:
        - averageMonthlyNet
        - averageMonthlyNetLessTransfers
        - twelveMonthTotalNet
        - twelveMonthTotalNetLessTransfers
        - sixMonthAverageTotalCreditsLessTotalDebits
        - sixMonthAverageTotalCreditsLessTotalDebitsLessTransfers
        - twoMonthAverageTotalCreditsLessTotalDebits
      type: object
      properties:
        monthlyCashFlowCharacteristicsSummaries:
          type: array
          items:
            $ref: '#/components/schemas/CashFlowMonthlyCashFlowCharacteristicsSummaries'
          description: List of attributes for each month
        averageMonthlyNet:
          type: number
          description: Average monthly net amount
          example: 1250
        averageMonthlyNetLessTransfers:
          type: number
          description: Average monthly net less transfers
          example: 1000
        twelveMonthTotalNet:
          type: number
          description: >-
            Sum of all monthly (Total Credits - Total Debits) each month by the
            account
          example: 12500
        twelveMonthTotalNetLessTransfers:
          type: number
          description: >-
            Sum of all monthly (Total Credits - Total Debits) without transfers
            by the account
          example: 12400
        sixMonthAverageTotalCreditsLessTotalDebits:
          type: number
          description:
            6 Month Average (Total Credits - Total Debits) across all accounts
          example: 55555
        sixMonthAverageTotalCreditsLessTotalDebitsLessTransfers:
          type: number
          description: >-
            6 Month Average (Total Credits - Total Debits) - (Without Transfers)
            across all accounts
          example: 55555
        twoMonthAverageTotalCreditsLessTotalDebits:
          type: number
          description:
            2 Month Average (Total Credits - Total Debits) across all accounts
          example: 55555
        twoMonthAverageTotalCreditsLessTotalDebitsLessTransfers:
          type: number
          description: >-
            2 Month Average (Total Credits - Total Debits) - (Without Transfers)
            across all accounts
          example: 55555
    CashFlowCashFlowCredit:
      required:
        - monthlyCashFlowCredits
      type: object
      properties:
        monthlyCashFlowCredits:
          type: array
          items:
            $ref: '#/components/schemas/CashFlowMonthlyCashFlowCredits'
          description: List of attributes for each month
        twelveMonthCreditTotal:
          type: number
          description: Sum of all credit transactions for each month by account
          example: 1200
        twelveMonthCreditTotalLessTransfers:
          type: number
          description:
            Sum of all monthly credit transactions without transfers for the
            account
          example: 1000
        sixMonthCreditTotal:
          type: number
          description: Sum of six month credit transactions
          example: 750
        sixMonthCreditTotalLessTransfers:
          type: number
          description: Sum of six month credit transactions without transfers
          example: 500
        twoMonthCreditTotal:
          type: number
          description: Sum of two month credit transactions
          example: 150
        twoMonthCreditTotalLessTransfers:
          type: number
          description: Sum of two month credit transactions without transfers
          example: 100
    CashFlowCashFlowCreditSummary:
      required:
        - monthlyCashFlowCreditSummaries
        - twelveMonthCreditTotal
        - twelveMonthCreditTotalLessTransfers
        - sixMonthCreditTotal
        - sixMonthCreditTotalLessTransfers
        - twoMonthCreditTotal
        - twoMonthCreditTotalLessTransfers
      type: object
      properties:
        monthlyCashFlowCreditSummaries:
          type: array
          items:
            $ref: '#/components/schemas/CashFlowMonthlyCashFlowCreditSummaries'
          description: List of attributes for each month
        twelveMonthCreditTotal:
          type: number
          description:
            Sum of all credit transactions for each month for all accounts
          example: 1200
        twelveMonthCreditTotalLessTransfers:
          type: number
          description: >-
            Sum of all monthly credit transactions without transfers for all
            accounts
          example: 1000
        sixMonthCreditTotal:
          type: number
          description: Six month sum of all credit transactions
          example: 750
        sixMonthCreditTotalLessTransfers:
          type: number
          description: >-
            Six month sum of all monthly credit transactions without transfers
            for all accounts
          example: 500
        twoMonthCreditTotal:
          type: number
          description: Two month sum of all credit transactions
          example: 150
        twoMonthCreditTotalLessTransfers:
          type: number
          description: >-
            Two month sum of all monthly credit transactions without transfers
            for all accounts
          example: 100
    CashFlowCashFlowDebit:
      required:
        - monthlyCashFlowDebits
      type: object
      properties:
        monthlyCashFlowDebits:
          type: array
          items:
            $ref: '#/components/schemas/CashFlowMonthlycashflowDebits'
          description: List of attributes for each month
        twelveMonthDebitTotal:
          type: number
          description:
            Sum of all monthly debit transactions for each month by account
          example: 1200
        twelveMonthDebitTotalLessTransfers:
          type: number
          description:
            Sum of all monthly debit transactions without transfers for the
            account
          example: 1000
        sixMonthDebitTotal:
          type: number
          description: Six month sum of all debit transactions
          example: 750
        sixMonthDebitTotalLessTransfers:
          type: number
          description: >-
            Six month sum of all debit transactions without transfers for the
            account
          example: 500
        twoMonthDebitTotal:
          type: number
          description: Two month sum of all debit transactions
          example: 150
        twoMonthDebitTotalLessTransfers:
          type: number
          description: >-
            Two month sum of all debit transactions without transfers for the
            account
          example: 100
    CashFlowCashFlowDebitSummary:
      required:
        - monthlyCashFlowDebitSummaries
        - twelveMonthDebitTotal
        - twelveMonthDebitTotalLessTransfers
        - sixMonthDebitTotal
        - sixMonthDebitTotalLessTransfers
        - twoMonthDebitTotal
        - twoMonthDebitTotalLessTransfers
      type: object
      properties:
        monthlyCashFlowDebitSummaries:
          type: array
          items:
            $ref: '#/components/schemas/CashFlowMonthlyCashFlowDebitSummaries'
          description: List of attributes for each month
        twelveMonthDebitTotal:
          type: number
          description:
            Sum of all monthly debit transactions for each month by account
          example: -1200
        twelveMonthDebitTotalLessTransfers:
          type: number
          description:
            Sum of all monthly debit transactions without transfers for the
            account
          example: -1000
        sixMonthDebitTotal:
          type: number
          description: Six month sum of all debit transactions by account
          example: -750
        sixMonthDebitTotalLessTransfers:
          type: number
          description: >-
            Six month sum of all debit transactions without transfers for the
            account
          example: -500
        twoMonthDebitTotal:
          type: number
          description: Two month sum of all debit transactions by account
          example: -150
        twoMonthDebitTotalLessTransfers:
          type: number
          description: >-
            Two month sum of all debit transactions without transfers for the
            account
          example: -100
    CashFlowInflowAttributes:
      properties:
        averageDepositByMonthForTheReportTimePeriod:
          description: Average value of deposits during periods in the report
          items:
            $ref: '#/components/schemas/ObbDateRangeAndAmount'
          type: array
        countDepositsByMonthForTheReportTimePeriod:
          description: Count of all deposits during periods in the report
          items:
            $ref: '#/components/schemas/ObbDateRangeAndCount'
          type: array
        historicCountOfDepositTransactions:
          description: >-
            Count of ALL deposits over entire known history of the account (may
            exceed requested length of report)
          example: 20
          type: integer
        historicSumOfDeposits:
          description: >-
            Sum of ALL deposits over entire known history of the account (may
            exceed requested length of report)
          example: 389.22
          type: number
        maximumDepositByMonthForTheReportTimePeriod:
          description: Maximum deposit value for different periods in the report
          items:
            $ref: '#/components/schemas/ObbDateRangeAndAmount'
          type: array
        minimumDepositByMonthForTheReportTimePeriod:
          description: Minimum deposit value for different periods in the report
          items:
            $ref: '#/components/schemas/ObbDateRangeAndAmount'
          type: array
        sumDepositsByMonthForTheReportTimePeriod:
          description: Sum of all deposits during periods in the report
          items:
            $ref: '#/components/schemas/ObbDateRangeAndAmount'
          type: array
      required:
        - minimumDepositByMonthForTheReportTimePeriod
        - maximumDepositByMonthForTheReportTimePeriod
        - sumDepositsByMonthForTheReportTimePeriod
        - countDepositsByMonthForTheReportTimePeriod
        - historicCountOfDepositTransactions
      type: object
    CashFlowInsufficientFundsFees:
      properties:
        countOfTransactionsForTheReportTimePeriod:
          description: Count of all NSF transactions during the report
          example: 1
          type: integer
        sumOfTransactionsForTheReportTimePeriod:
          description: Sum of all NSF transactions during the report
          example: -1.65
          type: number
        transactions:
          description: Transactions categorized as NSF
          items:
            $ref: '#/components/schemas/InsufficientFundsTransaction'
          type: array
      type: object
    CashFlowMonthlyCashFlowBalanceSummaries:
      required:
        - month
        - minDailyBalance
        - maxDailyBalance
        - averageDailyBalance
        - numberOfDaysNegativeBalance
        - numberOfDaysPositiveBalance
      type: object
      properties:
        month:
          type: integer
          description:
            One instance for each complete calendar month in the report
          format: int64
          example: 1512111600
        minDailyBalance:
          type: number
          description: Min Daily Balance for each month for all accounts
          example: 3479.39
        maxDailyBalance:
          type: number
          description: Max Daily Balance for each month for all accounts
          example: 3479.39
        averageDailyBalance:
          type: number
          description: Average Daily Balance for each month for all accounts
          example: 3479.39
        standardDeviationOfDailyBalance:
          type: string
          description:
            Standard Deviation of Daily Balance for each month for all accounts
          example: '20.45454545'
        numberOfDaysNegativeBalance:
          type: string
          description:
            Number of Days Negative Balance for each month for all accounts
          example: '6'
        numberOfDaysPositiveBalance:
          type: string
          description:
            Number of Days Positive Balance for each month for all accounts
          example: '0'
    CashFlowMonthlyCashFlowBalances:
      required:
        - month
        - minDailyBalance
        - maxDailyBalance
        - averageDailyBalance
        - numberOfDaysNegativeBalance
        - numberOfDaysPositiveBalance
      type: object
      properties:
        month:
          type: integer
          description:
            One instance for each complete calendar month in the report
          format: int64
          example: 1512111600
        minDailyBalance:
          type: number
          description: Min Daily Balance for each month
          example: 3479.39
        maxDailyBalance:
          type: number
          description: Max Daily Balance for each month
          example: 3479.39
        averageDailyBalance:
          type: number
          description: Average Daily Balance for each month
          example: 3479.39
        standardDeviationOfDailyBalance:
          type: string
          description: Standard Deviation of Daily Balance for each month
          example: '20'
        numberOfDaysNegativeBalance:
          type: string
          description: Number of Days Negative Balance for each month
          example: '6'
        numberOfDaysPositiveBalance:
          type: string
          description: Number of Days positive balance for each month
          example: '0'
    CashFlowMonthlyCashFlowCharacteristics:
      required:
        - month
        - totalCreditsLessTotalDebits
        - totalCreditsLessTotalDebitsLessTransfers
        - averageTransactionAmount
      type: object
      properties:
        month:
          type: integer
          description:
            One instance for each complete calendar month in the report
          format: int64
          example: 1512111600
        totalCreditsLessTotalDebits:
          type: number
          description: Total Credits - Total Debits by month
          example: 15000
        totalCreditsLessTotalDebitsLessTransfers:
          type: number
          description: Total Credits - Total Debits by month (Without Transfers)
          example: 11000
        averageTransactionAmount:
          type: number
          description: Average transaction amount by month
          example: 10
    CashFlowMonthlyCashFlowCharacteristicsSummaries:
      required:
        - month
        - totalCreditsLessTotalDebits
        - totalCreditsLessTotalDebitsLessTransfers
        - averageTransactionAmount
      type: object
      properties:
        month:
          type: integer
          description:
            One instance for each complete calendar month in the report
          format: int64
          example: 1512111600
        totalCreditsLessTotalDebits:
          type: number
          description: Total Credits - Total Debits by month across all accounts
          example: 15000
        totalCreditsLessTotalDebitsLessTransfers:
          type: number
          description: >-
            Total Credits - Total Debits by month (Without Transfers) across all
            accounts
          example: 11000
        averageTransactionAmount:
          type: number
          description: Average transaction amount across all accounts
          example: 10
    CashFlowMonthlyCashFlowCreditSummaries:
      required:
        - month
        - numberOfCredits
        - totalCreditsAmount
        - largestCredit
        - numberOfCreditsLessTransfers
        - totalCreditsAmountLessTransfers
        - averageCreditAmount
        - estimatedNumberOfLoanDeposits
        - estimatedLoanDepositAmount
      type: object
      properties:
        month:
          type: integer
          description:
            One instance for each complete calendar month in the report
          format: int64
          example: 1512111600
        numberOfCredits:
          type: string
          description: Number of credits by month across all accounts
          example: '57'
        totalCreditsAmount:
          type: number
          description: Total amount of credits by month across all accounts
          example: 3479.39
        largestCredit:
          type: number
          description: Largest credit by month across all accounts
          example: 3000.49
        numberOfCreditsLessTransfers:
          type: string
          description:
            Number of credits by month (less transfers) across all accounts
          example: '5'
        totalCreditsAmountLessTransfers:
          type: number
          description:
            Total amount of credits by month (less transfers) across all
            accounts
          example: 25.46
        averageCreditAmount:
          type: number
          description: The average credit amount
          example: 500
        estimatedNumberOfLoanDeposits:
          type: string
          description: The estimated number of loan deposits by month
          example: '0'
        estimatedLoanDepositAmount:
          type: number
          description: The estimated loan deposit amount by month
          example: 0
    CashFlowMonthlyCashFlowCredits:
      required:
        - month
        - numberOfCredits
        - totalCreditsAmount
        - largestCredit
        - numberOfCreditsLessTransfers
        - totalCreditsAmountLessTransfers
        - averageCreditAmount
        - estimatedNumberOfLoanDeposits
        - estimatedLoanDepositAmount
      type: object
      properties:
        month:
          type: integer
          description:
            One instance for each complete calendar month in the report
          format: int64
          example: 1512111600
        numberOfCredits:
          type: string
          description: Number of credits by month
          example: '3'
        totalCreditsAmount:
          type: number
          description: Total amount of credits by month
          example: 5000
        largestCredit:
          type: number
          description: Largest credit by month
          example: 2000
        numberOfCreditsLessTransfers:
          type: string
          description: Number of credits by month (less transfers)
          example: '2'
        totalCreditsAmountLessTransfers:
          type: number
          description: Total amount of credits by month (less transfers)
          example: 4000
        averageCreditAmount:
          type: number
          description: The average credit amount
          example: 500
        estimatedNumberOfLoanDeposits:
          type: string
          description: The estimated number of loan deposits
          example: '0'
        estimatedLoanDepositAmount:
          type: number
          description: The estimated loan deposit amount
          example: 0
    CashFlowMonthlyCashFlowDebitSummaries:
      required:
        - month
        - numberOfDebits
        - totalDebitsAmount
        - largestDebit
        - numberOfDebitsLessTransfers
        - totalDebitsAmountLessTransfers
        - averageDebitAmount
      type: object
      properties:
        month:
          type: integer
          description:
            One instance for each complete calendar month in the report
          format: int64
          example: 1512111600
        numberOfDebits:
          type: string
          description: Number of Debits by month across all accounts
          example: '1500'
        totalDebitsAmount:
          type: number
          description: Total Amount of Debits by month across all accounts
          example: -12345.46
        largestDebit:
          type: number
          description: Largest Debit by month
          example: -20000
        numberOfDebitsLessTransfers:
          type: string
          description: Number of Debits by month (less transfers)
          example: '5'
        totalDebitsAmountLessTransfers:
          type: number
          description: Total amount of debits by month (less transfers)
          example: -2000
        averageDebitAmount:
          type: number
          description: The average debit amount
          example: 500
    CashFlowMonthlycashflowDebits:
      required:
        - month
        - numberOfDebits
        - totalDebitsAmount
        - largestDebit
        - numberOfDebitsLessTransfers
        - totalDebitsAmountLessTransfers
        - averageDebitAmount
      type: object
      properties:
        month:
          type: integer
          description:
            One instance for each complete calendar month in the report
          format: int64
          example: 1512111600
        numberOfDebits:
          type: string
          description: Number of Debits by month
          example: '5'
        totalDebitsAmount:
          type: number
          description: Total Amount of Debits by month
          example: -12345
        largestDebit:
          type: number
          description: Largest Debit by month
          example: -2000
        numberOfDebitsLessTransfers:
          type: string
          description: Number of Debits by month (less transfers)
          example: '3'
        totalDebitsAmountLessTransfers:
          type: number
          description: Total amount of debits by month (less transfers)
          example: -2000
        averageDebitAmount:
          type: number
          description: The average debit amount
          example: 500
    CashFlowNegativeTriggers:
      properties:
        insufficientFundFees:
          allOf:
            - $ref: '#/components/schemas/CashFlowInsufficientFundsFees'
          description: Non Sufficient Fund Fees
      type: object
    CashFlowNumWeeksZeros:
      properties:
        historicNumberOfWeeksWithDataAvailable:
          description: >-
            Number of weeks during known history of account in which data was
            available
          example: 10
          type: integer
        historicNumberOfWeeksZeroTransactions:
          description: >-
            Number of weeks during known history of account where zero
            transactions were posted
          example: 5
          type: integer
        historicWeeksWithZeroTransactions:
          description: List of weeks with zero reported transactions
          items:
            $ref: '#/components/schemas/ObbWeekOfYear'
          type: array
      required:
        - historicNumberOfWeeksZeroTransactions
        - historicNumberOfWeeksWithDataAvailable
        - historicWeeksWithZeroTransactions
      type: object
    CashFlowOutflowAttributes:
      properties:
        averageWithdrawalByMonthForTheReportTimePeriod:
          description: Average value of withdrawals during periods in the report
          items:
            $ref: '#/components/schemas/ObbDateRangeAndAmount'
          type: array
        countWithdrawalsByMonthForTheReportTimePeriod:
          description: Count of all withdrawals during periods in the report
          items:
            $ref: '#/components/schemas/ObbDateRangeAndCount'
          type: array
        historicCountOfWithdrawalTransactions:
          description: >-
            Count of ALL withdrawals over entire known history of the account
            (may exceed requested length of report)
          example: 20
          type: integer
        historicSumOfWithdrawals:
          description: >-
            Sum of ALL withdrawals over entire known history of the account (may
            exceed requested length of report)
          example: 925.66
          type: number
        maximumWithdrawalByMonthForTheReportTimePeriod:
          description:
            Maximum withdrawal value for different periods in the report
          items:
            $ref: '#/components/schemas/ObbDateRangeAndAmount'
          type: array
        minimumWithdrawalByMonthForTheReportTimePeriod:
          description:
            Minimum withdrawal value for different periods in the report
          items:
            $ref: '#/components/schemas/ObbDateRangeAndAmount'
          type: array
        sumWithdrawalsByMonthForTheReportTimePeriod:
          description: Sum of all withdrawals during periods in the report
          items:
            $ref: '#/components/schemas/ObbDateRangeAndAmount'
          type: array
      required:
        - minimumWithdrawalByMonthForTheReportTimePeriod
        - maximumWithdrawalByMonthForTheReportTimePeriod
        - sumWithdrawalsByMonthForTheReportTimePeriod
        - countWithdrawalsByMonthForTheReportTimePeriod
        - historicCountOfWithdrawalTransactions
      type: object
    CashFlowPossibleLoanDeposits:
      required:
        - institutions
      type: object
      properties:
        institutions:
          description: 'A list of loan deposit institutions'
          type: array
          items:
            $ref: '#/components/schemas/CashFlowPossibleLoanDepositsInstitutions'
    CashFlowPossibleLoanDepositsAccount:
      required:
        - id
        - ownerName
        - ownerAddress
        - name
        - number
        - type
        - aggregationStatusCode
        - currentBalance
        - availableBalance
        - balanceDate
        - transactions
      type: object
      properties:
        id:
          type: string
          description: Finicity account ID
          example: '6681984'
        ownerName:
          type: string
          description:
            'The name(s) of the account owner(s), retrieved from the
            institution.'
          example: PATRICK & LORRAINE PURCHASER
        ownerAddress:
          type: string
          description: >-
            The mailing address of the account owner, retrieved from the
            institution.
          example: '7195 BELMONT ST. PARLIN, NJ 08859'
        name:
          type: string
          description: The account name from the institution
          example: Checking
        number:
          type: string
          description: The account number from the institution (obfuscated)
          example: XX1111
        type:
          type: string
          description: >-
            CFR: `ALL` (`checking` / `savings` / `loan` / `mortgage` / `credit
            card` / `CD` / `MM` / `investment`...)
          example: checking
        aggregationStatusCode:
          type: integer
          description: >-
            The status of the most recent aggregation attempt for this account
            (non-zero means the account was not accessed successfully for this
            report, and additional fields for this account may not be reliable)
          example: 0
        currentBalance:
          type: number
          description: The cleared balance of the account as-of `balanceDate`
          example: 100000
        availableBalance:
          type: number
          description: Available balance
          example: 1000
        balanceDate:
          type: integer
          description: A timestamp showing when the `balance` was captured
          format: int64
          example: 1614880526
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/ReportTransaction'
          description: a list of transaction records
    CashFlowPossibleLoanDepositsInstitutions:
      required:
        - id
        - name
        - urlHomeApp
        - accounts
      type: object
      properties:
        id:
          type: string
          description: Finicity institution ID
          example: '102105'
        name:
          type: string
          description: Finicity institution name
          example: FinBank Profiles
        urlHomeApp:
          type: string
          description: The URL of the Financial Institution
          example: 'http://www.finbank.com'
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/CashFlowPossibleLoanDepositsAccount'
          description: A list of account records
    CashFlowReport:
      description: A Cash Flow report
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseReportAckWithPortfolioId'
        - type: object
          properties:
            startDate:
              $ref: '#/components/schemas/ReportStartDate'
            endDate:
              $ref: '#/components/schemas/ReportEndDate'
            days:
              type: integer
              description: Number of days covered by the report
              example: 730
            seasoned:
              type: boolean
              description: '"true" if the report covers more than 365 days'
              example: true
            institutions:
              type: array
              items:
                $ref: '#/components/schemas/ReportInstitution'
              description: >-
                A list of institution records, including information about the
                individual accounts used in this report
            cashFlowBalanceSummary:
              $ref: '#/components/schemas/CashFlowCashFlowBalanceSummary'
            cashFlowCreditSummary:
              $ref: '#/components/schemas/CashFlowCashFlowCreditSummary'
            cashFlowDebitSummary:
              $ref: '#/components/schemas/CashFlowCashFlowDebitSummary'
            cashFlowCharacteristicsSummary:
              $ref: '#/components/schemas/CashFlowCashFlowCharacteristicsSummary'
            possibleLoanDeposits:
              type: array
              items:
                $ref: '#/components/schemas/CashFlowPossibleLoanDeposits'
              description: A possible loan deposits record
    CashFlowReportAccount:
      type: object
      properties:
        id:
          type: integer
          description: Finicity account ID
          example: 6681984
        ownerName:
          type: string
          description:
            'The name(s) of the account owner(s), retrieved from the
            institution.'
          example: PATRICK & LORRAINE PURCHASER
        ownerAddress:
          type: string
          description: >-
            The mailing address of the account owner, retrieved from the
            institution.
          example: '7195 BELMONT ST. PARLIN, NJ 08859'
        name:
          type: string
          description: The account name from the institution
          example: Checking
        number:
          type: string
          description: The account number from the institution (obfuscated)
          example: XX1111
        type:
          type: string
          description: >-
            CFR: `ALL` (`checking` / `savings` / `loan` / `mortgage` / `credit
            card` / `CD` / `MM` / `investment`...)
          example: checking
        aggregationStatusCode:
          type: integer
          description: >-
            The status of the most recent aggregation attempt for this account
            (non-zero means the account was not accessed successfully for this
            report, and additional fields for this account may not be reliable)
          example: 0
        currentBalance:
          type: number
          description: The cleared balance of the account as-of `balanceDate`
          example: 100000
        availableBalance:
          type: number
          description: Available balance
          example: 1000
        balanceDate:
          type: integer
          description: A timestamp showing when the `balance` was captured
          format: int64
          example: 1614880526
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/ReportTransaction'
          description: a list of transaction records
        cashFlowBalance:
          $ref: '#/components/schemas/CashFlowCashFlowBalance'
        cashFlowCredit:
          $ref: '#/components/schemas/CashFlowCashFlowCredit'
        cashFlowDebit:
          $ref: '#/components/schemas/CashFlowCashFlowDebit'
        cashFlowCharacteristic:
          $ref: '#/components/schemas/CashFlowCashFlowCharacteristic'
    CashFlowReportAck:
      required:
        - id
        - customerType
        - customerId
        - requestId
        - requesterName
        - createdDate
        - title
        - consumerId
        - consumerSsn
        - type
        - status
        - constraints
      allOf:
        - $ref: '#/components/schemas/BaseReportAck'
        - type: object
          properties:
            constraints:
              $ref: '#/components/schemas/CashFlowReportConstraintsOut'
    CashFlowReportConstraints:
      type: object
      properties:
        accountIds:
          $ref: '#/components/schemas/ReportAccountIdsString'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        showNsf:
          $ref: '#/components/schemas/ShowNsf'
        fromDate:
          $ref: '#/components/schemas/UnixDate'
        incomeStreamConfidenceMinimum:
          $ref: '#/components/schemas/IncomeStreamConfidenceMinimum'
    CashFlowReportConstraintsOut:
      type: object
      properties:
        accountIds:
          $ref: '#/components/schemas/ReportAccountIds'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        showNsf:
          $ref: '#/components/schemas/ShowNsf'
        fromDate:
          $ref: '#/components/schemas/UnixDate'
        incomeStreamConfidenceMinimum:
          $ref: '#/components/schemas/IncomeStreamConfidenceMinimum'
    CashFlowTransactionAnalyticsAttributes:
      properties:
        activityDepositsCreditsForTheReportTimePeriod:
          description: >-
            List of all deposit transactions posted to the account during the
            report period
          items:
            $ref: '#/components/schemas/CashFlowActivityDepositsCredits'
          type: array
        activityWithdrawalsDebitsForTheReportTimePeriod:
          description: >-
            List of all withdrawal transactions posted to the account during the
            report period
          items:
            $ref: '#/components/schemas/CashFlowActivityWithdrawalsDebits'
          type: array
        averageTransactionValueByMonthForTheReportTimePeriod:
          description: >-
            Average value of transactions during periods in the report. Values
            may be positive or negative
          items:
            $ref: '#/components/schemas/ObbDateRangeAndAmount'
          type: array
        historicWeeksWithZeroTransactions:
          allOf:
            - $ref: '#/components/schemas/CashFlowNumWeeksZeros'
          description: >-
            Details of weeks with zero transactions during the known history of
            the account
        lastTransactionDate:
          description: >-
            Latest posted transaction(s) to the account. May be more than one if
            they share the same timestamp
          items:
            properties:
              date:
                description: Date the deposit transaction was posted
                example: '2020-03-25'
                type: string
              depositsCredits:
                description: 'Amount of transaction if deposit, otherwise null'
                example: 500
                type: number
              withdrawalsDebits:
                description:
                  'Amount of transaction if withdrawal, otherwise null'
                example: 500
                type: number
              zeroAmountTransaction:
                description: 'Amount of transaction if zero, otherwise null'
                example: 0
                type: number
              transactionDescription:
                description: Description of transaction
                example: VENMO            CASHOUT
                type: string
            required:
              - date
            type: object
          type: array
        netCashFlowByMonthForTheReportTimePeriod:
          description: Net cash flow for each month during the report period
          items:
            $ref: '#/components/schemas/ObbDateRangeAndAmount'
          type: array
        netCashFlowForTheReportTimePeriod:
          description:
            Net cash flow during the report period (may be positive or negative)
          example: 1544.94
          type: number
      required:
        - averageTransactionValueByMonthForTheReportTimePeriod
        - activityWithdrawalsDebitsForTheReportTimePeriod
        - activityDepositsCreditsForTheReportTimePeriod
      type: object
    Categories:
      type: string
      description: |-
        The different categories for transactions.
        * "ATM Fee"

        * "Advertising"

        * "Air Travel"

        * "Alcohol & Bars"

        * "Allowance"

        * "Amusement"

        * "Arts"

        * "Auto & Transport"

        * "Auto Insurance"

        * "Auto Payment"

        * "Baby Supplies"

        * "Babysitter & Daycare"

        * "Bank Fee"

        * "Bills & Utilities"

        * "Bonus"

        * "Books"

        * "Books & Supplies"

        * "Business Services"

        * "Buy"

        * "Cash & ATM"

        * "Charity"

        * "Check"

        * "Child Support"

        * "Clothing"

        * "Coffee Shops"

        * "Credit Card Payment"

        * "Dentist"

        * "Deposit"

        * "Dividend & Cap Gains"

        * "Doctor"

        * "Education"

        * "Electronics & Software"

        * "Entertainment"

        * "Eyecare"

        * "Fast Food"

        * "Federal Tax"

        * "Fees & Charges"

        * "Finance Charge"

        * "Financial"

        * "Financial Advisor"

        * "Food & Dining"

        * "Furnishings"

        * "Gas & Fuel"

        * "Gift"

        * "Gifts & Donations"

        * "Groceries"

        * "Gym"

        * "Hair"

        * "Health & Fitness"

        * "Health Insurance"

        * "Hobbies"

        * "Home"

        * "Home Improvement"

        * "Home Insurance"

        * "Home Phone"

        * "Home Services"

        * "Home Supplies"

        * "Hotel"

        * "Income"

        * "Interest Income"

        * "Internet"

        * "Investments"

        * "Kids"

        * "Kids Activities"

        * "Late Fee"

        * "Laundry"

        * "Lawn & Garden"

        * "Legal"

        * "Life Insurance"

        * "Loan Fees and Charges"

        * "Loan Insurance"

        * "Loan Interest"

        * "Loan Payment"

        * "Loan Principal"

        * "Loans"

        * "Local Tax"

        * "Low Balance"

        * "Mobile Phone"

        * "Mortgage & Rent"

        * "Movies & DVDs"

        * "Music"

        * "Newspapers & Magazines"

        * "Office Supplies"

        * "Parking"

        * "Paycheck"

        * "Personal Care"

        * "Pet Food & Supplies"

        * "Pet Grooming"

        * "Pets"

        * "Pharmacy"

        * "Printing"

        * "Property Tax"

        * "Public Transportation"

        * "Reimbursement"

        * "Rental Car & Taxi"

        * "Restaurants"

        * "Sales Tax"

        * "Sell"

        * "Services & Parts"

        * "Service Fee"

        * "Shipping"

        * "Shopping"

        * "Spa & Massage"

        * "Sporting Goods"

        * "Sports"

        * "State Tax"

        * "Streaming Services"

        * "Student Loan"

        * "Taxes"

        * "Television"

        * "Toys"

        * "Trade Commissions"

        * "Transfer"

        * "Transfer for Cash Spending"

        * "Travel"

        * "Tuition"

        * "Uncategorized"

        * "Utilities"

        * "Vacation"

        * "Veterinary"

        * "Internet / Broadband Charges"
      example: ATM Fee
    Categorization:
      required:
        - normalizedPayeeName
        - category
        - country
      type: object
      properties:
        normalizedPayeeName:
          type: string
          description: >-
            A normalized payee, derived from the transaction's description and
            memo fields
          example: Mad Science Research
        category:
          $ref: '#/components/schemas/Categories'
        city:
          $ref: '#/components/schemas/City'
        state:
          $ref: '#/components/schemas/State'
        postalCode:
          $ref: '#/components/schemas/ZipCode'
        country:
          $ref: '#/components/schemas/Country'
        bestRepresentation:
          description: >-
            Combines the `description` and `memo` data together, removing
            duplicated information and numbers and special characters
          type: string
          example: VERIZON WIRELESS PAYMENTS
      description: Categorization Record
    CertifiedInstitution:
      required:
        - name
        - id
        - transAgg
        - ach
        - stateAgg
        - voi
        - voa
        - aha
        - availBalance
        - accountOwner
        - loanPaymentDetails
        - studentLoanData
      type: object
      properties:
        id:
          $ref: '#/components/schemas/NumericInstitutionId'
        rssd:
          $ref: '#/components/schemas/Rssd'
        name:
          $ref: '#/components/schemas/InstitutionName'
        transAgg:
          $ref: '#/components/schemas/InstitutionTransAgg'
        ach:
          $ref: '#/components/schemas/InstitutionAch'
        stateAgg:
          $ref: '#/components/schemas/InstitutionStateAgg'
        voi:
          $ref: '#/components/schemas/InstitutionVoi'
        voa:
          $ref: '#/components/schemas/InstitutionVoa'
        aha:
          $ref: '#/components/schemas/InstitutionAha'
        availBalance:
          $ref: '#/components/schemas/InstitutionAvailableBalance'
        accountOwner:
          $ref: '#/components/schemas/InstitutionAccountOwner'
        studentLoanData:
          $ref: '#/components/schemas/StudentLoanDataCertification'
        loanPaymentDetails:
          $ref: '#/components/schemas/LoanPaymentDetailCertification'
        childInstitutions:
          description: An array of child financial institutions
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/ChildInstitution'
    CertifiedInstitutions:
      description:
        A list of financial institutions from the Get Certified Institutions API
      required:
        - found
        - displaying
        - moreAvailable
        - requestedDate
        - institutions
      type: object
      properties:
        found:
          $ref: '#/components/schemas/FoundResults'
        displaying:
          $ref: '#/components/schemas/DisplayingResults'
        moreAvailable:
          $ref: '#/components/schemas/MoreResultsAvailable'
        requestedDate:
          $ref: '#/components/schemas/UnixDate'
        institutions:
          description: A list of institutions
          maxItems: 1000
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/CertifiedInstitution'
    ChildInstitution:
      required:
        - rssd
        - parentRSSD
        - name
        - institutionId
      type: object
      properties:
        rssd:
          $ref: '#/components/schemas/Rssd'
        parentRSSD:
          $ref: '#/components/schemas/Rssd'
        name:
          $ref: '#/components/schemas/InstitutionName'
        institutionId:
          $ref: '#/components/schemas/NumericInstitutionId'
    City:
      type: string
      description: City
      example: Murray
    ClassificationConfidenceScore:
      type: number
      description: The confidence score 0-100 of the name classification.
      example: 100
    ConnectEmailParameters:
      required:
        - partnerId
        - customerId
        - consumerId
        - email
      type: object
      properties:
        language:
          $ref: '#/components/schemas/ConnectLanguage'
        partnerId:
          $ref: '#/components/schemas/PartnerId'
        customerId:
          $ref: '#/components/schemas/CustomerId'
        consumerId:
          $ref: '#/components/schemas/ConsumerId'
        redirectUri:
          $ref: '#/components/schemas/RedirectUri'
        webhook:
          $ref: '#/components/schemas/Webhook'
        webhookContentType:
          $ref: '#/components/schemas/WebhookContentType'
        webhookData:
          $ref: '#/components/schemas/WebhookData'
        webhookHeaders:
          $ref: '#/components/schemas/WebhookHeaders'
        institutionSettings:
          $ref: '#/components/schemas/InstitutionSettings'
        email:
          $ref: '#/components/schemas/EmailOptions'
        experience:
          $ref: '#/components/schemas/Experience'
        singleUseUrl:
          $ref: '#/components/schemas/SingleUseUrl'
        fromDate:
          $ref: '#/components/schemas/ConnectFromDate'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        optionalConsumerInfo:
          $ref: '#/components/schemas/ConsumerInfo'
    ConnectEmailUrl:
      required:
        - link
        - emailConfig
      type: object
      properties:
        link:
          $ref: '#/components/schemas/ConnectLink'
        emailConfig:
          $ref: '#/components/schemas/EmailOptions'
    ConnectFromDate:
      type: integer
      description: >-
        The `fromDate` parameter is used when experiences are associated with a
        credit decisioning report and any other reports with transaction data.
        The value is in epoch time and must be 10 digits. Example: 1494449017.
        If it's greater than 10 digits, then the `fromDate` is set to the credit
        decisioning report's default `fromDate`.


        For an experience that generates multiple reports, the `fromDate` gets
        passed to the reports that support it.


        However, Connect doesn't pass this parameter to the following reports:

        * Pay Statement Extraction Report 

        * VOIE - Paystub (with TXVerify) Report 

        * Statement Report 

        * Verification of Income Report 

        * VOIE - Payroll Report 


        Note: this field isn't used if you're only collecting transaction data
        without a report.
      format: int64
      example: 1607450357
    ConnectJointBorrowerEmailParameters:
      required:
        - partnerId
        - borrowers
        - email
        - experience
      type: object
      properties:
        language:
          $ref: '#/components/schemas/ConnectLanguage'
        partnerId:
          $ref: '#/components/schemas/PartnerId'
        borrowers:
          $ref: '#/components/schemas/Borrowers'
        redirectUri:
          $ref: '#/components/schemas/RedirectUri'
        webhook:
          $ref: '#/components/schemas/Webhook'
        webhookContentType:
          $ref: '#/components/schemas/WebhookContentType'
        webhookData:
          $ref: '#/components/schemas/WebhookData'
        webhookHeaders:
          $ref: '#/components/schemas/WebhookHeaders'
        institutionSettings:
          $ref: '#/components/schemas/InstitutionSettings'
        email:
          $ref: '#/components/schemas/EmailOptions'
        experience:
          $ref: '#/components/schemas/Experience'
        fromDate:
          $ref: '#/components/schemas/ConnectFromDate'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        singleUseUrl:
          $ref: '#/components/schemas/SingleUseUrl'
    ConnectJointBorrowerParameters:
      required:
        - partnerId
        - borrowers
      type: object
      properties:
        language:
          $ref: '#/components/schemas/ConnectLanguage'
        partnerId:
          $ref: '#/components/schemas/PartnerId'
        borrowers:
          $ref: '#/components/schemas/Borrowers'
        redirectUri:
          $ref: '#/components/schemas/RedirectUri'
        webhook:
          $ref: '#/components/schemas/Webhook'
        webhookContentType:
          $ref: '#/components/schemas/WebhookContentType'
        webhookData:
          $ref: '#/components/schemas/WebhookData'
        webhookHeaders:
          $ref: '#/components/schemas/WebhookHeaders'
        institutionSettings:
          $ref: '#/components/schemas/InstitutionSettings'
        experience:
          $ref: '#/components/schemas/Experience'
        fromDate:
          $ref: '#/components/schemas/ConnectFromDate'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        singleUseUrl:
          $ref: '#/components/schemas/SingleUseUrl'
    ConnectLanguage:
      description: |
        Generate a translated Connect URL link. 

        Supported languages: 
        * English (default)
        * Spanish (United States): `es`
        * French (Canada): `fr` or `fr-CA`
      type: string
      example: fr-CA
    ConnectLink:
      type: string
      description: A generated Connect URL
      example: >-
        https://connect2.finicity.com?customerId=5025024821&institutionId=102105&origin=url&partnerId=2445583925753&signature=b5667164db7a9a0007b59267785c996ca3bc9ce97f2e72c98099cead76edfad9&timestamp=1648050761908&ttl=1648057961908&type=lite&webhookContentType=application%2Fjson
    ConnectParameters:
      required:
        - partnerId
        - customerId
      type: object
      properties:
        language:
          $ref: '#/components/schemas/ConnectLanguage'
        partnerId:
          $ref: '#/components/schemas/PartnerId'
        customerId:
          $ref: '#/components/schemas/CustomerId'
        consumerId:
          $ref: '#/components/schemas/ConsumerId'
        redirectUri:
          $ref: '#/components/schemas/RedirectUri'
        webhook:
          $ref: '#/components/schemas/Webhook'
        webhookContentType:
          $ref: '#/components/schemas/WebhookContentType'
        webhookData:
          $ref: '#/components/schemas/WebhookData'
        webhookHeaders:
          $ref: '#/components/schemas/WebhookHeaders'
        optionalConsumerInfo:
          $ref: '#/components/schemas/ConsumerInfo'
        singleUseUrl:
          $ref: '#/components/schemas/SingleUseUrl'
        experience:
          $ref: '#/components/schemas/Experience'
        institutionSettings:
          $ref: '#/components/schemas/InstitutionSettings'
        fromDate:
          $ref: '#/components/schemas/ConnectFromDate'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        isWebView:
          $ref: '#/components/schemas/IsWebView'
    ConnectUrl:
      description: A Connect URL object
      required:
        - link
      type: object
      properties:
        link:
          $ref: '#/components/schemas/ConnectLink'
    ConsentReceiptId:
      type: string
      description: >-
        Third party access key receipt ID. Generated by generate third party
        access key API.
      example: cr_dcfvygbhunjimk
    Consumer:
      description: A finicity consumer record
      required:
        - id
        - firstName
        - lastName
        - customerId
        - address
        - city
        - state
        - zip
        - phone
        - ssn
        - birthday
        - email
        - createdDate
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ConsumerId'
        firstName:
          $ref: '#/components/schemas/FirstName'
        lastName:
          $ref: '#/components/schemas/LastName'
        customerId:
          $ref: '#/components/schemas/NumericCustomerId'
        address:
          $ref: '#/components/schemas/Address'
        city:
          $ref: '#/components/schemas/City'
        state:
          $ref: '#/components/schemas/State'
        zip:
          $ref: '#/components/schemas/ZipCode'
        phone:
          $ref: '#/components/schemas/PhoneNumber'
        ssn:
          $ref: '#/components/schemas/SocialSecurityNumberLastDigits'
        birthday:
          $ref: '#/components/schemas/Birthday'
        email:
          $ref: '#/components/schemas/EmailAddress'
        createdDate:
          $ref: '#/components/schemas/UnixDate'
        suffix:
          $ref: '#/components/schemas/Suffix'
    ConsumerDateOfBirth:
      type: integer
      description: >-
        The consumer's date of birth in Unix epoch time (in seconds). See:
        Handling Epoch Dates and Times. The timestamp should be set at the start
        of day of birth.
      format: int64
      example: 1607450357
    ConsumerId:
      type: string
      description:
        A consumer ID. See Create Consumer API for how to create a consumer ID.
      example: 0bf46322c167b562e6cbed9d40e19a4c
    ConsumerInfo:
      description: The SSN and date of birth of a consumer
      required:
        - ssn
      type: object
      properties:
        ssn:
          $ref: '#/components/schemas/SocialSecurityNumberNoHyphens'
        dob:
          $ref: '#/components/schemas/ConsumerDateOfBirth'
    ConsumerUpdate:
      type: object
      properties:
        firstName:
          $ref: '#/components/schemas/FirstName'
        lastName:
          $ref: '#/components/schemas/LastName'
        address:
          $ref: '#/components/schemas/Address'
        city:
          $ref: '#/components/schemas/City'
        state:
          $ref: '#/components/schemas/State'
        zip:
          $ref: '#/components/schemas/ZipCode'
        phone:
          $ref: '#/components/schemas/PhoneNumber'
        ssn:
          $ref: '#/components/schemas/SocialSecurityNumber'
        birthday:
          $ref: '#/components/schemas/Birthday'
        email:
          $ref: '#/components/schemas/EmailAddress'
        suffix:
          $ref: '#/components/schemas/Suffix'
    ConvertToRepayment:
      type: integer
      description: >-
        (Student Loan) The date the loan enters into repayment. A date in Unix
        epoch time (in seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    Country:
      type: string
      description:
        Country code is Iso3166-1 Alpha-2 code and Alpha 3 standard (max length
        3).
      example: USA
    CreatedConsumer:
      description: A consumer that was just created
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ConsumerId'
        createdDate:
          $ref: '#/components/schemas/UnixDate'
        customerId:
          $ref: '#/components/schemas/NumericCustomerId'
    CreatedCustomer:
      description: A new customer that was just enrolled
      required:
        - id
        - username
        - createdDate
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CustomerId'
        username:
          $ref: '#/components/schemas/CustomerUsername'
        createdDate:
          $ref: '#/components/schemas/UnixDate'
    CreatedTestTxPushTransaction:
      required:
        - id
        - createdDate
      type: object
      properties:
        id:
          $ref: '#/components/schemas/TransactionId'
        createdDate:
          $ref: '#/components/schemas/UnixDate'
      description: Response for TxPush test transaction
    Currency:
      type: string
      description: A currency code
      example: USD
    Customer:
      description: A finicity customer record
      required:
        - id
        - username
        - type
        - createdDate
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CustomerId'
        username:
          $ref: '#/components/schemas/CustomerUsername'
        firstName:
          $ref: '#/components/schemas/FirstName'
        lastName:
          $ref: '#/components/schemas/LastName'
        type:
          $ref: '#/components/schemas/CustomerType'
        createdDate:
          $ref: '#/components/schemas/StringUnixDate'
        lastModifiedDate:
          $ref: '#/components/schemas/StringUnixDate'
    CustomerAccount:
      description: >-
        An account represents a bank account such as a checking or savings that
        the customer has added via the Connect interface.
      required:
        - id
        - accountNumberDisplay
        - name
        - accountNickname
        - number
        - type
        - status
        - customerId
        - institutionId
        - createdDate
        - currency
        - institutionLoginId
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AccountId'
        number:
          type: string
          deprecated: true
          description: The account number from the institution
          example: '2000004444'
        accountNumberDisplay:
          $ref: '#/components/schemas/AccountNumberDisplay'
        realAccountNumberLast4:
          $ref: '#/components/schemas/AccountNumberLast4'
        name:
          $ref: '#/components/schemas/Name'
        balance:
          type: number
          description: The cleared balance of the account as of `balanceDate`
          example: 401.26
        type:
          $ref: '#/components/schemas/AccountType'
        aggregationStatusCode:
          $ref: '#/components/schemas/AggregationStatusCode'
        status:
          $ref: '#/components/schemas/AggregationStatus'
        customerId:
          $ref: '#/components/schemas/CustomerId'
        institutionId:
          $ref: '#/components/schemas/InstitutionId'
        balanceDate:
          $ref: '#/components/schemas/CustomerAccountBalanceDate'
        aggregationSuccessDate:
          $ref: '#/components/schemas/CustomerAccountAggregationSuccessDate'
        aggregationAttemptDate:
          $ref: '#/components/schemas/CustomerAccountAggregationAttemptDate'
        createdDate:
          $ref: '#/components/schemas/CustomerAccountCreatedDate'
        currency:
          $ref: '#/components/schemas/Currency'
        lastTransactionDate:
          $ref: '#/components/schemas/CustomerAccountLastTransactionDate'
        oldestTransactionDate:
          $ref: '#/components/schemas/CustomerAccountOldestTransactionDate'
        institutionLoginId:
          $ref: '#/components/schemas/NumericInstitutionLoginId'
        detail:
          $ref: '#/components/schemas/CustomerAccountDetail'
        position:
          type: array
          items:
            $ref: '#/components/schemas/CustomerAccountPosition'
          description: Investment holdings
        displayPosition:
          $ref: '#/components/schemas/DisplayPosition'
        parentAccount:
          $ref: '#/components/schemas/CustomerAccountParentAccountId'
    CustomerAccountAggregationAttemptDate:
      type: integer
      description: >-
        A timestamp showing the last aggregation attempt, whether successful or
        not. This will not be present until you have run your first aggregation
        for the account. A date in Unix epoch time (in seconds). See: [Handling
        Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    CustomerAccountAggregationSuccessDate:
      type: integer
      description: >-
        A timestamp showing the last successful aggregation of the account. This
        will not be present until you have run your first aggregation for the
        account. A date in Unix epoch time (in seconds). See: [Handling Epoch
        Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    CustomerAccountBalanceDate:
      type: integer
      description: >-
        A timestamp showing when the balance was captured. A date in Unix epoch
        time (in seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    CustomerAccountCreatedDate:
      type: integer
      description: >-
        A timestamp showing when the account was added to the system. A date in
        Unix epoch time (in seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    CustomerAccountDetail:
      description: >-
        Additional customer account details. Not all data points will return for
        each account type. You can see the account type that each data point
        will return for in descriptions. The data point are also subject to
        availability by the institution.
      type: object
      properties:
        dateAsOf:
          $ref: '#/components/schemas/DateAsOf'
        availableBalanceAmount:
          type: number
          description: >-
            (Checking/Savings/CD/MoneyMarket) and (Mortgage/Loan) The available
            balance (typically the current balance with adjustments for any
            pending transactions)
          example: 5678.78
        openDate:
          $ref: '#/components/schemas/OpenDate'
        periodStartDate:
          $ref: '#/components/schemas/PeriodStartDate'
        periodEndDate:
          $ref: '#/components/schemas/PeriodEndDate'
        periodInterestRate:
          type: number
          description: >-
            (Checking/Savings/CD/MoneyMarket) The APY for the current period
            interest rate
          example: 13.245
        periodDepositAmount:
          type: number
          description:
            (Checking/Savings/CD/MoneyMarket) Amount deposited in period
          example: 2356.56
        periodInterestAmount:
          type: number
          description: >-
            (Checking/Savings/CD/MoneyMarket) Interest accrued during the
            current period
          example: 1234.56
        interestYtdAmount:
          type: number
          description:
            (Checking/Savings/CD/MoneyMarket) Interest accrued year-to-date
          example: 1056.67
        interestPriorYtdAmount:
          type: number
          description:
            (Checking/Savings/CD/MoneyMarket) Interest earned in prior year
          example: 3056.79
        maturityDate:
          $ref: '#/components/schemas/MaturityDate'
        interestRate:
          type: string
          description: >-
            (Credit Card/Line Of Credit) and (Mortgage/Loan) The account's
            current interest rate
          example: '15.789'
        creditAvailableAmount:
          type: number
          description: >-
            (Credit Card/Line Of Credit) The available credit (typically the
            credit limit minus the current balance)
          example: 3000
        creditMaxAmount:
          type: number
          description: (Credit Card/Line Of Credit) The account's credit limit
          example: 7000
        cashAdvanceAvailableAmount:
          type: number
          description:
            (Credit Card/Line Of Credit) Currently available cash advance
          example: 2000
        cashAdvanceMaxAmount:
          type: number
          description: (Credit Card/Line Of Credit) Maximum cash advance amount
          example: 3000
        cashAdvanceBalance:
          type: number
          description:
            (Credit Card/Line Of Credit) Balance of current cash advance
          example: 1000
        cashAdvanceInterestRate:
          type: number
          description:
            (Credit Card/Line Of Credit) Interest rate for cash advances
          example: 21.5
        currentBalance:
          type: number
          description:
            (Credit Card/Line Of Credit) and (Investment) Current balance
          example: 5789.34
        paymentMinAmount:
          type: number
          description:
            (Credit Card/Line Of Credit) and (Mortgage/Loan) Minimum payment due
          example: 456.78
        paymentDueDate:
          $ref: '#/components/schemas/PaymentDueDate'
        previousBalance:
          type: number
          description:
            (Credit Card/Line Of Credit) Prior balance in last statement
          example: 1234.56
        statementStartDate:
          $ref: '#/components/schemas/StatementStartDate'
        statementEndDate:
          $ref: '#/components/schemas/StatementEndDate'
        statementPurchaseAmount:
          type: number
          description:
            (Credit Card/Line Of Credit) Purchase amount of statement period
          example: 2345.9
        statementFinanceAmount:
          type: number
          description:
            (Credit Card/Line Of Credit) Finance amount of statement period
          example: 156.78
        statementCreditAmount:
          type: number
          description:
            (Credit Card/Line Of Credit) Credit amount applied in statement
            period
          example: 345
        rewardEarnedBalance:
          type: integer
          description: (Credit Card/Line Of Credit) Earned reward balance
          format: int32
          example: 500
        pastDueAmount:
          type: number
          description: (Credit Card/Line Of Credit) Balance past due
          example: 3688.99
        lastPaymentAmount:
          type: number
          description: >-
            (Credit Card/Line Of Credit) and (Mortgage/Loan) The amount received
            in the last payment
          example: 567.89
        lastPaymentDate:
          $ref: '#/components/schemas/LastPaymentDate'
        statementCloseBalance:
          type: number
          description:
            (Credit Card/Line Of Credit) Balance of statement at close
          example: 2456.69
        termOfMl:
          type: string
          description: (Mortgage/Loan) Length of loan in months
          example: '36'
        mlHolderName:
          type: string
          description: (Mortgage/Loan) Holder of the mortgage or loan
          example: John Smith
        description:
          type: string
          description: (Mortgage/Loan) Description of loan
          example: a description
        lateFeeAmount:
          type: number
          description: (Mortgage/Loan) Late fee charged
          example: 35
        payoffAmount:
          type: number
          description: (Mortgage/Loan) The amount required to payoff the loan
          example: 45567.98
        payoffAmountDate:
          $ref: '#/components/schemas/PayoffAmountDate'
        originalMaturityDate:
          $ref: '#/components/schemas/OriginalMaturityDate'
        principalBalance:
          type: number
          description: (Mortgage/Loan) The principal balance
          example: 45056.7
        escrowBalance:
          type: number
          description: (Mortgage/Loan) The escrow balance
          example: 2345.01
        interestPeriod:
          type: string
          description: (Mortgage/Loan) Period of interest
          example: monthly
        initialMlAmount:
          type: number
          description: (Mortgage/Loan) Original loan amount
          example: 65000
        initialMlDate:
          $ref: '#/components/schemas/InitialMlDate'
        nextPaymentPrincipalAmount:
          type: number
          description: (Mortgage/Loan) Amount towards principal in next payment
          example: 1256.67
        nextPaymentInterestAmount:
          type: number
          description: (Mortgage/Loan) Amount of interest in next payment
          example: 234.56
        nextPayment:
          type: number
          description: (Mortgage/Loan) Minimum payment due
          example: 1578
        nextPaymentDate:
          $ref: '#/components/schemas/NextPaymentDate'
        lastPaymentDueDate:
          $ref: '#/components/schemas/LastPaymentDueDate'
        lastPaymentReceiveDate:
          $ref: '#/components/schemas/LastPaymentReceiveDate'
        lastPaymentPrincipalAmount:
          type: number
          description: (Mortgage/Loan) Amount towards principal in last payment
          example: 1256.67
        lastPaymentInterestAmount:
          type: number
          description: (Mortgage/Loan) Amount of interest in last payment
          example: 234.56
        lastPaymentEscrowAmount:
          type: number
          description: (Mortgage/Loan) Amount towards escrow in last payment
          example: 456.78
        lastPaymentLastFeeAmount:
          type: number
          description: (Mortgage/Loan) Amount of last fee in last payment
          example: 150
        lastPaymentLateCharge:
          type: number
          description: (Mortgage/Loan) Amount of late charge in last payment
          example: 50
        ytdPrincipalPaid:
          type: number
          description: (Mortgage/Loan) Principal paid year-to-date
          example: 5432.01
        ytdInterestPaid:
          type: number
          description: (Mortgage/Loan) Interest paid year-to-date
          example: 3948.56
        ytdInsurancePaid:
          type: number
          description: (Mortgage/Loan) Insurance paid year-to-date
          example: 1345.89
        ytdTaxPaid:
          type: number
          description: (Mortgage/Loan) Tax paid year-to-date
          example: 1489
        autoPayEnrolled:
          type: boolean
          description: (Mortgage/Loan) Enrolled in autopay (F/Y)
          example: true
        collateral:
          type: string
          description: (Mortgage/Loan) Collateral on loan
          example: nissan sentra
        currentSchool:
          type: string
          description: (Mortgage/Loan) Current school
          example: utah valley university
        firstPaymentDate:
          $ref: '#/components/schemas/FirstPaymentDate'
        firstMortgage:
          type: boolean
          description: (Mortgage/Loan) First mortgage (F/Y)
          example: true
        loanPaymentFreq:
          type: string
          description: '(Mortgage/Loan) Frequency of payments (monthly, etc.)'
          example: monthly
        originalSchool:
          type: string
          description: (Mortgage/Loan) Original school
          example: brigham young university
        recurringPaymentAmount:
          type: number
          description: (Mortgage/Loan) Recurring payment amount
          example: 456.23
        lender:
          type: string
          description: (Mortgage/Loan) Owner of loan
          example: utah community credit union
        endingBalanceAmount:
          type: number
          description: (Mortgage/Loan) Ending balance
          example: 234789.45
        loanTermType:
          type: string
          description: (Mortgage/Loan) Type of loan term
          example: fixed
        paymentsMade:
          type: integer
          description: (Mortgage/Loan) Number of payments made
          format: int32
          example: 14
        balloonAmount:
          type: number
          description: (Mortgage/Loan) Balloon payment amount
          example: 1678.56
        projectedInterest:
          type: number
          description: (Mortgage/Loan) Projected interest on the loan
          example: 10456.78
        interestPaidLtd:
          type: number
          description:
            (Mortgage/Loan) Interest paid since inception of loan (life to date)
          example: 56789.34
        interestRateType:
          type: string
          description: (Mortgage/Loan) Type of interest rate
          example: variable
        loanPaymentType:
          type: string
          description: (Mortgage/Loan) Type of loan payment
          example: principle
        repaymentPlan:
          type: string
          description:
            (Mortgage/Loan) Type of repayment plan for the student loan
          example: 'Standard, Graduated, Extended, Pay As You Earn, and more.'
        paymentsRemaining:
          type: integer
          description:
            (Mortgage/Loan) Number of payments remaining before loan is paid off
          format: int32
          example: 45
        marginBalance:
          type: number
          description:
            (Investment) Net interest earned after deducting interest paid out
          example: 456
        shortBalance:
          type: number
          description: (Investment) Sum of short balance
          example: 12456.89
        availableCashBalance:
          type: number
          description: (Investment) Amount available for cash withdrawal
          example: 3456.78
        maturityValueAmount:
          type: number
          description: (Investment) amount payable to an investor at maturity
          example: 34067.78
        vestedBalance:
          type: number
          description: (Investment) Vested amount in account
          example: 45000
        empMatchAmount:
          type: number
          description: (Investment) Employer matched contributions
          example: 256.99
        empPretaxContribAmount:
          type: number
          description: (Investment) Employer pretax contribution amount
          example: 450
        empPretaxContribAmountYtd:
          type: number
          description:
            (Investment) Employer pretax contribution amount year to date
          example: 700
        contribTotalYtd:
          type: number
          description: (Investment) Total year to date contributions
          example: 2045
        cashBalanceAmount:
          type: number
          description: (Investment) Cash balance of account
          example: 2000
        preTaxAmount:
          type: number
          description: (Investment) Pre tax amount of total balance
          example: 78564.99
        afterTaxAmount:
          type: number
          description: (Investment) Post tax amount of total balance
          example: 68564.99
        matchAmount:
          type: number
          description: (Investment) Amount matched
          example: 378
        profitSharingAmount:
          type: number
          description: (Investment) Amount of balance for profit sharing
          example: 34678.89
        rolloverAmount:
          type: number
          description: >-
            (Investment) Amount of balance rolled over from original account
            (401k, etc.)
          example: 101234.67
        otherVestAmount:
          type: number
          description: (Investment) Other vested amount
          example: 34000
        otherNonvestAmount:
          type: number
          description: (Investment) Other nonvested amount
          example: 26000
        currentLoanBalance:
          type: number
          description: (Investment) Current loan balance
          example: 345789.23
        loanRate:
          type: number
          description: (Investment) Interest rate of loan
          example: 3.275
        buyPower:
          type: number
          description: (Investment) Money available to buy securities
          example: 34567.89
        rolloverLtd:
          type: number
          description: (Investment) Life to date of money rolled over
          example: 23456.78
        loanAwardId:
          type: string
          description: (Student Loan) The federal unique loan identifying number
          example: '1234568'
        originalInterestRate:
          type: number
          description: >-
            (Student Loan) The original interest rate to which the loan was
            disbursed, in APY
          example: 12
        guarantor:
          type: string
          description: >-
            (Student Loan) The financial institution guarantor of the loan (who
            will pay the loan amount to the owner if the borrower defaults)
          example: FinBank
        owner:
          type: string
          description: (Student Loan) Owner of the loan
          example: FinBank
        interestSubsidyType:
          type: string
          description: >-
            (Student Loan) The indication of the presence of an interest subsidy
            (i.e. subsidized)
          example: Subsidy type
        interestBalance:
          type: number
          description: (Student Loan) The total outstanding interest balance
          example: 2000
        remainingTermOfMl:
          type: number
          description:
            (Student Loan) The number of months still outstanding on a loan
          example: 2
        initialInterestRate:
          type: number
          description: (Student Loan) Initial interest rate of loan
          example: 34567.89
        feesBalance:
          type: number
          description: (Student Loan) The total outstanding fees balance
          example: 150
        loanYtdInterestPaid:
          type: number
          description: (Student Loan) Loan interest paid year-to-date
          example: 5623.23
        loanYtdFeesPaid:
          type: number
          description: (Student Loan) Loan fees paid year-to-date
          example: 5621.23
        loanYtdPrincipalPaid:
          type: number
          description: (Student Loan) Loan principal paid year-to-date
          example: 5621.23
        loanStatus:
          type: string
          description: >-
            (Student Loan) The repayment status phase (i.e. In School, Grace,
            Repayment, Deferment, Forbearance)
          example: Deferment
        loanStatusStartDate:
          $ref: '#/components/schemas/LoanStatusStartDate'
        loanStatusEndDate:
          $ref: '#/components/schemas/LoanStatusEndDate'
        weightedInterestRate:
          type: number
          description: >-
            (Student Loan) The interest rate of multiple interest rates and
            balances at the group level, in APY
          example: 12
        repaymentPlanStartDate:
          $ref: '#/components/schemas/RepaymentPlanStartDate'
        repaymentPlanEndDate:
          $ref: '#/components/schemas/RepaymentPlanEndDate'
        expectedPayoffDate:
          $ref: '#/components/schemas/ExpectedPayoffDate'
        outOfSchoolDate:
          $ref: '#/components/schemas/OutOfSchoolDate'
        convertToRepayment:
          $ref: '#/components/schemas/ConvertToRepayment'
        daysDelinquent:
          type: integer
          description: >-
            (Student Loan) The number of days past a due date that a payment
            should have been made
          format: int32
          example: 5
        totalPrincipalPaid:
          type: number
          description:
            (Student Loan) The total amount paid towards the principal balance
          example: 15000
        totalInterestPaid:
          type: number
          description: (Student Loan) The total amount paid towards interest
          example: 1125
        totalAmountPaid:
          type: number
          description: (Student Loan) The total amount paid
          example: 16125
    CustomerAccountLastTransactionDate:
      type: integer
      description: >-
        The date of the latest transaction on the account. This will not be
        present until you have run your first aggregation for the account. A
        date in Unix epoch time (in seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    CustomerAccountOldestTransactionDate:
      type: integer
      description: >-
        The date of the oldest transaction in the transactions for the account.
        A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    CustomerAccountParentAccountId:
      type: string
      description: >-
        The assigned account ID for the account one level higher in the student
        loan account hierarchy
      example: '5011648377'
    CustomerAccountPosition:
      description: Details for investment account holdings
      type: object
      properties:
        id:
          type: integer
          description: The ID of the investment position
          format: int64
          example: 454678080
        description:
          type: string
          description: The description of the holding
          example: DELTA AIR LINES INC
        symbol:
          type: string
          description: The investment position's market ticker symbol
          example: DAL
        units:
          type: number
          description: The number of units of the holding
          example: 6.537
        currentPrice:
          type: number
          description: The current price of the investment holding
          example: 41.585
        securityName:
          type: string
          description: The security name for the investment holding
          example: DELTA AIR LINES INC
        transactionType:
          type: string
          description:
            'The transaction type of the holding, such as cash, margin, and more'
          example: Margin
        marketValue:
          type: number
          description:
            Market value of an investment position at the time of retrieval
          example: 271.84
        costBasis:
          type: number
          description: The total cost of acquiring the security
          example: 190.01
        status:
          type: string
          description: The status of the holding
          example: A
        currentPriceDate:
          $ref: '#/components/schemas/UnixDate'
        securityType:
          type: string
          description: Type of security for the investment position
          example: Stock
        mfType:
          type: string
          description: 'Type of mutual fund, such as open ended'
          example: OPENEND
        posType:
          type: string
          description: Fund type assigned by the FI (long or short)
          example: Long
        totalGLDollar:
          type: number
          description: >-
            Total gain and loss of the position at the time of aggregation in
            dollars
          example: 162742.9
        totalGLPercent:
          type: number
          description: >-
            Total gain and loss of the position at the time of aggregation in
            percentage
          example: 68.89
        optionStrikePrice:
          type: number
          description: The strike price of the option contract
          example: 50
        optionType:
          type: string
          description: The type of option contract (PUT or CALL)
          example: PUT
        optionSharesPerContract:
          type: number
          description: The number of shares per option contract
          example: 100
        optionExpireDate:
          type: string
          description: Expiration date of option
          format: date
          example: '1644994800'
        fiAssetClass:
          type: string
          description: >-
            Financial Institution (FI) defined asset class (COMMON STOCK,
            COMNEQTY, EQUITY/STOCK, CMA-ISA, CONVERTIBLE PREFERREDS, CORPORATE
            BONDS, OTHER MONEY FUNDS, ALLOCATION FUNDS, CMA-TAXABLE,
            FOREIGNEQUITYADRS, COMMONSTOCK, PREFERRED STOCKS, STABLE VALUE,
            FOREIGN EQUITY ADRS)
          example: COMNEQTY
        assetClass:
          type: string
          description: >-
            An asset class is a grouping of comparable financial securities.
            These include equities (stocks), fixed income (bonds), and cash
            equivalent or money market instruments. (DOMESTICBOND, LARGESTOCK,
            INTLSTOCK, MONEYMRKT, OTHER)
          example: INTLSTOCK
        currencyRate:
          type: number
          description: 'Currency rate, ratio of currency to original currency'
          example: 1
        securityId:
          type: string
          description: The security ID of the transaction
          example: 25400W102
        securityIdType:
          $ref: '#/components/schemas/SecurityIdType'
        costBasisPerShare:
          type: number
          description: The per share cost of acquiring the security
          example: 13.38
        subAccountType:
          type: string
          description: "The subaccount's type, such as cash"
          example: CASH
        securityCurrency:
          type: string
          description:
            Symbol for the currency that the account is being converted into
          example: USD
        todayGLDollar:
          type: number
          description: >-
            The current day's gain and loss of the position at the time of
            aggregation in dollars
          example: 16272.9
        todayGLPercent:
          type: number
          description: >-
            The current day's gain and loss of the position at the time of
            aggregation in percentage
          example: 18.89
    CustomerAccountSimple:
      description: >-
        An account represents a bank account such as a checking or savings that
        the customer has added via the Connect interface.
      required:
        - id
        - accountNumberDisplay
        - name
        - type
        - status
        - customerId
        - institutionId
        - createdDate
        - currency
        - institutionLoginId
        - displayPosition
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AccountId'
        accountNumberDisplay:
          $ref: '#/components/schemas/AccountNumberDisplay'
        name:
          $ref: '#/components/schemas/Name'
        type:
          $ref: '#/components/schemas/AccountType'
        aggregationStatusCode:
          $ref: '#/components/schemas/AggregationStatusCode'
        status:
          $ref: '#/components/schemas/AggregationStatus'
        customerId:
          $ref: '#/components/schemas/CustomerId'
        institutionId:
          $ref: '#/components/schemas/InstitutionId'
        aggregationSuccessDate:
          $ref: '#/components/schemas/UnixDate'
        aggregationAttemptDate:
          $ref: '#/components/schemas/UnixDate'
        createdDate:
          $ref: '#/components/schemas/UnixDate'
        currency:
          $ref: '#/components/schemas/Currency'
        institutionLoginId:
          $ref: '#/components/schemas/NumericInstitutionLoginId'
        displayPosition:
          $ref: '#/components/schemas/DisplayPosition'
        parentAccount:
          $ref: '#/components/schemas/AccountId'
    CustomerAccounts:
      description: A list of customer accounts
      required:
        - accounts
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/CustomerAccount'
          description: List of customer accounts
    CustomerAccountsSimple:
      description: A list of accounts with basic information of a customer
      required:
        - accounts
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/CustomerAccountSimple'
          description: A list of accounts with basic information of a customer
    CustomerId:
      type: string
      description:
        A customer ID. See Add Customer API for how to create a customer ID.
      example: '1005061234'
    CustomerType:
      type: string
      description:
        The type of customer ("active" or "testing" or "" for all types)
      example: active
    CustomerUpdate:
      description: Represent an update to customer fields
      type: object
      properties:
        firstName:
          $ref: '#/components/schemas/FirstName'
        lastName:
          $ref: '#/components/schemas/LastName'
    CustomerUsername:
      type: string
      description: >-
        The customer's username, assigned by the partner (a unique identifier),
        following these rules: minimum 6 characters maximum 255 characters any
        mix of uppercase, lowercase, numeric, and non-alphabet special
        characters ! @ . # $ % & * _ - + the use of email in this field is
        discouraged it is recommended to use a unique non-email identifier. Use
        of special characters may result in an error (e.g. í, ü, etc.).
        Usernames are unique. A username used in [Test
        Drive](https://signup.finicity.com/) can't be reused in other plans.
      example: customerusername1
    CustomerWithAppData:
      description: A finicity customer record with application info
      required:
        - id
        - username
        - firstName
        - lastName
        - type
        - createdDate
        - applicationId
        - applicationName
      allOf:
        - $ref: '#/components/schemas/Customer'
        - type: object
          properties:
            applicationId:
              $ref: '#/components/schemas/ApplicationId'
            applicationName:
              $ref: '#/components/schemas/ApplicationName'
    Customers:
      description: A list of customers
      required:
        - displaying
        - moreAvailable
        - customers
      type: object
      properties:
        found:
          $ref: '#/components/schemas/FoundResults'
        displaying:
          $ref: '#/components/schemas/DisplayingResults'
        moreAvailable:
          $ref: '#/components/schemas/MoreResultsAvailable'
        customers:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
          description: A list of customer records
    DateAsOf:
      type: integer
      description: >-
        (All Account Types) Most recent date of the following information. A
        date in Unix epoch time (in seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    DateTimeWithZone:
      type: string
      format: date-time
      description: A date-time with time zone
      example: '2022-03-10T06:06:20.042584549Z'
    DecimalNumber:
      type: number
      format: float
      description: Decimal number
      example: 0.12
    Deduction:
      type: object
      properties:
        name:
          type: string
          description: >-
            The normalized category of the deductions in the format
            [type][number]. The number is the will be the iterating number of
            the type's occurrence starting at one.
          example: '401'
        description:
          type: string
          description: The deduction line's deduction type description
          example: 401k
        amountCurrent:
          type: number
          description: >-
            The amount for the deduction line deducted from employee's pay for
            the specified pay period
          example: 1744.61
        amountYTD:
          type: number
          description: >-
            The amount for the deduction line being deducted from the employee's
            pay for the current pay year
          example: 1744.6
        type:
          type: string
          description: Categorization based on the deduction line's description
          example: 401 Deductions
    Deductions:
      required:
        - type
        - amount
      type: object
      properties:
        type:
          type: string
          description: >
            Deduction types:


            * `Federal tax`: Federal tax withholdings 


            * `State tax`: State tax withholdings 


            * `Local tax`: Local tax withholdings 


            * `Social security tax`: Social security tax withholdings 


            * `Medicare tax`: Medicare withholdings 


            * `SUI SDI VPDI tax`: SUI SDI VPDI tax 


            * Retirement deductions: Retirement withholdings 


            * `Benefit deductions`: Medical/Health benefits withholdings (i.e.
            medical, dental, vision, insurance) 


            * `Garnishment deductions`: Garnishment withholdings, (i.e.
            bankruptcy, student loan, state garnishments, tax levy garnishments,
            child support) 


            * `Other deductions`: Other withholdings, includes any other
            uncommon withholdings, pension plan, stock plans, etc.
          example: State tax
        amount:
          type: number
          description: Amount associated with deduction
          example: 4.28
    DirectDeposit:
      type: object
      properties:
        amountCurrent:
          type: number
          description: The amount of the deposit
          example: 1744.61
        accountLastFour:
          type: string
          description:
            The last four numbers of the account the deposit went into
          example: '1234'
    DirectDeposits:
      type: object
      properties:
        accountTypeCode:
          type: string
          description: >
            Bank account type:


            * `Checking`


            * `Savings`


            * `Loan`: Loan account employee choose to direct a portion of their
            net pay to help pay off a loan
          example: Savings
        amount:
          type: number
          description: Direct deposit amount
          example: 12.34
        accountLastFour:
          type: string
          description: Last four digits of the deposit account number
          example: 3337
        routingNumber:
          type: string
          description: Routing number for the deposit account
          example: 30207583
    DirectPayStatements:
      required:
        - payrollPayHistoryId
        - lastPayPeriodIndicator
        - mainPayStatementFields
        - earnings
      type: object
      properties:
        payrollPayHistoryId:
          type: string
          description:
            An ID for the income and employment details for the given pay period
          example: qsrt2hmjnf
        lastPayPeriodIndicator:
          type: boolean
          description: Most recent available pay check
          example: true
        mainPayStatementFields:
          $ref: '#/components/schemas/MainPayStatementFields'
        earnings:
          type: array
          items:
            $ref: '#/components/schemas/Earnings'
          description: 'Categorization of pay, for the pay period'
        deductions:
          type: array
          items:
            $ref: '#/components/schemas/Deductions'
          description: Deductions from the pay check
        directDeposits:
          type: array
          items:
            $ref: '#/components/schemas/DirectDeposits'
          description: Direct deposit information for the paycheck
    DisplayPosition:
      type: integer
      description: |-
        Display position of the account at the financial institution, "1"
            being the top listed account
      format: int32
      example: 2
    DisplayingResults:
      type: integer
      description: The number of results returned
      example: 1
    Earnings:
      required:
        - type
        - amount
      type: object
      properties:
        name:
          type: string
          description:
            'Where available, the employer description of earnings on the
            paycheck'
          example: bonusPayAmount
        type:
          type: string
          description: |
            Categorization of the earnings:

            * `base`

            * `bonus`

            * `overtime`

            * `commission`

            * `tips`

            * `other`
          example: bonus
        rate:
          type: number
          description: Rate of pay
          example: 19
        amount:
          type: number
          description: Earnings amount for each earning type
          example: 589
        amountYTD:
          type: number
          description: Earnings YTD amount if available
          example: 14301.25
    EmailAddress:
      type: string
      description: An email address
      example: myname@mycompany.com
    EmailDomainCreationDate:
      type: string
      description: Returns a date that the email domain was created.
      example: '2011-06-29T00:00:00.000Z'
    EmailFirstSeenDays:
      type: number
      description: >-
        Count of days since the email was first observed in Ekata's Identity
        Network. If the email has not been observed before, first_seen_days will
        be 0.
      example: 453
    EmailOptions:
      description: Configuration for the Connect email's sent to customers
      required:
        - to
      type: object
      properties:
        to:
          type: string
          description:
            The email address for the customer receiving the Connect email
          example: bob@example.com
        from:
          type: string
          description:
            The name of a person or business sending the Connect email
          example: test.lender@test.com
        supportPhone:
          type: string
          description: The support phone number listed in the email
          example: 800-555-5555
        subject:
          type: string
          description: >-
            The subject line of the email. The default is "Verify your Financial
            Information".
          example: Verify your income
        firstName:
          type: string
          description: >-
            The first name of the customer or both names of the customers for
            joint borrowers. Example: "Marvin and Jenny".
          example: Bob
        institutionName:
          type: string
          description: The name of your company
          example: Acme Lending
        institutionAddress:
          type: string
          description:
            The institution address to appear in the footer of the email
          example: '222 Winipeg Drive SLC UT, 84109'
        signature:
          type: array
          items:
            type: string
          description: A signature for the email
          example:
            - Cindy Mayfield
            - Senior Loan Officer
            - Direct 123-456-7890
    EmailToName:
      type: string
      description: |-
        The match status between the input name and the queried entity.
        * not found
        * match
        * no-match
      example: not found
    EmailValid:
      type: boolean
      description: True if the email address is valid.
      example: true
    Employee:
      type: object
      properties:
        name:
          type: string
          description: The name of the employee
          example: Patrick Purchaser
    Employer:
      type: object
      properties:
        name:
          type: string
          description: The name of the employer
          example: Rocket Surgery
    EmployerName:
      type: string
      description:
        Name of the employer as stated by the employer in the payroll system
      example: ACME INC
    ErrorMessage:
      required:
        - code
      type: object
      properties:
        code:
          type: object
          description: >-
            An error code (can be returned as a number or a string). Useful
            links: [API Errors](https://docs.finicity.com/api-errors/),
            [Aggregation Status
            Codes](https://docs.finicity.com/aggregation-status-codes/).
          example: '10001'
        status:
          type: string
          description: A status code
          example: '401'
        title:
          type: string
          description: A title for the error
          example: Connecting accounts error
        level:
          type: string
          description: An error level
          example: error
        message:
          type: string
          description: An error message
          example: Invalid authorization credentials
        user_message:
          type: string
          description: Some more details about the error
          example: The session has expired or is invalid
        assetId:
          $ref: '#/components/schemas/AssetId'
        accountId:
          $ref: '#/components/schemas/AccountId'
    EstimateInclusion:
      description: 'Possible values: "HIGH", "MODERATE", "LOW", "NO"'
      type: string
    ExcludeEmpInfo:
      type: boolean
      description: >-
        Only used on an exception basis for clients that need to exclude EmpInfo
        data from the VOE-Payroll or VOIE-Payroll report. If true is passed
        EmpInfo payroll provider's data will not be searched or returned.
      example: false
    ExpectedPayoffDate:
      type: integer
      description: >-
        (Student Loan) The expected date of the payoff date. A date in Unix
        epoch time (in seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    Experience:
      type: string
      description: >-
        The `experience` field allows you to customize:

        * Brand: color and logo

        * Icon: displayed on the "Share your data" page 

        * Popular institutions: displayed on the Bank Search page 

        * Report: the credit decisioning report to send when Connect completes. 

        * MVS modules: financial, payroll, paystub


        Note: the Finicity sales engineers (SE) help you set up a default
        experience for your company when you migrate to Connect 2.0. For each
        additional experience you create thereafter, they'll give you a unique
        ID. See [Generate 2.0 Connect URL
        APIs](https://docs.finicity.com/migrate-to-connect-web-sdk-2-0/#migrate-connect-web-sdk-1).


        Experience values options: 

        * "default": your default experience (must be defined) 

        * GUID: the code for a different experience

        * Not defined: If you don't pass the experience parameter, then
        Connect's out of the box default experience (add accounts but no
        branding) is used, and the MVS modules will not run.
      example: default
    ExtractDeductions:
      type: boolean
      description:
        Field to indicate whether to extract the deductions on all pay
        statements
      default: false
      example: true
    ExtractDirectDeposit:
      type: boolean
      description: >-
        Field to indicate whether to extract the direct deposits on all pay
        statements
      default: true
      example: true
    ExtractEarnings:
      type: boolean
      description:
        Field to indicate whether to extract the earnings on all pay statements
      default: true
      example: true
    FirstName:
      type: string
      description: The first name of the account holder
      example: John
    FirstPaymentDate:
      type: integer
      description: >-
        (Mortgage/Loan) First payment due date. A date in Unix epoch time (in
        seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    FixConnectParameters:
      required:
        - partnerId
        - customerId
        - institutionLoginId
      type: object
      properties:
        language:
          $ref: '#/components/schemas/ConnectLanguage'
        partnerId:
          $ref: '#/components/schemas/PartnerId'
        customerId:
          $ref: '#/components/schemas/CustomerId'
        institutionLoginId:
          $ref: '#/components/schemas/InstitutionLoginId'
        redirectUri:
          $ref: '#/components/schemas/RedirectUri'
        webhook:
          $ref: '#/components/schemas/Webhook'
        webhookContentType:
          $ref: '#/components/schemas/WebhookContentType'
        webhookData:
          $ref: '#/components/schemas/WebhookData'
        webhookHeaders:
          $ref: '#/components/schemas/WebhookHeaders'
        experience:
          $ref: '#/components/schemas/Experience'
        singleUseUrl:
          $ref: '#/components/schemas/SingleUseUrl'
        isWebView:
          $ref: '#/components/schemas/IsWebView'
    FoundResults:
      type: integer
      description: The total number of results matching search criteria
      example: 200
    GovernmentId:
      type: string
      description: |-
        A federal or state issued identification number in alphanumeric characters.
        * **United States**:

          * Passport: 6-9 digits.

          * US Visa: 8 digits.

          * Driver's license: 1-19 digits
        * **Canada**:

          * Passport: 8 digits 

          * Driver: 6-9 digits
      example: '123456789'
    GseEnabled:
      type: boolean
      description: >-
        Mastercard Open Banking internal use only to flag reports that should
        not be retrieved by the GSE's (Government-Sponsored Enterprise).


        This is a mandatory field for VOE-payroll and VOIE-payroll report types.
      example: true
    IdentityNetworkScore:
      type: number
      description: >-
        Comprehensive network score built on behavioral insights such as
        velocity, popularity, volatility, and age of an attribute, with a higher
        score indicating a riskier account sign-up. A number between 0 and 1
        rounded to three decimal places.
      example: 0.574
    IdentityRiskScore:
      type: number
      description: >-
        Comprehensive identity risk score with a higher score indicating a
        riskier account sign-up.
      example: 275
    IncludePending:
      type: boolean
      description: If pending transactions must be included
      example: true
      default: false
    IncomeStreamConfidenceMinimum:
      type: integer
      description: >-
        Include income streams in the report, based on the income stream's
        confidence score. For example, Use the value 50 to include only income
        streams with a confidence score of 50 or higher.
      format: int32
      example: 50
    InitialMlDate:
      type: integer
      description: >-
        (Mortgage/Loan) Original date of loan. A date in Unix epoch time (in
        seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    InitiatedMicroDeposit:
      type: object
      properties:
        accountId:
          $ref: '#/components/schemas/AccountId'
        status:
          type: string
          example: Pending
          description: Micro entries successful initiation status
        depositCount:
          $ref: '#/components/schemas/MicroDepositCount'
        statusDescription:
          type: string
          example: Micro entries successfully initiated
          description: Micro entries successful initiation description
    Institution:
      description: A financial institution
      required:
        - id
        - transAgg
        - ach
        - stateAgg
        - voi
        - voa
        - aha
        - availBalance
        - accountOwner
        - oauthEnabled
        - currency
        - status
      type: object
      properties:
        id:
          $ref: '#/components/schemas/NumericInstitutionId'
        name:
          $ref: '#/components/schemas/InstitutionName'
        transAgg:
          $ref: '#/components/schemas/InstitutionTransAgg'
        ach:
          $ref: '#/components/schemas/InstitutionAch'
        stateAgg:
          $ref: '#/components/schemas/InstitutionStateAgg'
        voi:
          $ref: '#/components/schemas/InstitutionVoi'
        voa:
          $ref: '#/components/schemas/InstitutionVoa'
        aha:
          $ref: '#/components/schemas/InstitutionAha'
        availBalance:
          $ref: '#/components/schemas/InstitutionAvailableBalance'
        accountOwner:
          $ref: '#/components/schemas/InstitutionAccountOwner'
        studentLoanData:
          $ref: '#/components/schemas/StudentLoanDataCertification'
        loanPaymentDetails:
          $ref: '#/components/schemas/LoanPaymentDetailCertification'
        accountTypeDescription:
          type: string
          description: >-
            Values: Banking, Investments, Credit Cards/Accounts, Workplace
            Retirement, Mortgages and Loans, Insurance
          example: Workplace Retirement
        phone:
          $ref: '#/components/schemas/PhoneNumber'
        urlHomeApp:
          type: string
          description: The URL of the institution's primary home page
          example: 'https://www.example.com/home'
        urlLogonApp:
          type: string
          description: The URL of the institution's login page
          example: 'https://www.example.com/login'
        oauthEnabled:
          type: boolean
          description: |-
            "true": The institution is an OAuth connection

            "false": The institution isn't an OAuth connection
          example: true
        urlForgotPassword:
          type: string
          description: Institution's forgot password page
          example: 'https://www.example.com/forgotPassword.do'
        urlOnlineRegistration:
          type: string
          description: Institution's signup page
          example: 'https://www.example.com/signup'
        class:
          type: string
          description: Institution's class
          example: retirement
        specialText:
          type: string
          description: Special instructions given to customers for login
          example: >-
            Please enter your Principal Financial - Retirement (Personal)
            Username and Password.
        timeZone:
          type: string
          description: The time zone of the institution.
          example: America/Denver
        specialInstructions:
          type: array
          items:
            type: string
          description: >-
            Instructions given to the customer before they are sent to the
            institution website to login for OAuth institutions.


            Note: this helps the customer to provide the proper permission for
            data needed for the application.
          example:
            - Account details
            - Balances and transactions
            - Personal and account ownership info
        specialInstutionsTitle:
          type: string
          description:
            'The title of the special instructions, if one exists or is
            required.'
          example: Special OAuth Login Instructions
        address:
          $ref: '#/components/schemas/InstitutionAddress'
        currency:
          $ref: '#/components/schemas/Currency'
        email:
          $ref: '#/components/schemas/EmailAddress'
        status:
          type: string
          description: >-
            Status for the institution: "online", "offline", "maintenance",
            "testing"
          example: online
        newInstitutionId:
          $ref: '#/components/schemas/NumericInstitutionId'
        branding:
          $ref: '#/components/schemas/Branding'
        oauthInstitutionId:
          $ref: '#/components/schemas/NumericInstitutionId'
    InstitutionAccountOwner:
      type: boolean
      description: |-
        "true": The institution is certified for the Account Owner product
        "false": The institution is decertified for the Account Owner product
      example: true
    InstitutionAch:
      type: boolean
      description: |-
        "true": The institution is certified for the ACH product
        "false": The institution is decertified for the ACH product
      example: true
    InstitutionAddress:
      type: object
      description: The address of a financial institution
      properties:
        city:
          $ref: '#/components/schemas/City'
        state:
          $ref: '#/components/schemas/State'
        country:
          $ref: '#/components/schemas/Country'
        postalCode:
          $ref: '#/components/schemas/ZipCode'
        addressLine1:
          $ref: '#/components/schemas/AddressLine1'
        addressLine2:
          $ref: '#/components/schemas/AddressLine2'
    InstitutionAha:
      type: boolean
      description: >-
        "true": The institution is certified for the Account History Aggregation
        product

        "false": The institution is decertified for the Account History
        Aggregation product
      example: false
    InstitutionAvailableBalance:
      type: boolean
      description: >-
        "true": The institution is certified for the Account Balance Check (ABC)
        product

        "false": The institution is decertified for the Account Balance Check
        (ABC) product
      example: false
    InstitutionId:
      description: The ID of a financial institution
      type: string
      example: '4222'
    InstitutionLoginId:
      type: string
      description: An institution login ID (from the account record)
      example: '1007302745'
    InstitutionName:
      type: string
      description: The name of the institution
      example: FinBank
    InstitutionSettings:
      type: object
      description: >-
        Advanced options for configuration of which institutions to display in.
        See [Institution
        Settings](https://docs.finicity.com/connect-institution-settings/).
    InstitutionStateAgg:
      type: boolean
      description: >-
        "true": The institution is certified for the Statement Aggregation
        product

        "false": The institution is decertified for the Statement Aggregation
        product
      example: false
    InstitutionTransAgg:
      type: boolean
      description: >-
        "true": The institution is certified for the Transaction Aggregation
        product

        "false": The institution is decertified for the Transaction Aggregation
        product
      example: true
    InstitutionVoa:
      type: boolean
      description: |-
        "true": The institution is certified for the VOA product
        "false": The institution is decertified for the VOA product
      example: true
    InstitutionVoi:
      type: boolean
      description: |-
        "true": The institution is certified for the VOI product
        "false": The institution is decertified for the VOI product
      example: true
    InstitutionWrapper:
      type: object
      required:
        - institution
      properties:
        institution:
          $ref: '#/components/schemas/Institution'
    Institutions:
      description:
        A list of financial institutions from the Get Institutions API
      required:
        - found
        - displaying
        - moreAvailable
        - createdDate
        - institutions
      type: object
      properties:
        found:
          $ref: '#/components/schemas/FoundResults'
        displaying:
          $ref: '#/components/schemas/DisplayingResults'
        moreAvailable:
          $ref: '#/components/schemas/MoreResultsAvailable'
        createdDate:
          $ref: '#/components/schemas/UnixDate'
        institutions:
          description: A list of institutions
          maxItems: 1000
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Institution'
    InsufficientFundsTransaction:
      properties:
        amount:
          description: Amount of the NSF transaction
          example: -1.65
          type: number
        description:
          description: Description of the transaction
          example: OVERDRAFT FEE
          type: string
          minLength: 0
          maxLength: 255
        memo:
          description: Transaction memo
          example: NSF
          type: string
          minLength: 0
          maxLength: 255
        postedDate:
          description: Posted date of the NSF transaction
          example: '2022-12-19'
          type: string
          minLength: 10
          maxLength: 10
        transactionId:
          description: Finicity transaction ID
          example: 23092384290
          type: integer
      required:
        - postedDate
        - amount
        - transactionId
      type: object
    InvestmentTransactionTypes:
      type: string
      description: >-
        Keywords in the `description` and `memo` fields were used to translate
        investment transactions into these types.


        Possible values: 

        * "cancel"


        * "purchaseToClose"


        * "purchaseToCover"


        * "contribution"


        * "optionExercise"


        * "optionExpiration"


        * "fee"


        * "soldToClose"


        * "soldToOpen"


        * "split"


        * "transfer"


        * "returnOfCapital"


        * "income"


        * "purchased"


        * "sold"


        * "dividendreInvest"


        * "tax"


        * "dividend"


        * "reinvestOfIncome"


        * "interest"


        * "deposit"


        * "otherInfo"
      example: transfer
    IpAddressDistance:
      type: number
      description:
        The distance (in miles) between the IP address and the physical address.
      example: 210
    IpGeolocationCountryCode:
      type: string
      description: >-
        The ISO-3166 alpha-2 country code associated with the geolocation of the
        IP address.
      example: US
    IpGeolocationSubdivision:
      type: string
      description: More granular detail about the IP address location.
      example: Oregon
    IpLastSeenDays:
      type: number
      description: >-
        Count of days since the IP address was last observed in Ekata's Identity
        Network. If the IP address has not been observed before, IpLastSeenDays
        will be 0.
      example: 15
    IpPhoneDistance:
      type: number
      description: >-
        The distance (in miles) between the IP address and the closest physical
        address associated with the phone number.
      example: 200
    IpRisk:
      type: number
      description: >-
        True if the IP address is considered risky, based on multiple IP data
        points and velocity calculations.
      example: true
    IpRiskScore:
      type: number
      description: >-
        Comprehensive risk score associated with an IP address, with a higher
        score indicating a riskier IP address. A number between 0 and 1 rounded
        to three decimal places.
      example: 0.123
    IsWebView:
      type: boolean
      description: >-
        "true": Indicates that the Connect Session will be displayed within a
        WebView.

        Note: when the `isWebView` parameter is `true` the `redirectUri`
        parameter is required.
      example: true
    LastName:
      type: string
      description: The last name of the account holder
      example: Smith
    LastPaymentDate:
      type: integer
      description: >-
        (Credit Card/Line Of Credit) The date of the last payment. A date in
        Unix epoch time (in seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    LastPaymentDueDate:
      type: integer
      description: >-
        (Mortgage/Loan) Due date of last payment. A date in Unix epoch time (in
        seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    LastPaymentReceiveDate:
      type: integer
      description: >-
        (Mortgage/Loan) The date of the last payment. A date in Unix epoch time
        (in seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    LiteConnectParameters:
      required:
        - partnerId
        - customerId
        - institutionId
      type: object
      properties:
        language:
          $ref: '#/components/schemas/ConnectLanguage'
        partnerId:
          $ref: '#/components/schemas/PartnerId'
        customerId:
          $ref: '#/components/schemas/CustomerId'
        institutionId:
          $ref: '#/components/schemas/NumericInstitutionId'
        redirectUri:
          $ref: '#/components/schemas/RedirectUri'
        webhook:
          $ref: '#/components/schemas/Webhook'
        webhookContentType:
          $ref: '#/components/schemas/WebhookContentType'
        webhookData:
          $ref: '#/components/schemas/WebhookData'
        webhookHeaders:
          $ref: '#/components/schemas/WebhookHeaders'
        experience:
          $ref: '#/components/schemas/Experience'
        singleUseUrl:
          $ref: '#/components/schemas/SingleUseUrl'
        isWebView:
          $ref: '#/components/schemas/IsWebView'
    LoanPaymentDetailCertification:
      type: boolean
      description: |-
        "true": The institution is certified for the Loan Payment Detail product

        "false": The institution is decertified for the Loan Payment Detail product
      example: true
    LoanPaymentDetails:
      description: Loan payment details for a customer account
      required:
        - loanNumber
        - loanPaymentNumber
        - loanPaymentAddress
      type: object
      properties:
        loanNumber:
          type: string
          description: The number of the specific loan under the account.
          example: '123456789'
        loanPaymentNumber:
          type: string
          description: >-
            The payment number given by the institution. This number is
            typically for manual payments. This is not an ACH payment number.
          example: '5231123456789'
        loanPaymentAddress:
          type: string
          description: The payment address to send manual payments to
          example: Heartland ECSI       PO Box 718       Wexford PA 15090
        accountDetail:
          $ref: '#/components/schemas/LoanPaymentDetailsAccount'
    LoanPaymentDetailsAccount:
      required:
        - accountId
        - accountNumber
        - accountPaymentNumber
        - accountPaymentAddress
      type: object
      properties:
        accountId:
          $ref: '#/components/schemas/AccountId'
        accountNumber:
          type: string
          description: Institution's ID of the Student Loan Account
          example: '9876543210'
        accountPaymentNumber:
          type: string
          description: >-
            The payment number given by the institution. This number is
            typically for manual payments. This is not an ACH payment number.
          example: 00001234895413
        accountPaymentAddress:
          type: string
          description:
            The payment address to which send manual payments should be sent
          example: 'P.O. Box 123 Sioux Falls, IA 51054'
        accountFuturePayoffAmount:
          type: number
          description: The payoff amount for the account
          example: 10000
        accountFuturePayoffDate:
          type: string
          description: The date to which the "Future Payoff Amount" applies
          format: date-time
          example: '2022-01-01T00:00:00.000Z'
        groupDetail:
          description: Group details
          type: array
          items:
            $ref: '#/components/schemas/LoanPaymentDetailsGroup'
        loanDetail:
          description: Loan details
          type: array
          items:
            $ref: '#/components/schemas/LoanPaymentDetailsLoan'
    LoanPaymentDetailsGroup:
      description: Group details
      required:
        - accountId
        - groupNumber
        - groupPaymentNumber
        - groupPaymentAddress
        - groupLoanDetail
      type: object
      properties:
        accountId:
          $ref: '#/components/schemas/AccountId'
        groupNumber:
          type: string
          description: Institution's ID of the Student Loan Group
          example: 3210-Group A
        groupPaymentNumber:
          type: string
          description: >-
            The payment number given by the institution. This number is
            typically for manual payments. This is not an ACH payment number.
          example: 00001234895413-A
        groupPaymentAddress:
          type: string
          description:
            The payment address to which send manual payments should be sent
          example: 'P.O. Box 123 Sioux Falls, IA 51054'
        groupFuturePayoffAmount:
          type: number
          description: The payoff amount for the group
          example: 7500
        groupFuturePayoffDate:
          type: string
          description: The date to which the "Future Payoff Amount" applies
          format: date-time
          example: '2022-01-01T00:00:00.000Z'
        groupLoanDetail:
          type: array
          items:
            $ref: '#/components/schemas/LoanPaymentDetailsLoan'
    LoanPaymentDetailsLoan:
      description: Loan details
      required:
        - accountId
        - loanNumber
        - loanPaymentNumber
        - loanPaymentAddress
      type: object
      properties:
        accountId:
          $ref: '#/components/schemas/AccountId'
        loanNumber:
          type: string
          description: Institution's ID of the Student Loan
          example: 3210-Group A-1
        loanPaymentNumber:
          type: string
          description: >-
            The payment number given by the institution. This number is
            typically for manual payments. This is not an ACH payment number.
          example: 00001234895413-A-1
        loanPaymentAddress:
          type: string
          description:
            The payment address to which send manual payments should be sent
          example: 'P.O. Box 123 Sioux Falls, IA 51054'
        loanFuturePayoffAmount:
          type: number
          description: The payoff amount for the loan
          example: 5000
        loanFuturePayoffDate:
          type: string
          description: The date to which the "Future Payoff Amount" applies
          format: date-time
          example: '2022-01-01T00:00:00.000Z'
    LoanStatusEndDate:
      type: integer
      description: >-
        (Student Loan) The end date of the current status. A date in Unix epoch
        time (in seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    LoanStatusStartDate:
      type: integer
      description: >-
        (Student Loan) The start date of the current status. A date in Unix
        epoch time (in seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    MainPayStatementFields:
      required:
        - payDate
        - grossPayAmount
      type: object
      properties:
        payDate:
          type: integer
          description: Pay date for the pay period
          format: int64
          example: 1607450357
        startDate:
          type: integer
          description: Start date for the pay period
          format: int64
          example: 1607450357
        endDate:
          type: integer
          description: End date for the pay period
          format: int64
          example: 1607450357
        payPeriodHours:
          type: number
          description: Sum of all hours worked each week for the pay period
          example: 39.75
        payFrequency:
          type: string
          description: |
            The current pay frequency, or how often a regular pay check is  
            distributed:

            * `Daily`

            * `Weekly`

            * `Bi-Weekly`

            * `Semi-Monthly`

            * `Monthly`

            * `Quarterly`

            * `Semi-Annual`

            * `Annual`

            * `Every 2.6 wks`

            * `Every 4 wks`

            * `Every 5.2 wks`

            * `Other`
          example: Weekly
        payType:
          type: string
          description: |
            Current pay type:

            * `Salary`

            * `Hourly`

            * `Daily`
          example: Hourly
        grossPayAmount:
          type: number
          description: Gross pay amount for the pay period
          example: 755.25
        grossPayAmountYTD:
          type: number
          description:
            Year to date (YTD) gross pay amount at the time of payment
          example: 4256
        netPayAmount:
          type: number
          description: Net pay amount for a pay period
          example: 608.77
        netPayAmountYTD:
          type: number
          description: Year to date (YTD) net pay amount at the time of payment
          example: 2345.99
    MarketSegment:
      type: string
      description: >-
        Use case for requesting the consumer's data. Current supported
        enumerations are "Mortgage" and "KYC". If your use case doesn't match
        one of these please reach out to your technical point of contact.
      example: Mortgage
    MaturityDate:
      type: integer
      description: >-
        (Checking/Savings/CD/MoneyMarket) Maturity date of account type. A date
        in Unix epoch time (in seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    MicroDepositCallbackUrl:
      type: string
      format: uri
      description: A callback URL where to receive micro deposit notifications
      example: 'https://www.mydomain.com/listener'
    MicroDepositCount:
      type: integer
      format: int32
      example: 2
      description: Count of micro entries
    MicroDepositDetails:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/MicroDepositStatus'
        statusDescription:
          $ref: '#/components/schemas/MicroDepositStatusDescription'
        creationDate:
          $ref: '#/components/schemas/NoZoneDateTime'
        routingNumber:
          $ref: '#/components/schemas/RoutingNumber'
        accountNumberLast4:
          $ref: '#/components/schemas/AccountNumberLast4'
    MicroDepositInitiation:
      required:
        - receiver
      type: object
      properties:
        institutionLoginId:
          $ref: '#/components/schemas/InstitutionLoginId'
        receiver:
          $ref: '#/components/schemas/Receiver'
        callbackUrl:
          $ref: '#/components/schemas/MicroDepositCallbackUrl'
    MicroDepositStatus:
      type: string
      description: |-
        The following values may be returned in the field of a status:

        * "Pending" : Micro entries not yet deposited to customer's account
        * "Completed": Micro entries deposited to customer's account
        * "Verified": Micro entries got successfully verified
        * "Rejected": Micro entries got rejected due to some reason
        * "Returned": Micro entries got returned back
        * "Failed": Micro entries got failed due to some reason
        * "Expired": Micro entries got expired as they remains unverified for
        certain defined days
      example: Pending
    MicroDepositStatusDescription:
      type: string
      example: Micro entries are in pending status
      description: Micro entries status description
    MicroDepositVerification:
      description: A list of amounts
      required:
        - amounts
      type: object
      properties:
        amounts:
          description: The list of amounts to be verified
          type: array
          items:
            $ref: '#/components/schemas/DecimalNumber'
          example:
            - 0.12
            - 0.15
    MicroDepositVerificationError:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/MicroDepositStatus'
        statusDescription:
          $ref: '#/components/schemas/MicroDepositStatusDescription'
    MicroEntryVerifyRequestParameter:
      type: object
      properties:
        partnerId:
          $ref: '#/components/schemas/PartnerId'
        customerId:
          $ref: '#/components/schemas/CustomerId'
        redirectUri:
          $ref: '#/components/schemas/RedirectUri'
        webhook:
          $ref: '#/components/schemas/Webhook'
        webhookContentType:
          $ref: '#/components/schemas/WebhookContentType'
        webhookData:
          $ref: '#/components/schemas/WebhookData'
        webhookHeaders:
          $ref: '#/components/schemas/WebhookHeaders'
        experience:
          $ref: '#/components/schemas/Experience'
        accountId:
          $ref: '#/components/schemas/AccountId'
    MiddleName:
      type: string
      description: The middle name of the account holder
      example: L
    MonthlyIncome:
      required:
        - estimatedMonthlyTotalPay
      type: object
      description: |-
        Current estimated monthly pay for the employment.

        This is a mandatory field only for VOIE-payroll report type.
      properties:
        estimatedMonthlyBasePay:
          type: number
          description: >-
            Mastercard Open Banking estimated monthly base pay amount for the
            employment
          example: 123.45
        estimatedMonthlyOvertimePay:
          type: number
          description: >-
            Mastercard Open Banking estimated monthly overtime pay amount for
            the employment
          example: 123.45
        estimatedMonthlyBonusPay:
          type: number
          description: >-
            Mastercard Open Banking estimated monthly bonus pay amount for the
            employment
          example: 123.45
        estimatedMonthlyOtherPay:
          type: number
          description: >-
            Mastercard Open Banking estimated monthly other pay amount for the
            employment
          example: 123.45
        estimatedMonthlyTotalPay:
          type: number
          description:
            Sum of all Mastercard Open Banking estimated monthly pay amounts
          example: 123.45
        estimatedMonthlyCommissionPay:
          type: number
          description: >-
            Mastercard Open Banking estimated monthly commission pay amount for
            the employment
          example: 123.45
    MoreResultsAvailable:
      type: boolean
      description: >-
        If the value of `moreAvailable` is "true", you can retrieve the next
        page of results by increasing the value of the start parameter in your
        next request:"...&start=6&limit=5"
      example: true
    Name:
      type: string
      description: The account name from the institution
      example: Super Checking
    NameClassificationType:
      type: string
      description: |-
        The classification of the account holder:
        * "person / personal / home"
        * "business"
        * "other"
      example: person
    NetMonthly:
      required:
        - month
        - net
      type: object
      properties:
        month:
          type: integer
          description: Timestamp for the first day of this month
          format: int64
          example: 1522562400
        net:
          type: number
          description:
            'Total income during the given month, across all income streams'
          example: 2004.77
    NewConsumer:
      description: A new consumer to be created
      required:
        - firstName
        - lastName
        - address
        - city
        - state
        - zip
        - phone
        - ssn
        - birthday
      type: object
      properties:
        firstName:
          $ref: '#/components/schemas/FirstName'
        lastName:
          $ref: '#/components/schemas/LastName'
        address:
          $ref: '#/components/schemas/Address'
        city:
          $ref: '#/components/schemas/City'
        state:
          $ref: '#/components/schemas/State'
        zip:
          $ref: '#/components/schemas/ZipCode'
        phone:
          $ref: '#/components/schemas/PhoneNumber'
        ssn:
          $ref: '#/components/schemas/SocialSecurityNumber'
        birthday:
          $ref: '#/components/schemas/Birthday'
        email:
          $ref: '#/components/schemas/EmailAddress'
        suffix:
          $ref: '#/components/schemas/Suffix'
    NewCustomer:
      description: A new customer to be enrolled
      required:
        - username
      type: object
      properties:
        username:
          $ref: '#/components/schemas/CustomerUsername'
        firstName:
          $ref: '#/components/schemas/FirstName'
        lastName:
          $ref: '#/components/schemas/LastName'
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        phone:
          $ref: '#/components/schemas/PhoneNumber'
        email:
          $ref: '#/components/schemas/EmailAddress'
    NextPaymentDate:
      type: integer
      description: >-
        (Mortgage/Loan) Due date for the next payment. A date in Unix epoch time
        (in seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    NoZoneDateTime:
      type: string
      description: A date-time without time zone
      example: '2022-04-12T11:51:23'
    NumericAccountId:
      type: integer
      format: int64
      description: An account ID represented as a number
      example: 5011648377
    NumericCustomerId:
      type: integer
      format: int64
      description: >-
        A customer ID represented as a number. See Add Customer API for how to
        create a customer ID.
      example: 1005061234
    NumericInstitutionId:
      description: 'The ID of a financial institution, represented as a number'
      type: integer
      format: int64
      example: 4222
    NumericInstitutionLoginId:
      type: integer
      format: int64
      description:
        'An institution login ID (from the account record), represented as a
        number'
      example: 1007302745
    NumericPreAppId:
      type: integer
      format: int64
      description: >-
        Identifier to track the application registration from the App
        Registration and Get App Registration Status APIs, represented as a
        number
      example: 2581
    ObbAccountDetails:
      properties:
        accountNumberDisplay:
          description:
            The account number from a financial institution in truncated format
          example: '8888'
          type: string
          minLength: 0
          maxLength: 50
        accountOwner:
          allOf:
            - $ref: '#/components/schemas/ObbAccountOwner'
          description: >-
            Details about who is on record as the owner of the account. May be
            the business name, the business owner name, or otherwise
        aggregationAttemptDate:
          description: >-
            A timestamp showing the last aggregation attempt. This will not be
            present until you have run your first aggregation for the account.
          example: '2022-03-30T14:47:19-07:00'
          type: string
          minLength: 25
          maxLength: 25
        aggregationStatusCode:
          description: >-
            The status of the most recent aggregation attempt. This will not be
            present until you have run your first aggregation for the account
          example: 0
          type: integer
        aggregationSuccessDate:
          description: >-
            A timestamp showing the last successful aggregation of the account.
            This will not be present until you have run your first aggregation
            for the account.
          example: '2022-03-30T14:47:19-07:00'
          type: string
          minLength: 25
          maxLength: 25
        currency:
          description: The currency of the account
          example: USD
          type: string
          minLength: 0
          maxLength: 5
        currentBalance:
          description: Current reported balance of the account
          example: 2239.22
          type: number
        id:
          $ref: '#/components/schemas/NumericAccountId'
        institution:
          allOf:
            - $ref: '#/components/schemas/ObbInstitution'
          description:
            Details of the financial institution this account is home to
        institutionLoginId:
          $ref: '#/components/schemas/NumericInstitutionLoginId'
        name:
          description: The account name from the institution
          example: Super Checking
          type: string
          minLength: 0
          maxLength: 50
        realAccountNumberLast4:
          description: The last 4 digits of the ACH account number
          example: 5678
          type: integer
        status:
          description: >-
            pending during account discovery, always active following successful
            account activation
          example: active
          type: string
          minLength: 0
          maxLength: 50
        type:
          description: 'Account type, e.g. checking/saving'
          example: checking
          type: string
          minLength: 0
          maxLength: 50
      required:
        - id
        - institution
        - accountOwner
      type: object
    ObbAccountOwner:
      properties:
        address:
          description: Address of the owner on record for the account
          example: '123 Main St, Portland, OR 12345'
          type: string
          minLength: 0
          maxLength: 255
        name:
          description: Name of the owner on record for the account
          example: Johnny Appleseed
          type: string
          minLength: 0
          maxLength: 255
      required:
        - name
        - address
      type: object
    ObbAnalyticsReport:
      description: Cash Flow or Balance Analytics report data as JSON
      allOf:
        - $ref: '#/components/schemas/CashFlowAnalyticsReport'
        - $ref: '#/components/schemas/BalanceAnalyticsReport'
    ObbAverageWeeklyBalance:
      properties:
        amount:
          description: Average daily ending balance during the week
          example: 679.07
          type: number
        fromDate:
          description: Begin date of the week
          example: '2020-01-01'
          type: string
          minLength: 10
          maxLength: 10
        toDate:
          description: End date of the week
          example: '2020-01-07'
          type: string
          minLength: 10
          maxLength: 10
        week:
          description: >-
            Week number, where the first week of each year begins on January 1st
            and ends on January 7th. May be in the range [1, 53]
          example: 1
          type: integer
      required:
        - week
        - fromDate
        - toDate
        - amount
      type: object
    ObbCurrentReportRequestDetails:
      properties:
        reportBeginDate:
          description: Date from when the requested data is available
          example: '2022-03-01'
          type: string
          minLength: 10
          maxLength: 10
        reportEndDate:
          description: Date to which the requested data is available
          example: '2022-03-30'
          type: string
          minLength: 10
          maxLength: 10
        reportRequestDate:
          description: The date and time the report was requested
          example: '2022-03-30T14:47:19-07:00'
          type: string
          minLength: 25
          maxLength: 25
        requestedDaysForReport:
          description: Number of days requested for the report
          example: 90
          type: integer
        requestedReportBeginDate:
          description: >-
            Date the report would have began on if enough data was available for
            which the partner requested
          example: '2022-01-01'
          type: string
          minLength: 10
          maxLength: 10
      required:
        - reportRequestDate
        - requestedDaysForReport
        - requestedReportBeginDate
      type: object
    ObbDailyBalance:
      properties:
        date:
          description: Date of balance information
          example: '2021-10-11'
          type: string
          minLength: 10
          maxLength: 10
        dayOfWeek:
          description: Day of the week for which balance information available
          example: Monday
          type: string
          minLength: 6
          maxLength: 9
        endingBalance:
          description: End of day balance
          example: 21527.3
          type: number
      required:
        - date
        - endingBalance
        - dayOfWeek
      type: object
    ObbDataAvailability:
      properties:
        historicAvailabilityBeginDate:
          description: Begin date for data availability
          example: '2022-03-01'
          type: string
          minLength: 10
          maxLength: 10
        historicAvailabilityEndDate:
          description: End date for data availability
          example: '2022-03-30'
          type: string
          minLength: 10
          maxLength: 10
        historicAvailableDays:
          description: Days for which transaction details are available
          example: 30
          type: integer
        historicDataAvailability:
          description: Description of historic data availability
          example: Data is available from 2022-03-01 to 2022-03-30
          type: string
          minLength: 0
          maxLength: 255
      required:
        - historicAvailableDays
        - historicDataAvailability
      type: object
    ObbDateRangeAndAmount:
      properties:
        amount:
          description: Metric value for the given period
          example: 890.99
          type: number
        period:
          description: Period represented by this metric
          example: last30to1
          type: string
          minLength: 8
          maxLength: 12
        periodBeginDate:
          description: Begin date of the period being reported
          example: '2022-03-01'
          type: string
          minLength: 10
          maxLength: 10
        periodEndDate:
          description: End date of the period being reported
          example: '2022-03-30'
          type: string
          minLength: 10
          maxLength: 10
      required:
        - period
        - periodBeginDate
        - periodEndDate
      type: object
    ObbDateRangeAndCount:
      properties:
        count:
          description: Count of occurrences for the given period
          example: 5
          type: integer
        period:
          description: Period represented by this metric
          example: last30to1
          type: string
          minLength: 8
          maxLength: 12
        periodBeginDate:
          description: Begin date of the period being reported
          example: '2022-03-01'
          type: string
          minLength: 10
          maxLength: 10
        periodEndDate:
          description: End date of the period being reported
          example: '2022-03-30'
          type: string
          minLength: 10
          maxLength: 10
      required:
        - period
        - periodBeginDate
        - periodEndDate
        - count
      type: object
    ObbErrorMessage:
      description: OBB Error response message
      properties:
        errorCode:
          type: integer
          description: Error code
          example: 0
        message:
          type: string
          description: Detailed reason about the source of the error
          minLength: 0
          maxLength: 255
          example: 'Some error message'
      required:
        - errorCode
        - message
      type: object
    ObbInstitution:
      properties:
        institutionIconUrl:
          description: URL of the institution logo icon for reporting
          example: >-
            https://prod-carpintero-branding.s3.us-west-2.amazonaws.com/101732/icon.svg
          type: string
          minLength: 0
          maxLength: 255
        institutionId:
          description: ID of the financial institution
          example: 12345
          type: integer
        institutionName:
          description: Name of the financial institution
          example: Wells Fargo
          type: string
          minLength: 0
          maxLength: 255
        institutionPrimaryColor:
          description:
            'Primary branding color of the institution, in hex color format'
          example: '#1B3E4A'
          type: string
          minLength: 7
          maxLength: 7
      required:
        - institutionId
      type: object
    ObbNumWeeksAverageBalanceIncreasing:
      properties:
        historicAverageWeeklyBalances:
          description: Average weekly balances over the known history
          items:
            $ref: '#/components/schemas/ObbAverageWeeklyBalance'
          type: array
        historicNumberOfWeeksAverageBalanceIncreasing:
          description: >-
            Number of weeks during the known history where the average balance
            of the account increased week over week
          example: 3
          type: integer
        historicNumberOfWeeksWithDataAvailable:
          description:
            Number of weeks during the history in which data was available
          example: 4
          type: integer
      required:
        - historicNumberOfWeeksAverageBalanceIncreasing
        - historicNumberOfWeeksWithDataAvailable
        - historicAverageWeeklyBalances
      type: object
    ObbReportHeader:
      description: >-
        Includes details about the business the report is generated for and
        metadata about the report
      properties:
        businessAddress:
          description: Business address line 1
          example: 123 Main St
          type: string
          minLength: 0
          maxLength: 255
        businessCity:
          description: Business address city
          example: Portland
          type: string
          minLength: 0
          maxLength: 255
        businessName:
          description: Name of the business
          example: B&G Construction
          type: string
          minLength: 0
          maxLength: 255
        businessState:
          description: Business address state
          example: OR
          type: string
          minLength: 0
          maxLength: 255
        businessZip:
          description: Business address zip
          example: '12345'
          type: string
          minLength: 0
          maxLength: 255
        referenceNumber:
          description: Partner-provided reference number
          example: 32asdfaasd0823
          type: string
          minLength: 0
          maxLength: 255
        reportDate:
          description: Date the report was requested
          example: '2022-03-16T21:28:38-07:00'
          type: string
          minLength: 25
          maxLength: 25
        reportId:
          description: Generated unique report ID
          example: 8ff8b4b2-706f-45c3-8d66-857bdb516214
          type: string
          minLength: 0
          maxLength: 255
      required:
        - reportId
        - reportDate
      type: object
    ObbWeekOfYear:
      properties:
        fromDate:
          description: Begin date of the week
          example: '2020-01-01'
          type: string
          minLength: 10
          maxLength: 10
        toDate:
          description: End date of the week
          example: '2020-01-07'
          type: string
          minLength: 10
          maxLength: 10
        week:
          description: >-
            Week number, where the first week of each year begins on January 1st
            and ends on January 7th. May be in the range [1, 53]
          example: 1
          type: integer
      required:
        - week
        - fromDate
        - toDate
      type: object
    OpenDate:
      type: integer
      description: >-
        (Checking/Savings/CD/MoneyMarket) Date when account was opened. A date
        in Unix epoch time (in seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    OriginalMaturityDate:
      type: integer
      description: >-
        (Mortgage/Loan) Original date of loan maturity. A date in Unix epoch
        time (in seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    OriginalPayrollReportId:
      type: string
      description: >-
        The report ID of the original payroll report for refresh use cases. If
        used, only the employment records from the original report will be
        included in the refreshed report response.
      example: u4hstnnak45g-voiepayroll
    OutOfSchoolDate:
      type: integer
      description: >-
        (Student Loan) The date the borrower graduated or dropped below
        half-time enrollment in school. A date in Unix epoch time (in seconds).
        See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    PartnerCredentials:
      required:
        - partnerId
        - partnerSecret
      type: object
      properties:
        partnerId:
          $ref: '#/components/schemas/PartnerId'
        partnerSecret:
          type: string
          description: >-
            Your Partner Secret displayed in the [Developer
            Dashboard](https://developer.finicity.com/admin)
          example: aqJ5Ic4SEVx2IgDQ6oR4
    PartnerCredentialsWithNewSecret:
      required:
        - partnerId
        - partnerSecret
        - newPartnerSecret
      type: object
      allOf:
        - $ref: '#/components/schemas/PartnerCredentials'
        - type: object
          properties:
            newPartnerSecret:
              type: string
              description: A new value for the Partner Secret
              example: OrU7tjiA3tIspCgb85xV
    PartnerId:
      type: string
      description: >-
        Your Partner ID displayed in the [Developer
        Dashboard](https://developer.finicity.com/admin)
      example: '1234583871234'
    PartnerName:
      type: string
      description: Name of a Finicity partner
      example: Finicity Test API
    PayFrequency:
      type: string
      description: |
        The current pay frequency or or how often a regular pay check is:

        * `Daily` 

        * `Weekly` 

        * `Bi-Weekly` 

        * `Semi-Monthly` 

        * `Monthly` 

        * `Quarterly` 

        * `Semi-Annual` 

        * `Annual` 

        * `Every 2.6 wks` 

        * `Every 4 wks` 

        * `Every 5.2 wks` 

        * `Other`
      example: Weekly
    PayStat:
      type: object
      properties:
        name:
          type: string
          description: >-
            The normalized category of the earnings with a number appended. The
            number is the will be the iterating number of the type's occurrence
            starting at one.
          example: regular 1
        type:
          $ref: '#/components/schemas/PayStatEarningsCategorizationType'
        description:
          type: string
          description: The earnings line's pay type description
          example: regular income
        amountCurrent:
          type: number
          description: >-
            The amount for the earning line paid out to the employee for the
            specified pay period.
          example: 6000
        amountYTD:
          type: number
          description: >-
            The amount for the earning line being paid out to the employee for
            the current pay year.
          example: 18000
    PayStatEarningsCategorizationType:
      type: string
      description: |-
        The categorization based on the earning line's description. Possible values:
        * "bereavement"

        * "bonus"

        * "commission"

        * "holiday"

        * "jury duty"

        * "overtime"

        * "pension"

        * "pto"

        * "regular"

        * "sick"

        * "tips"

        * "unknown"

        * "vacation"

        * "reimbursement"

        * "stock"

        * "benefit"
    PayStatement:
      description: A pay statement document and pay statement label
      required:
        - label
        - statement
      type: object
      properties:
        label:
          type: string
          description: >-
            The label to be associated with the pay statement. This label will
            allow the paystub to go through data extraction.

            * `lastPayPeriod`: default label that should be used for the VOIE -
            Paystub products

            * `lastPayPeriodMinusOne`: the second most recent pay statement

            * `lastPayPeriodMinusTwo`: the third most recent pay statement

            * `previousYearLastPayPeriod` Last pay statement of the previous
            calendar year

            * `previousYear2LastPayPeriod`: last pay statement of the calendar
            year 2 years prior

            * `earliestPayPeriod`: the earliest pay statement
          example: lastPayPeriod
        statement:
          type: string
          description: >-
            A Base64 encoded pay statement file. Finicity supports PDF, JPG, or
            PNG files.
          example: VGhpcyBtdXN0IGJlIGFuIGltYWdl
    PayStatementData:
      description: Data to be included within the pay statement report
      required:
        - assetIds
      type: object
      properties:
        assetIds:
          description: A list of pay statement asset IDs
          type: array
          items:
            $ref: '#/components/schemas/AssetId'
        extractEarnings:
          $ref: '#/components/schemas/ExtractEarnings'
        extractDeductions:
          $ref: '#/components/schemas/ExtractDeductions'
        extractDirectDeposit:
          $ref: '#/components/schemas/ExtractDirectDeposit'
    PayStatementReport:
      description: A Pay Statement report
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseReportAckWithPortfolioId'
        - type: object
          properties:
            startDate:
              $ref: '#/components/schemas/ReportStartDate'
            endDate:
              $ref: '#/components/schemas/ReportEndDate'
            reportStyle:
              description: A type of report
              type: string
              example: paystatement
            numberOfBillableAssets:
              type: integer
              description:
                Total number of billable pay statements included in the report
              format: int32
              example: 1
            assetIds:
              type: array
              items:
                $ref: '#/components/schemas/AssetId'
            payStatements:
              type: array
              items:
                $ref: '#/components/schemas/VOIEPayStatement'
              description: Extracted pay statement details
    PayStatementReportAck:
      required:
        - id
        - portfolioId
        - customerType
        - customerId
        - requestId
        - requesterName
        - createdDate
        - title
        - consumerId
        - consumerSsn
        - type
        - status
        - constraints
      allOf:
        - $ref: '#/components/schemas/BaseReportAckWithPortfolioId'
        - type: object
          properties:
            constraints:
              $ref: '#/components/schemas/PayStatementReportConstraints'
    PayStatementReportConstraints:
      required:
        - paystatementReport
      type: object
      properties:
        paystatementReport:
          $ref: '#/components/schemas/PayStatementData'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
    PayStatementsFromDate:
      type: integer
      description: >-
        Limits the pay statement history in the VOIE - Payroll report income
        record. Pay statements are only included if the payDate of the statement
        is equal to or greater than the start date requested. Date should be in
        Unix epoch time (in seconds). See: Handling Epoch Dates and Times.
      format: int64
      example: 1607450357
    PaymentDueDate:
      type: integer
      description: >-
        (Credit Card/Line Of Credit) Due date for the next payment. A date in
        Unix epoch time (in seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    PayoffAmountDate:
      type: integer
      description: >-
        (Mortgage/Loan) Date of final payment. A date in Unix epoch time (in
        seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    PayrollData:
      required:
        - ssn
        - dob
      type: object
      properties:
        ssn:
          $ref: '#/components/schemas/SocialSecurityNumberNoHyphens'
        dob:
          $ref: '#/components/schemas/ConsumerDateOfBirth'
        reportId:
          $ref: '#/components/schemas/OriginalPayrollReportId'
    PayrollDataOut:
      required:
        - payrollDataRetrievalId
        - employerNames
      type: object
      properties:
        payrollDataRetrievalId:
          type: string
          description: >-
            An ID to identify the data retrieved from the payroll providers for
            the report.
          example: hahvhe2k0000
        employerNames:
          type: array
          items:
            type: string
            example: Enterprise One
          description: >-
            An array of employer names that the consumer submitted after
            completing the Connect application.
        reportId:
          $ref: '#/components/schemas/ReportId'
    PayrollEmployeeAddress:
      type: object
      properties:
        address1:
          type: string
          description:
            Employee address as stated by the employer in the payroll system
          example: Address 1
        city:
          type: string
          description:
            Employee city as stated by the employer in the payroll system
          example: City
        state:
          type: string
          description:
            Employee state as stated by the employer in the payroll system
          example: TX
        zip:
          type: string
          description:
            Employee zip code as stated by the employer in the payroll system
          example: '99999'
    PayrollEmployeeRecord:
      required:
        - name
        - givenName
        - familyName
      type: object
      properties:
        name:
          type: string
          description:
            'Full name of the employee: first, middle (if stated), and last name'
          example: John Doe Smith
        givenName:
          type: string
          description: First name of employee
          example: John
        middleName:
          type: string
          description: 'Middle name of employee, if stated'
          example: Doe
        familyName:
          type: string
          description: Last name of employee
          example: Smith
        address:
          type: array
          items:
            $ref: '#/components/schemas/PayrollEmployeeAddress'
          description: Array of addresses
    PayrollEmployerAddress:
      type: object
      properties:
        address1:
          type: string
          description:
            Employer address as stated by the employer in the payroll system
          example: Address 1
        city:
          type: string
          description:
            Employer city as stated by the employer in the payroll system
          example: City
        state:
          type: string
          description:
            Employer state as stated by the employer in the payroll system
          example: TX
        zip:
          type: string
          description:
            Employer zip code as stated by the employer in the payroll system
          example: '99999'
    PayrollEmploymentHistoryVOE:
      required:
        - asOfDate
        - employerName
        - payrollSource
        - employee
        - employment
        - income
      type: object
      properties:
        asOfDate:
          $ref: '#/components/schemas/AsOfDate'
        employerName:
          $ref: '#/components/schemas/EmployerName'
        payrollSource:
          type: string
          description:
            The name of the payroll source where the data was retrieved
          example: finPayroll
        employee:
          $ref: '#/components/schemas/PayrollEmployeeRecord'
        employment:
          $ref: '#/components/schemas/PayrollEmploymentRecord'
        income:
          $ref: '#/components/schemas/PayrollVOEIncomeRecord'
    PayrollEmploymentHistoryVOIE:
      required:
        - asOfDate
        - employerName
        - payrollSource
        - employee
        - employment
        - income
      type: object
      properties:
        asOfDate:
          $ref: '#/components/schemas/AsOfDate'
        employerName:
          $ref: '#/components/schemas/EmployerName'
        payrollSource:
          type: string
          description:
            The name of the payroll source where the data was retrieved
          example: finPayroll
        employee:
          $ref: '#/components/schemas/PayrollEmployeeRecord'
        employment:
          $ref: '#/components/schemas/PayrollEmploymentRecord'
        income:
          $ref: '#/components/schemas/PayrollVOIEIncomeRecord'
    PayrollEmploymentRecord:
      required:
        - employerName
        - employmentStatusCode
        - employmentStatusName
        - workLevelStatus
      type: object
      properties:
        employerName:
          $ref: '#/components/schemas/EmployerName'
        legalEntityId:
          type: string
          description: Employer identification number (EIN)
          example: '752760000'
        originalHireDate:
          type: integer
          description: The original hired date of an employee at the company
          format: int64
          example: 1527832800
        latestHireDate:
          type: integer
          description: >-
            If an employee leaves the company and returns later, then the
            employer states the latest hire date at the company
          format: int64
          example: 1527832800
        latestPayDate:
          type: integer
          description: The most recent pay date from an employer
          format: int64
          example: 1596175200
        daysSinceLastPay:
          type: integer
          description: The number of days since an employee was last paid
          format: int32
          example: 10
        numberPayCadenceWithoutPay:
          type: integer
          description: >-
            The number of pay cadences an employee has not been paid; determined
            by the pay frequency
          format: int32
          example: 1
        employmentEndDate:
          type: integer
          description:
            The date an employee ended their employment at the company
          format: int64
          example: 1527832800
        employmentDuration:
          type: string
          description: >-
            The length of time an employee has been employed with that employer
            in ISO 8601 format (eg P1Y6M0D)
          example: P1Y6M0D
        employerAddress:
          type: array
          items:
            $ref: '#/components/schemas/PayrollEmployerAddress'
          description: Array of addresses
        employmentStatusCode:
          type: string
          description: >-
            'Status codes: `A` - Active, `NLE` - No Longer Employed, `L` -
            Leave, `O` - Other'
          example: A
        employmentStatusName:
          type: string
          description:
            "'Status name: `Active`, `No Longer Employed`, `Leave` or `Other`'"
          example: Active
        workLevelCode:
          type: string
          description: >-
            The abbreviate code for the employment level names (workLevelName)
            that we receive from the employer
          example: FT
        workLevelName:
          type: string
          description: >-
            The employment level name is whatever we receive from the employer,
            such as full time, part time, temp, contractor, and more
          example: Full Time-Regular
        workLevelStatus:
          type: string
          description: >
            The categorized work level status. Enumerations are:


            * `Temporary`


            * `Seasonal`


            * `Retired`


            * `Student`


            * `Full Time`


            * `Part Time`


            * `Unspecified`


            This is a new field, currently enabled only for testing reports. It
            will be added for all reports in August 2021.
          example: Full Time
        positionTitle:
          type: string
          description: Employee job title
          example: Shift Supervisor
        positionDuration:
          type: string
          description: >-
            The length of time an employee has been employed at their current or
            latest position for this employment in ISO 8601 format (eg P1Y6M0D)
          example: P1Y6M0D
    PayrollReportAck:
      required:
        - id
        - portfolioId
        - customerType
        - customerId
        - requestId
        - requesterName
        - createdDate
        - title
        - consumerId
        - consumerSsn
        - type
        - status
        - constraints
      allOf:
        - $ref: '#/components/schemas/BaseReportAckWithPortfolioId'
        - type: object
          properties:
            constraints:
              $ref: '#/components/schemas/PayrollReportConstraintsOut'
    PayrollReportConstraints:
      required:
        - payrollData
      type: object
      properties:
        payrollData:
          $ref: '#/components/schemas/PayrollData'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        payStatementsFromDate:
          $ref: '#/components/schemas/PayStatementsFromDate'
        marketSegment:
          $ref: '#/components/schemas/MarketSegment'
        excludeEmpInfo:
          $ref: '#/components/schemas/ExcludeEmpInfo'
        purpose:
          $ref: '#/components/schemas/PurposeCode'
    PayrollReportConstraintsOut:
      required:
        - payrollData
      type: object
      properties:
        payrollData:
          $ref: '#/components/schemas/PayrollDataOut'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        payStatementsFromDate:
          $ref: '#/components/schemas/UnixDate'
    PayrollVOEIncomeRecord:
      type: object
      properties:
        payFrequency:
          $ref: '#/components/schemas/PayFrequency'
    PayrollVOIEIncomeRecord:
      type: object
      properties:
        payFrequency:
          $ref: '#/components/schemas/PayFrequency'
        payType:
          type: string
          description: |
            The current pay type:

            * `Salary`

            * `Hourly`

            * `Daily`
          example: Daily
        basePayRate:
          type: number
          description: >-
            The current base or regular pay rate. Please use in conjunction with
            the `basePayRateUnit` field.
          example: 1234.56
        basePayRateUnit:
          type: string
          description: |
            Unit for the base pay rate:

            * `Hourly`

            * `Daily`

            * `Weekly`

            * `Bi-Weekly`

            * `Semi-Monthly`

            * `Monthly`

            * `Quarterly`

            * `Semi-Annual`

            * `Annual`

            * `Every 2.6 wks`

            * `Every 5.2 wks`

            * `Other`
          example: Annual
        oldestPayStatementAvailable:
          type: string
          description: >-
            The date of the oldest direct pay statement available from the
            payroll source, as measured by the oldest `payDate` from all the pay
            statements delivered.
          example: 1527832900
        annualIncome:
          type: array
          items:
            $ref: '#/components/schemas/AnnualIncome'
          description: |-
            The annual pay for the current year, through prior year 2 (as available)

            This is a mandatory field only for VOIE-payroll report type.
        monthlyIncome:
          $ref: '#/components/schemas/MonthlyIncome'
        directPayStatements:
          type: array
          items:
            $ref: '#/components/schemas/DirectPayStatements'
          description: An array of payment histories for each available paycheck
    PaystubMonthlyIncomeRecord:
      type: object
      properties:
        estimatedMonthlyBasePay:
          type: number
          description: >-
            The estimated monthly base pay amount for the employment from the
            paystub, calculated by Finicity
          example: 2000
        estimatedMonthlyOvertimePay:
          type: number
          description: >-
            The estimated monthly overtime pay amount for the employment from
            the paystub, calculated by Finicity
          example: 50
        estimatedMonthlyBonusPay:
          type: number
          description: >-
            The estimated monthly bonus pay amount for the employment from the
            paystub, calculated by Finicity
          example: 20
        estimatedMonthlyCommissionPay:
          type: number
          description: >-
            The estimated commission bonus pay amount for the employment from
            the paystub, calculated by Finicity
          example: 50
    PeriodEndDate:
      type: integer
      description: >-
        End date of period. A date in Unix epoch time (in seconds). See:
        [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    PeriodStartDate:
      type: integer
      description: >-
        (Checking/Savings/CD/MoneyMarket) Start date of period. A date in Unix
        epoch time (in seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    PhoneCarrier:
      type: string
      description: >-
        The company that provides voice and/or data services for the phone
        number. Carriers are returned at the MVNO level.
      example: Vodafone UK ltd.
    PhoneCountry:
      type: string
      description: >-
        Country calling code of the phone number as defined by ITU-T E.123 and
        E.164 international standards (max length 3)".
      example: '61'
    PhoneCountryCode:
      type: string
      description:
        The ISO-3166 alpha-2 country code associated with the phone number.
      example: UK
    PhoneEmailFirstSeenDays:
      type: number
      description: >-
        Count of days since the combination of phone and email was first
        observed in Ekata's Identity Network. If that combination has not been
        observed before, `phoneEmailFirstSeenDays` will be 0.
      example: 54
    PhoneLastSeenDays:
      type: number
      description: >-
        Count of days since the phone was last observed in Ekata's Identity
        Network. If the phone has not been observed before, `phoneLastSeenDays`
        will be 0.
      example: 42
    PhoneLineType:
      type: string
      description: >-
        The line type of the phone number.

        * landline - traditional wired phone line.

        * fixed-voip - VoIP-based fixed line phones.

        * mobile - wireless phone line.

        * voicemail - voicemail-only service.

        * toll-free - callee pays for call.

        * premium - caller pays a premium for the call-e.g., 976 area code.

        * non-fixed-voip - Skype, for example * other - anything that does not
        match the previous categories.
      example: mobile
    PhoneNumber:
      type: string
      description: A phone number (max length 15).
      example: 1-801-984-4200
    PhoneToAddress:
      type: string
      description: >-
        The match status between the input phone and the queried entity.

        * match - Phone location matches input address line 1, address line 2,
        city, state, and postal code. 


        * postal-match - Phone location postal code matches input address postal
        code. 


        * zip4-match - Phone location postal code zip+4 matches input address
        postal code zip+4. 


        * city-state-match - Phone location city and state matches input address
        city and state. 

        * metro-match - Phone location is in the same metro area as input
        address. 


        * country-match - Phone location country matches input address country. 


        * no-match - Phone location does not match input address.
      example: match
    PhoneToName:
      type: string
      description: |-
        The match status between the input name and the queried entity.

        * not-found

        * match

        * no-match
      example: match
    PhoneValid:
      type: boolean
      description: True if the phone number is valid.
      example: true
    PortfolioConsumer:
      required:
        - id
        - firstName
        - lastName
        - customerId
        - ssn
        - birthday
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ConsumerId'
        firstName:
          $ref: '#/components/schemas/FirstName'
        lastName:
          $ref: '#/components/schemas/LastName'
        customerId:
          $ref: '#/components/schemas/NumericCustomerId'
        ssn:
          $ref: '#/components/schemas/SocialSecurityNumber'
        birthday:
          $ref: '#/components/schemas/Birthday'
        suffix:
          $ref: '#/components/schemas/Suffix'
    PortfolioId:
      type: string
      description: >-
        A unique identifier that will be consistent across all reports created
        for the same customer
      example: y4zsgccj4xpw-6-port
    PortfolioReport:
      required:
        - id
        - portfolioId
        - type
        - status
        - createdDate
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ReportId'
        portfolioId:
          $ref: '#/components/schemas/PortfolioId'
        type:
          $ref: '#/components/schemas/ReportType'
        status:
          $ref: '#/components/schemas/ReportStatus'
        createdDate:
          $ref: '#/components/schemas/UnixDate'
    PortfolioSummary:
      required:
        - portfolioId
        - reports
      type: object
      properties:
        portfolioId:
          $ref: '#/components/schemas/PortfolioId'
        reports:
          type: array
          items:
            $ref: '#/components/schemas/PortfolioReport'
          description: A list of reports in the portfolio
    PortfolioWithConsumerSummary:
      required:
        - portfolioId
        - consumer
        - reports
      allOf:
        - $ref: '#/components/schemas/PortfolioSummary'
        - type: object
          properties:
            consumer:
              $ref: '#/components/schemas/PortfolioConsumer'
    PreAppId:
      type: string
      description: >-
        Identifier to track the application registration from the App
        Registration and Get App Registration Status APIs
      example: '2581'
    PrequalificationReport:
      description: A Prequalification report
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseReportAckWithPortfolioId'
        - type: object
          properties:
            startDate:
              $ref: '#/components/schemas/ReportStartDate'
            endDate:
              $ref: '#/components/schemas/ReportEndDate'
            days:
              type: integer
              description: The number of days covered by the report
              example: 230
            seasoned:
              type: boolean
              description: '"true" if the report covers more than 180 days'
              example: true
            consolidatedAvailableBalance:
              type: number
              description: >-
                The sum of available balance for all of the accounts included in
                the report
              example: 1929.57
            institutions:
              type: array
              items:
                $ref: '#/components/schemas/ReportInstitution'
              description: >-
                A list of institution records, including information about the
                individual accounts in this report
            assets:
              $ref: '#/components/schemas/PrequalificationReportAssetSummary'
    PrequalificationReportAccount:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the account
          format: int64
          example: 1000023996
        number:
          type: string
          description: >-
            The account number from the institution (all digits except the last
            four are obfuscated)
          example: '1111'
        ownerName:
          type: string
          description: >-
            The name of the account owner. If no owner information is available,
            this field won't appear in the report.
          example: JOHN DOE
        ownerAddress:
          type: string
          description: >-
            The mailing address of the account owner. If no owner information is
            available, this field won't appear in the report.
          example: '123 GAINSVILLE STREET BUFORD, GA 84937'
        name:
          type: string
          description: The account name from the institution
          example: Checking
        type:
          type: string
          description: One of the values from account types
          example: checking
        aggregationStatusCode:
          type: integer
          description: The status of the most recent aggregation attempt
          format: int32
          example: 0
        balance:
          type: number
          description: The cleared balance of the account as-of `balanceDate`
          example: 501.24
        balanceDate:
          type: integer
          description: A timestamp of the balance
          format: int64
          example: 1588350276
        availableBalance:
          type: number
          description: Available balance
          example: 1000
        averageMonthlyBalance:
          type: number
          description: The average monthly balance of the account
          example: 501.02
        totNumberInsufficientFundsFeeDebitTxAccount:
          type: integer
          description: >-
            The count for the total number of insufficient funds transactions,
            based on the `fromDate` of the report
          format: int32
          example: 0
        totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount:
          type: integer
          description: >-
            The total number of  insufficient funds fees for the account over
            six months
          format: int32
          example: 0
        totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount:
          type: integer
          description: >-
            The total number of days since the most recent insufficient funds
            fee for the account
          format: int64
          example: 120
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/ReportTransaction'
          description: a list of transaction records
        asset:
          $ref: '#/components/schemas/PrequalificationReportAssetSummary'
        details:
          $ref: '#/components/schemas/AccountDetails'
    PrequalificationReportAck:
      required:
        - id
        - portfolioId
        - customerType
        - customerId
        - requestId
        - requesterName
        - createdDate
        - title
        - consumerId
        - consumerSsn
        - type
        - status
        - constraints
      allOf:
        - $ref: '#/components/schemas/BaseReportAckWithPortfolioId'
        - type: object
          properties:
            constraints:
              $ref: '#/components/schemas/PrequalificationReportConstraintsOut'
    PrequalificationReportAssetSummary:
      required:
        - currentBalance
        - twoMonthAverage
        - beginningBalance
      type: object
      properties:
        type:
          type: string
          description:
            'The asset type: "checking", "savings", "moneyMarket", "cd",
            "investment"'
          example: checking
        availableBalance:
          type: number
          description: The available balance for the account
          example: 1000
        currentBalance:
          type: number
          description: The current balance of the account
          example: 1000
        twoMonthAverage:
          type: number
          description: The two month average daily balance of the account
          example: -1865.96
        sixMonthAverage:
          type: number
          description: The six month average daily balance of the account
          example: -7616.01
        beginningBalance:
          type: number
          description:
            The beginning balance of the account per the time period of the
            report
          example: -17795.6
    PrequalificationReportConstraints:
      type: object
      properties:
        accountIds:
          $ref: '#/components/schemas/ReportAccountIdsString'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        showNsf:
          $ref: '#/components/schemas/ShowNsf'
        fromDate:
          $ref: '#/components/schemas/UnixDate'
    PrequalificationReportConstraintsOut:
      type: object
      properties:
        accountIds:
          $ref: '#/components/schemas/ReportAccountIds'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        showNsf:
          $ref: '#/components/schemas/ShowNsf'
        fromDate:
          $ref: '#/components/schemas/UnixDate'
    PurposeCode:
      type: string
      description: >-
        FCRA required 2-digit Permissible Purpose Code, specifying the reason
        for retrieving this report.
      example: '31'
    Receiver:
      required:
        - routingNumber
        - accountNumber
        - accountType
        - name
      type: object
      properties:
        routingNumber:
          $ref: '#/components/schemas/RoutingNumber'
        accountNumber:
          type: string
          example: '123456'
          description: Micro entries receiving account number of bank
        accountType:
          type: string
          example: checking
          description: |-
            The list of supported account types.
            * "checking": Standard checking
            * "savings": Standard savings
        name:
          type: string
          example: Bob Smith
          description: Name of the customer
        memo:
          type: string
          example: micro deposit transfer
          description: Transaction memo to be displayed for transactions
    RedirectUri:
      type: string
      description: >-
        The URL that customers will be redirected to after completing Finicity
        Connect. Required unless Connect is embedded inside our application
        (iframe).
      example: 'https://www.finicity.com/connect/'
    RegisteredApplication:
      required:
        - preAppId
        - status
      type: object
      properties:
        preAppId:
          $ref: '#/components/schemas/NumericPreAppId'
        status:
          $ref: '#/components/schemas/AppRegistrationStatus'
    RepaymentPlanEndDate:
      type: integer
      description: >-
        (Student Loan) The end date of the current repayment plan. A date in
        Unix epoch time (in seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    RepaymentPlanStartDate:
      type: integer
      description: >-
        (Student Loan) The start date of the current repayment plan. A date in
        Unix epoch time (in seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    Report:
      description: A report
      type: object
      required:
        - id
        - customerType
        - customerId
        - requestId
        - requesterName
        - createdDate
        - title
        - type
        - status
      allOf:
        - $ref: '#/components/schemas/CashFlowReport'
        - $ref: '#/components/schemas/PrequalificationReport'
        - $ref: '#/components/schemas/PayStatementReport'
        - $ref: '#/components/schemas/StatementReport'
        - $ref: '#/components/schemas/TransactionsReport'
        - $ref: '#/components/schemas/VOAReport'
        - $ref: '#/components/schemas/VOAWithIncomeReport'
        - $ref: '#/components/schemas/VOEPayrollReport'
        - $ref: '#/components/schemas/VOETransactionsReport'
        - $ref: '#/components/schemas/VOIReport'
        - $ref: '#/components/schemas/VOIEPayrollReport'
        - $ref: '#/components/schemas/VOIEPaystubReport'
        - $ref: '#/components/schemas/VOIEPaystubWithTXVerifyReport'
    ReportAccountIds:
      description: >-
        An array of account IDs to be included in the report (all accounts will
        be included if not set)
      type: array
      items:
        $ref: '#/components/schemas/AccountId'
      example:
        - '5011648377'
        - '5011648378'
        - '5011648379'
    ReportAccountIdsString:
      type: string
      description: >-
        A whitespace-separated list of account IDs to be included in the report
        (all accounts will be included if not set)
      example: 5011648377 5011648378 5011648379
    ReportCustomField:
      type: object
      properties:
        label:
          type: string
          description: The name of the custom field
          example: loanID
        value:
          type: string
          description: The value of the custom field
          example: '123456'
        shown:
          type: boolean
          description: If the custom field will show on the PDF or not
          example: true
    ReportCustomFields:
      type: array
      items:
        $ref: '#/components/schemas/ReportCustomField'
      description: >-
        The `reportCustomFields` parameter is used when experiences are
        associated with a credit decisioning report.


        Designate up to 5 custom fields that you'd like associated with the
        report when it's generated. Every custom field consists of three
        variables: `label`, `value`, and `shown`. The `shown` variable is "true"
        or "false".

        * "true": (default) display the custom field in the PDF report

        * "false": don't display the custom field in the PDF report


        For an experience that generates multiple reports, the
        `reportCustomFields` parameter gets passed to all reports.


        All custom fields display in the Reseller Billing API.
    ReportEndDate:
      type: integer
      description: >-
        The `postedDate` of the latest transaction analyzed for the report. A
        date in Unix epoch time (in seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    ReportId:
      type: string
      description: A report ID
      example: u4hstnnak45g
    ReportIncomeEstimate:
      required:
        - netAnnual
        - projectedNetAnnual
        - estimatedGrossAnnual
        - projectedGrossAnnual
      type: object
      properties:
        netAnnual:
          description:
            Sum of all values in `netMonthlyIncome` over the previous 12 months
          type: number
          example: 1000.12
        projectedNetAnnual:
          description: >-
            Projected net income over the next 12 months, across all income
            streams, based on `netAnnualIncome`
          type: number
          example: 1500.23
        estimatedGrossAnnual:
          description: >-
            Before-tax gross annual income (estimated from `netAnnual`) across
            all income stream in the past 12 months
          type: number
          example: 2000.12
        projectedGrossAnnual:
          description: >-
            Projected gross income over the next 12 months, across all active
            income streams, based on `projectedNetAnnual`
          type: number
          example: 2500.23
    ReportIncomeStreamSummary:
      required:
        - confidenceType
        - netMonthly
        - incomeEstimate
      type: object
      properties:
        confidenceType:
          $ref: '#/components/schemas/EstimateInclusion'
        netMonthly:
          type: array
          items:
            $ref: '#/components/schemas/NetMonthly'
          description: >-
            A list of net monthly records. One instance for each complete
            calendar month in the report.
        incomeEstimate:
          $ref: '#/components/schemas/ReportIncomeEstimate'
    ReportInstitution:
      required:
        - id
        - name
        - urlHomeApp
      type: object
      properties:
        id:
          $ref: '#/components/schemas/NumericInstitutionId'
        name:
          type: string
          description: Finicity institution name
          example: FinBank Profiles
        urlHomeApp:
          type: string
          description: The URL of the Financial Institution
          example: 'http://www.finbank.com'
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/ReportInstitutionAccount'
          description: A list of account records
    ReportInstitutionAccount:
      description: An account record
      type: object
      allOf:
        - $ref: '#/components/schemas/CashFlowReportAccount'
        - $ref: '#/components/schemas/PrequalificationReportAccount'
        - $ref: '#/components/schemas/TransactionsReportAccount'
        - $ref: '#/components/schemas/VOAReportAccount'
        - $ref: '#/components/schemas/VOAWithIncomeReportAccount'
        - $ref: '#/components/schemas/VOETransactionsReportAccount'
        - $ref: '#/components/schemas/VOIReportAccount'
        - $ref: '#/components/schemas/VOIETXVerifyReportAccount'
    ReportRequestId:
      type: string
      description:
        Finicity indicator to track all activity associated with this report
      example: cjqm4wtdcn
    ReportStartDate:
      type: integer
      description: >-
        The `postedDate` of the earliest transaction analyzed for the report. A
        date in Unix epoch time (in seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    ReportStatus:
      type: string
      description: |
        A report generation status. Possible values:

        * `inProgress`

        * `success`

        * `failure`
      example: inProgress
    ReportSummaries:
      required:
        - reports
      type: object
      properties:
        reports:
          type: array
          items:
            $ref: '#/components/schemas/ReportSummary'
          description: Data pertaining to each report
    ReportSummary:
      required:
        - id
        - requestId
        - requesterName
        - createdDate
        - type
        - status
      properties:
        id:
          $ref: '#/components/schemas/ReportId'
        requestId:
          $ref: '#/components/schemas/ReportRequestId'
        requesterName:
          $ref: '#/components/schemas/PartnerName'
        createdDate:
          $ref: '#/components/schemas/UnixDate'
        consumerId:
          $ref: '#/components/schemas/ConsumerId'
        consumerSsn:
          $ref: '#/components/schemas/SocialSecurityNumberLastDigits'
        type:
          $ref: '#/components/schemas/ReportType'
        status:
          $ref: '#/components/schemas/ReportStatus'
    ReportTitle:
      type: string
      description: Title of the report
      example: Finicity Asset Ready Report (CRA)
    ReportTransaction:
      required:
        - id
        - postedDate
        - description
      type: object
      properties:
        id:
          $ref: '#/components/schemas/TransactionId'
        amount:
          type: number
          description: >-
            The total amount of the transaction. Transactions for deposits are
            positive values, withdrawals and debits are negative values.
          example: 100
        postedDate:
          type: integer
          description: >-
            A timestamp showing when the transaction was posted or cleared by
            the institution
          format: int64
          example: 1571313600
        description:
          type: string
          description: >-
            The description of the transaction, as provided by the institution
            (often known as `payee`). In the event that this field is left blank
            by the institution, Finicity will pass a value of "No description
            provided by institution". All other values are provided by the
            institution.
          example: ATM CHECK DEPOSIT mm/dd
        memo:
          type: string
          description: >-
            The memo field of the transaction, as provided by the institution.
            The institution must provide either a description, a memo, or both.
            It is recommended to concatenate the two fields into a single value.
          example: Some St Somewhere City State
        normalizedPayee:
          type: string
          description: >-
            A normalized payee, derived from the transaction's `description` and
            `memo` fields
          example: T-Mobile
        institutionTransactionId:
          type: string
          description:
            The unique identifier given by the FI for each transaction
          example: '0000000000'
        category:
          type: string
          description:
            One of the values from Categories (assigned based on the payee name)
          example: Income
        type:
          type: string
          description: One of the values from transaction types
          example: debit
        securityType:
          type: string
          description: The type of investment security (VOA only)
          example: 'Stock'
        symbol:
          type: string
          description: Investment symbol (VOA only)
          example: 'DAL'
        commission:
          description: A commission amount
          type: number
          example: 0
    ReportType:
      description: |
        A report type. Possible values:

        * `voi` 

        * `voa` 

        * `voaHistory` 

        * `history` 

        * `voieTxVerify` 

        * `voieWithReport` 

        * `voieWithInterview` 

        * `paystatement` 

        * `preQualVoa` 

        * `assetSummary` 

        * `voie` 

        * `transactions` 

        * `statement` 

        * `voiePayroll` 

        * `voeTransactions` 

        * `voePayroll` 

        * `cfrp` 

        * `cfrb`
      type: string
      example: voi
    RoutingNumber:
      type: string
      example: '123456789'
      description: Routing number of receiving bank
    Rssd:
      type: integer
      description: >-
        The RSSD ID is a unique identifier assigned to financial institutions by
        the Federal Reserve. While the length of the RSSD ID varies by
        institution, it cannot exceed 10 numerical digits.
      format: int64
      example: 490535
    SecurityIdType:
      type: string
      description: >-
        The security type. This field is related to the `securityId` field.
        Possible values:

        * "CUSIP"


        * "ISIN"


        * "SEDOL"


        * "SICC"


        * "VALOR"


        * "WKN"
      example: CUSIP
    ShowNsf:
      type: boolean
      description: >-
        Include the non-sufficient funds (NSF) summary JSON and the NSF summary
        PDF section in the report. Data included:

        * Account


        * Total number of NSF funds


        * Days since the most recent NFS funds fee
      example: false
    SingleUseUrl:
      type: boolean
      description: >-
        "true": The URL link expires after a Connect session successfully
        completes.


        Note: when the `singleUseUrl` and the `experience` parameters are passed
        in the same call, the `singleUseUrl` value overrides the `singleUseUrl`
        value configured in the `experience` parameter.
      example: true
    SocialSecurityNumber:
      type: string
      description: A full SSN with or without hyphens
      example: 999-99-9999
    SocialSecurityNumberLastDigits:
      type: string
      description: Last 4 digits of a SSN
      example: '9999'
    SocialSecurityNumberNoHyphens:
      type: string
      description: The consumer's full SSN without hyphens
      example: '999999999'
    State:
      type: string
      description: State
      example: UT
    StatementData:
      required:
        - accountId
      type: object
      properties:
        accountId:
          $ref: '#/components/schemas/NumericAccountId'
        statementIndex:
          type: integer
          description: Index of the statement to retrieve
          format: int32
          example: 1
          default: 1
          maximum: 6
    StatementEndDate:
      type: integer
      description: >-
        (Credit Card/Line Of Credit) End date of statement period. A date in
        Unix epoch time (in seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    StatementReport:
      description: A Statement report
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseReportAck'
        - type: object
          properties:
            assetId:
              $ref: '#/components/schemas/AssetId'
    StatementReportAck:
      required:
        - id
        - portfolioId
        - customerType
        - customerId
        - requestId
        - requesterName
        - createdDate
        - title
        - consumerId
        - consumerSsn
        - type
        - status
        - constraints
      allOf:
        - $ref: '#/components/schemas/BaseReportAckWithPortfolioId'
        - type: object
          properties:
            constraints:
              $ref: '#/components/schemas/StatementReportConstraints'
    StatementReportConstraints:
      required:
        - statementReportData
      type: object
      properties:
        statementReportData:
          $ref: '#/components/schemas/StatementData'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
    StatementStartDate:
      type: integer
      description: >-
        (Credit Card/Line Of Credit) Start date of statement period. A date in
        Unix epoch time (in seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    StatementType:
      type: string
      description: Account statement types
      example: taxStatement
    StringUnixDate:
      type: string
      description: >-
        A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: '1607450357'
    StudentLoanDataCertification:
      type: boolean
      description: |-
        "true": The institution is certified for the Student Loan Data product

        "false": The institution is decertified for the Student Loan Data product
      example: true
    SubscriptionId:
      description: ID of a TxPush subscription
      type: integer
      format: int64
      example: 17554874
    SubscriptionRecord:
      required:
        - id
        - accountId
        - type
        - callbackUrl
        - signingKey
      type: object
      properties:
        id:
          $ref: '#/components/schemas/SubscriptionId'
        accountId:
          $ref: '#/components/schemas/NumericAccountId'
        type:
          $ref: '#/components/schemas/SubscriptionType'
        callbackUrl:
          $ref: '#/components/schemas/TxPushCallbackUrl'
        signingKey:
          type: string
          description: Signing key for events
          example: >-
            zg4U0v1IvTzFEHIXzJMxPHnfUwWZAMVpXrUuNuL9IvZI0QzkDdwp39IAKuNOFxOVqCOgHLMS1Zpe4ZL40NX83aJkqI6v0Ez5B7BLBtvr7Ag11kPH3uG1taTeOV0CTyI4LOg7ohSHn0DqaRu2aBq26KI90nYe0CecTCzzhu4yMXL43JV8YfydAexNdkzfg8tY44MlhBPUh2neHW2EFTT2ja4s4Ul10JgID03un8WBSrIm2adHw3QYJB4jk4k1e
      description: TxPush subscription details
    SubscriptionType:
      type: string
      description: A TxPush subscription type ("account" or "transaction")
      example: account
    Suffix:
      type: string
      description: A generational or academic suffix
      example: PhD
    TaxId:
      type: string
      description: >-
        Country specific tax ID associated with the customer. 

        * **United Stated**: Social Security number (SSN) or Taxpayer
        Identification Number (TIN)

          * Format: 123-45-7890

        * **Canada**: Social Insurance Number (SIM) or Numero d'assurance
        sociale (NAS)

          * Format: 123-456-789
      example: 123-45-7890
    TestTxPushTransaction:
      description: A fake transaction for TxPush testing
      required:
        - amount
        - description
        - transactionDate
      type: object
      properties:
        amount:
          type: number
          description: The amount of the transaction
          example: -4.25
        description:
          type: string
          description: The description of the transaction
          example: a testing transaction description
        status:
          type: string
          description: '"active" or "pending" (optional)'
          default: active
          example: pending
        postedDate:
          $ref: '#/components/schemas/UnixDate'
        transactionDate:
          $ref: '#/components/schemas/UnixDate'
    ThirdPartyAccessKeyData:
      description: |-
        An object representing the third party access key request

        * `customerId`: This is recipient's customer identifier
        * `partnerId`: This is recipient partner identifier
        * `thirdPartyPartnerId`: This is requester's partner identifier
        * `products`: Array of values representing the Finicity APIs for
        which access needs to be generated.
      type: object
      required:
        - customerId
        - partnerId
        - thirdPartyPartnerId
        - products
      properties:
        customerId:
          $ref: '#/components/schemas/CustomerId'
        partnerId:
          $ref: '#/components/schemas/PartnerId'
        thirdPartyPartnerId:
          $ref: '#/components/schemas/PartnerId'
        provenance:
          $ref: '#/components/schemas/ThirdPartyAccessProvenance'
        products:
          type: array
          items:
            $ref: '#/components/schemas/ThirdPartyAccessProduct'
    ThirdPartyAccessKeyReceiptData:
      description: |-
        An object representing the third party access key receipt

          * `customerId`: This is recipient's customerId represented as a
          pseudoidentifier. 
          * `accountId`: This is the value provided to recipient
          represented as a pseudoidentifier for the accountId.
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ThirdPartyAccessReceiptData'
    ThirdPartyAccessPeriod:
      type: object
      description: Object which describes access validity
      required:
        - type
        - startTime
        - endTime
      properties:
        type:
          $ref: '#/components/schemas/ThirdPartyAccessPeriodTypes'
        startTime:
          $ref: '#/components/schemas/DateTimeWithZone'
        endTime:
          $ref: '#/components/schemas/DateTimeWithZone'
    ThirdPartyAccessPeriodTypes:
      description: |-
        Multiple types will be supported. Presently below types are supported.
        * "timeframe": Specifies a timeframe bounded by a startTime and endTime.  
          The startTime is the time at which the access was granted and the
        access key generated, 
          and the endTime is the time at which the access was revoked. Times
        are represented in ISO 8601 format("2022-03-10T06:06:20Z")
      type: string
      example: timeframe
    ThirdPartyAccessProduct:
      description: Product for which access token to be generated
      type: object
      required:
        - product
        - accountId
        - accessPeriod
      properties:
        product:
          $ref: '#/components/schemas/ThirdPartyAccessProductTypes'
        payorId:
          type: string
          description: >-
            The Finicity Partner ID who should be billed when the Requester
            requests data from Finicity. If no value specified, then the
            Recipient will be billed.
          example: '2445581559892'
        maxCalls:
          type: integer
          description:
            Max number of calls to the consented product (consented api)
          example: 200
        accountId:
          $ref: '#/components/schemas/AccountId'
        accessPeriod:
          $ref: '#/components/schemas/ThirdPartyAccessPeriod'
    ThirdPartyAccessProductTypes:
      description: |-
        Third party access token can be generated for the following product types:


        * "moneyTransferDetails": Retrieve account details for money transfer 
        * "availableBalance": Retrieves the latest cached available and cleared
            account balances for an account. 
        * "availableBalanceLive": Retrieves the available and cleared account
        balances live from the financial institution 
        * "accountOwner": Retrieves names and addresses of the account owner
        from a financial institution. 
        * "paymentIndicator": Get the Payment Success Indicator response,
        scoring the likelihood of payment settlement 
        * "paymentFeedback": Create feedback loop for Payment Success Indicator
        (PSI) and/or Payment Routing Optimizer (PRO) 
        * "paymentRouting": Product recommends the best rail to use as well as
        the best time to initiate the payment
      type: string
      example: moneyTransferDetails
    ThirdPartyAccessProof:
      type: object
      description: An object representing a digital signature of the access key
      properties:
        signature:
          type: string
          description:
            The digital signature for the "receipt" portion of the access key
          example: >-
            JTdCyTIyY3VzdG9tZXJJZCUyMiUzQSUyMjU0NTQ1MTQwMDI5NTU2MjkzNDMlMjIlMkMlMjJwYXJ0bmVySWQlMjIlM0ElMjIyNDQ1NTgzOTIyNTM2JTIyJTJDJTIycHJvZHVjdHMlMjIlM0ElNUIlN0IlMjJhY2Nlc3NQZXJpb2QlMjIlM0ElN0IlMjJlbmRUaW1lJTIyJTNBJTIyMjAyMy0xMS0yOVQwNiUzQTA2JTNBMjBaJTIyJTJDJTIyc3RhcnRUaW1lJTIyJTNBJTIyMjAyMi0xMS0yOVQwNiUzQTA2JTNBMjBaJTIyJTJDJTIydHlwZSUyMiUzQSUyMnRpbWVmcmFtZSUyMiU3RCUyQyUyMmFjY291bnRJZCUyMiUzQSUyMjQ2MzM0MTU3NDM5NjAzNzQwMjQlMjIlMkMlMjJwcm9kdWN0JTIyJTNBJTIybW9uZXlUcmFuc2ZlckRldGFpbHMlMjIlN0QlMkMlN0IlMjJhY2Nlc3NQZXJpb2QlMjIlM0ElN0IlMjJlbmRUaW1lJTIyJTNBJTIyMjAyMy0xMC0yOVQwNiUzQTA2JTNBMjBaJTIyJTJDJTIyc3RhcnRUaW1lJTIyJTNBJTIyMjAyMi0xMS0yOVQwNiUzQTA2JTNBMjBaJTIyJTJDJTIydHlwZSUyMiUzQSUyMnRpbWVmcmFtZSUyMiU3RCUyQyUyMmFjY291bnRJZCUyMiUzQSUyMjQ2MzM0MTU3NDM5NjAzNzQwMjQlMjIlMkMlMjJwcm9kdWN0JTIyJTNBJTIybW9uZXlUcmFuc2ZlckRldGFpbHMlMjIlN0QlNUQlMkMlMjJwcm9maWxlJTIyJTNBMyUyQyUyMnByb3ZlbmFuY2UlMjIlM0FudWxsJTJDJTIycmVjZWlwdElkJTIyJTNBJTIyY3JfNHBmSTNyMVg4YU9IckREd3J3QzAxTkhDeE9YbFcxJTIyJTJDJTIycmVjZWlwdFZlcnNpb24lMjIlM0ExJTJDJTIydGltZXN0YW1wJTIyJTNBJTIyMjAyMi0xMS0yOVQxOCUzQTM1JTNBMDhaJTIyJTJDJTIydmVyc2lvbiUyMiUzQSUyMjElRjYlN9U=
        keyId:
          type: string
          description:
            The Finicity key identifier is used to sign the access key
          example: 867-530-900
        timestamp:
          $ref: '#/components/schemas/DateTimeWithZone'
    ThirdPartyAccessProvenance:
      description: >-
        Provenance regarding the calling client like `clientFingerprint`,
        `ipAddress` and `token`.
      type: object
      properties:
        clientFingerprint:
          type: string
          description: Calling client identifier
          example: LU9ZYxcDNQCwEmAxH52XFzaRiGMAAAAABclSKxW5S9P8pUMDV4fbpg
        ipAddress:
          type: string
          description: Calling client IP address
          example: 8.8.8.8
        token:
          type: string
          description: Calling client cookie
          example: P9YbR+srNVyQI35893d+BzPrhGMAAAAAuacVUt+3m4svbaFjVSbHEA==
    ThirdPartyAccessReceipt:
      type: object
      description: An object representing consent receipt
      properties:
        profile:
          type: integer
          description: Representation of the type of consent receipt
          example: 3
        version:
          type: string
          description: A schema version of receipt
          example: '1'
        receiptId:
          type: string
          description: >-
            This is officially the Consent Receipt ID, but is aliased as the
            Access Key ID. This is a unique identifier managed by Finicity that
            points to the contents of this JSON document.
          example: cr_4pfI2r1X8aOHrDDwrwC01NHTxOXlT1
        customerId:
          type: string
          description:
            This is recipient's customerId represented as a pseudoidentifier
          example: '3465230025077724000'
        partnerId:
          $ref: '#/components/schemas/PartnerId'
        products:
          type: array
          items:
            $ref: '#/components/schemas/ThirdPartyAccessProduct'
        provenance:
          $ref: '#/components/schemas/ThirdPartyAccessProvenance'
        timestamp:
          $ref: '#/components/schemas/DateTimeWithZone'
    ThirdPartyAccessReceiptData:
      type: object
      description: An object representing consent access data
      properties:
        receipt:
          $ref: '#/components/schemas/ThirdPartyAccessReceipt'
        proof:
          $ref: '#/components/schemas/ThirdPartyAccessProof'
    Transaction:
      required:
        - id
        - amount
        - accountId
        - customerId
        - status
        - description
        - createdDate
      type: object
      properties:
        id:
          $ref: '#/components/schemas/TransactionId'
        amount:
          type: number
          description: >-
            The total amount of the transaction. Transactions for deposits are
            positive values, withdrawals and debits are negative values.
          example: -828.9
        accountId:
          $ref: '#/components/schemas/NumericAccountId'
        customerId:
          $ref: '#/components/schemas/NumericCustomerId'
        status:
          type: string
          description: >-
            One of "active", "pending", or "shadow" (see [Pending and Shadow
            Transactions](https://docs.finicity.com/pending-and-shadow-transactions/))
          example: active
        description:
          type: string
          description: >-
            The description value is from the financial institution (FI), often
            known as the payee. The value "No description provided by
            institution" is returned when the FI doesn't provide one
          example: Buy Stock
        memo:
          type: string
          description: >-
            The institution must provide either a description, a memo, or both.
            We recommended concatenating the two fields into a single value.
          example: UWM HOLDINGS CORPORATION - CLASS A COMMON STOCK
        type:
          $ref: '#/components/schemas/TransactionType'
        transactionDate:
          $ref: '#/components/schemas/TransactionDate'
        postedDate:
          $ref: '#/components/schemas/TransactionPostedDate'
        createdDate:
          $ref: '#/components/schemas/TransactionCreatedDate'
        firstEffectiveDate:
          $ref: '#/components/schemas/TransactionFirstEffectiveDate'
        effectiveDate:
          $ref: '#/components/schemas/TransactionEffectiveDate'
        optionExpireDate:
          $ref: '#/components/schemas/TransactionOptionExpireDate'
        checkNum:
          type: integer
          description: The check number of the transaction
          format: int32
          example: 299
        escrowAmount:
          type: number
          description: The portion of the transaction allocated to escrow
          example: 2534
        feeAmount:
          type: number
          description:
            The portion of the overall transaction amount applied to fees
          example: 0.51
        suspenseAmount:
          type: number
          description:
            Temporarily hold funds if you overpay or underpay your monthly
            payment
          example: 0.25
        interestAmount:
          type: number
          description: The portion of the transaction allocated to interest
          example: 132
        principalAmount:
          type: number
          description: The portion of the transaction allocated to principal
          example: 32560
        optionStrikePrice:
          type: number
          description: The strike price of the option contract
          example: 32560
        unitQuantity:
          type: integer
          description:
            The number of units (individual shares) in the transaction
          format: int32
          example: 150
        unitPrice:
          type: number
          description:
            'Share price for the investment unit: stocks, mutual funds, ETFs'
          example: 5.53
        categorization:
          $ref: '#/components/schemas/Categorization'
        runningBalanceAmount:
          description: The ending balance after the transaction was posted
          type: number
          example: 1000
        subaccountSecurityType:
          type: string
          description: The type of sub account the funds came from
          example: MARGIN
        commissionAmount:
          type: integer
          description: Transaction commission
          format: int32
          example: 0
        ticker:
          type: string
          description:
            Ticker symbol for the investment related to the transaction
          example: UWMC
        investmentTransactionType:
          $ref: '#/components/schemas/InvestmentTransactionTypes'
        taxesAmount:
          type: integer
          description: Taxes applicable to the investment trade
          format: int32
          example: 0
        currencySymbol:
          type: string
          description: >-
            If the foreign amount value is present then this is the currency
            code of that foreign amount
          example: USD
        incomeType:
          type: string
          description: >-
            Capital gains applied in short, long, or miscellaneous terms for tax
            purposes
          example: DIV
        splitDenominator:
          type: number
          description: Denominator of the stock split for the transaction
          example: 152
        splitNumerator:
          type: number
          description: Numerator of the stock split for the transaction
          example: 20
        sharesPerContract:
          type: number
          description: Shares per contract of the underlying stock option
          example: 100
        subAccountFund:
          type: string
          description: The sub account where the funds came from
          example: MARGIN
        securityId:
          type: string
          description: The security ID of the transaction
          example: 91823B109
        securityIdType:
          $ref: '#/components/schemas/SecurityIdType'
    TransactionCreatedDate:
      type: integer
      description: >-
        A date in Unix epoch time (in seconds). Represents the timestamp of the
        transaction when it was added to our platform. See: [Handling Epoch
        Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    TransactionDate:
      type: integer
      description: >-
        A date in Unix epoch time (in seconds). Represents the timestamp of the
        transaction when it occurred. See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    TransactionEffectiveDate:
      type: integer
      description: >-
        A date in Unix epoch time (in seconds). Represents the timestamp of the
        transaction when it became effective on an account by an institution.
        See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    TransactionFirstEffectiveDate:
      type: integer
      description: >-
        A date in Unix epoch time (in seconds). Represents the first timestamp
        of the transaction recorded in the `effectiveDate` field. See: [Handling
        Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    TransactionId:
      type: integer
      description: A transaction ID
      format: int64
      example: 21284820852
    TransactionOptionExpireDate:
      type: integer
      description: >-
        A date in Unix epoch time (in seconds). Represents the timestamp of the
        transaction expiration date when it became expires on an account by an
        institution. See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    TransactionPostedDate:
      type: integer
      description: >-
        A date in Unix epoch time (in seconds). Represents the timestamp of the
        transaction when it was posted or cleared by the institution. This value
        isn't required for student loan transaction data. See: [Handling Epoch
        Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    TransactionType:
      type: string
      description: >-
        If provided by the institution, the following values may be returned in
        the field of a record:

        * "atm"


        * "cash"


        * "check"


        * "credit"


        * "debit"


        * "deposit"


        * "directDebit"


        * "directDeposit"


        * "dividend"


        * "fee"


        * "interest"


        * "other"


        * "payment"


        * "pointOfSale"


        * "repeatPayment"


        * "serviceCharge"


        * "transfer"
      example: atm
    Transactions:
      description: A list of transactions
      required:
        - found
        - displaying
        - moreAvailable
        - fromDate
        - toDate
        - sort
        - transactions
      type: object
      properties:
        found:
          $ref: '#/components/schemas/FoundResults'
        displaying:
          $ref: '#/components/schemas/DisplayingResults'
        moreAvailable:
          $ref: '#/components/schemas/MoreResultsAvailable'
        fromDate:
          $ref: '#/components/schemas/TransactionsFromDate'
        toDate:
          $ref: '#/components/schemas/TransactionsToDate'
        sort:
          type: string
          description:
            Value of the sort request parameter that generated this response
          example: desc
        transactions:
          description: The array of transactions
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
    TransactionsFromDate:
      type: integer
      description:
        Value of the `fromDate` request parameter that generated this response
      format: int64
      example: 1607450357
    TransactionsReport:
      description: A Transactions report
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseReportAckWithPortfolioId'
        - type: object
          properties:
            startDate:
              $ref: '#/components/schemas/ReportStartDate'
            endDate:
              $ref: '#/components/schemas/ReportEndDate'
            days:
              type: integer
              description: Number of days covered by the report
              format: int64
              example: 174
            seasoned:
              type: boolean
              description: '"true" if the report covers more than 365 days'
              example: false
            institutions:
              type: array
              items:
                $ref: '#/components/schemas/ReportInstitution'
              description: A list of institution records
    TransactionsReportAccount:
      type: object
      properties:
        id:
          type: integer
          description: The Finicity account ID
          format: int64
          example: 1000075473
        name:
          type: string
          description: The account name from the financial institution.
          example: Super Checking
        number:
          type: string
          description:
            The account number from the financial institution (obfuscated)
          example: '5015'
        type:
          $ref: '#/components/schemas/AccountType'
        aggregationStatusCode:
          type: integer
          description: >-
            The status of the most recent aggregation attempt for this account.
            Note: non-zero means the account was not accessed successfully for
            this report, and additional fields for this account may not be
            reliable.
          format: int32
          example: 0
        balance:
          type: number
          description: The cleared balance of the account as-of `balanceDate`
          example: 100000
        balanceDate:
          type: integer
          description: A timestamp showing when the balance was captured
          format: int64
          example: 1594676289
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/ReportTransaction'
          description: a list of transaction records
      description: Fields used for the Transaction History Report (CRA products)
    TransactionsReportAck:
      required:
        - id
        - portfolioId
        - customerType
        - customerId
        - requestId
        - requesterName
        - createdDate
        - title
        - consumerId
        - consumerSsn
        - type
        - status
        - constraints
      allOf:
        - $ref: '#/components/schemas/BaseReportAckWithPortfolioId'
        - type: object
          properties:
            constraints:
              $ref: '#/components/schemas/TransactionsReportConstraintsOut'
    TransactionsReportConstraints:
      type: object
      properties:
        accountIds:
          $ref: '#/components/schemas/ReportAccountIdsString'
        fromDate:
          $ref: '#/components/schemas/UnixDate'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
    TransactionsReportConstraintsOut:
      type: object
      properties:
        accountIds:
          $ref: '#/components/schemas/ReportAccountIds'
        fromDate:
          $ref: '#/components/schemas/UnixDate'
        toDate:
          $ref: '#/components/schemas/UnixDate'
        includePending:
          $ref: '#/components/schemas/IncludePending'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
    TransactionsToDate:
      type: integer
      description:
        Value of the `toDate` request parameter that generated this response
      format: int64
      example: 1607450357
    TxPushCallbackUrl:
      type: string
      description: A callback URL where to receive TxPush notifications
      example: 'https://www.mydomain.com/txpush/listener'
    TxPushSubscriptionParameters:
      required:
        - callbackUrl
      type: object
      properties:
        callbackUrl:
          $ref: '#/components/schemas/TxPushCallbackUrl'
    TxPushSubscriptions:
      required:
        - subscriptions
      type: object
      properties:
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionRecord'
    TxVerifyInterview:
      required:
        - assetId
      type: object
      properties:
        assetId:
          $ref: '#/components/schemas/AssetId'
        accounts:
          $ref: '#/components/schemas/ReportAccountIds'
    UnixDate:
      type: integer
      description: >-
        A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/).
      format: int64
      example: 1607450357
    ReportCreatedDate:
      type: integer
      description: >-
        A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and
        Times](https://docs.finicity.com/endpoint-syntax-and-format/). Note: If
        the report is retrieved on a day other than the day it was generated, on
        the header of the PDF version of the report there will be a "Retrieved
        Date" populated.
      format: int64
      example: 1607450357
    VOAIReportIncomeStream:
      description: A report income stream record
      required:
        - id
        - name
        - status
        - estimateInclusion
        - confidence
        - cadence
        - transactions
      type: object
      properties:
        id:
          type: string
          description: Income stream ID
          example: dens28i3vsch-voah
        name:
          type: string
          description: >-
            A human-readable name based on the `normalizedPayee` name of the
            transactions for this income stream
          example: none
        status:
          $ref: '#/components/schemas/ActiveStatus'
        estimateInclusion:
          $ref: '#/components/schemas/EstimateInclusion'
        confidence:
          type: integer
          description: >-
            Level of confidence that the deposit stream represents income
            (example: 85%)
          format: int32
          example: 70
        cadence:
          $ref: '#/components/schemas/CadenceDetails'
        netMonthly:
          type: array
          items:
            $ref: '#/components/schemas/NetMonthly'
          description: >-
            A list of net monthly records. One instance for each complete
            calendar month in the report.
          example:
            - month: 1522562400
              net: 2004.77
        netAnnual:
          type: number
          description:
            Sum of all values in `netMonthlyIncome` over the previous 12 months
          example: 110475.7
        projectedNetAnnual:
          type: number
          description: >-
            Projected net income over the next 12 months, across all income
            streams, based on `netAnnualIncome`
          example: 0
        estimatedGrossAnnual:
          type: number
          description: >-
            Before-tax gross annual income (estimated from `netAnnual`) across
            all income stream in the past 12 months
          example: 2000.12
        projectedGrossAnnual:
          type: number
          description: >-
            Projected gross income over the next 12 months, across all active
            income streams, based on `projectedNetAnnual`
          example: 151609
        averageMonthlyIncomeNet:
          type: number
          description: Monthly average amount over the previous 24 months
          example: 9206.31
        incomeStreamMonths:
          type: integer
          description: The number of months the income transactions are observed
          format: int32
          example: 18
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/ReportTransaction'
          description: A list of transaction records
    VOAReport:
      description: A VOA report
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseReportAckWithPortfolioId'
        - type: object
          properties:
            startDate:
              $ref: '#/components/schemas/ReportStartDate'
            endDate:
              $ref: '#/components/schemas/ReportEndDate'
            days:
              type: integer
              description: Number of days covered by the report
              example: 180
            seasoned:
              type: boolean
              description: '"true" if the report covers more than 180 days'
              example: true
            consolidatedAvailableBalance:
              type: number
              description: >-
                The sum of available balance for all of the accounts included in
                the report
              example: 1929.57
            institutions:
              type: array
              items:
                $ref: '#/components/schemas/ReportInstitution'
              description: A list of institution records
            assets:
              $ref: '#/components/schemas/PrequalificationReportAssetSummary'
    VOAReportAccount:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the account
          format: int64
          example: 1000023996
        number:
          type: string
          description: >-
            The account number from the institution (all digits except the last
            four are obfuscated)
          example: '1111'
        ownerName:
          type: string
          description: >-
            The name(s) of the account owner(s). This field is optional. If no
            owner information is available, this field will not appear in the
            report.
          example: JOHN DOE
        ownerAddress:
          type: string
          description: >-
            The mailing address of the account owner(s). This field is optional.
            If no owner information is available, this field will not appear in
            the report.
          example: '924 GAINSVILLE HIGHWAY SUITE 130 BUFORD, GA 30518'
        name:
          type: string
          description: The account name from the institution
          example: Checking
        type:
          type: string
          description: One of the values from account types
          example: checking
        availableBalance:
          type: number
          description: The available balance for the account
          example: 501.24
        aggregationStatusCode:
          type: integer
          description: The status of the most recent aggregation attempt
          format: int32
          example: 0
        balance:
          type: number
          description: The cleared balance of the account as-of balanceDate
          example: 501.24
        balanceDate:
          type: integer
          description: A timestamp showing when the balance was captured
          format: int64
          example: 1588350276
        averageMonthlyBalance:
          type: number
          description: The average monthly balance of this account
          example: 501.02
        totNumberInsufficientFundsFeeDebitTxAccount:
          type: integer
          description: >-
            The count for the total number of insufficient funds transactions,
            based on the `fromDate` of the report.
          format: int64
          example: 0
        totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount:
          type: integer
          description: >-
            The count for the total number of insufficient funds transactions
            for the last two months, based on the `fromDate` of the report.
          format: int64
          example: 0
        totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount:
          type: integer
          description: >-
            The number of days since the most recent insufficient funds
            transaction, based on the `fromDate` of the report.
          format: int64
          example: 120
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/ReportTransaction'
          description: a list of transaction records
        details:
          $ref: '#/components/schemas/AccountDetails'
        asset:
          $ref: '#/components/schemas/PrequalificationReportAssetSummary'
    VOAReportAck:
      required:
        - id
        - portfolioId
        - customerType
        - customerId
        - requestId
        - requesterName
        - createdDate
        - title
        - consumerId
        - consumerSsn
        - type
        - status
        - constraints
      allOf:
        - $ref: '#/components/schemas/BaseReportAckWithPortfolioId'
        - type: object
          properties:
            constraints:
              $ref: '#/components/schemas/VOAReportConstraintsOut'
    VOAReportConstraints:
      type: object
      properties:
        accountIds:
          $ref: '#/components/schemas/ReportAccountIdsString'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        showNsf:
          $ref: '#/components/schemas/ShowNsf'
        fromDate:
          $ref: '#/components/schemas/UnixDate'
    VOAReportConstraintsOut:
      type: object
      properties:
        accountIds:
          $ref: '#/components/schemas/ReportAccountIds'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        showNsf:
          $ref: '#/components/schemas/ShowNsf'
        fromDate:
          $ref: '#/components/schemas/UnixDate'
    VOAWithIncomeReport:
      description: A VOA with income report
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseReportAckWithPortfolioId'
        - type: object
          properties:
            startDate:
              $ref: '#/components/schemas/ReportStartDate'
            endDate:
              $ref: '#/components/schemas/ReportEndDate'
            days:
              type: integer
              description: Number of days covered by the report
              example: 180
            seasoned:
              type: boolean
              description: '"true" if the report covers more than 180 days'
              example: true
            consolidatedAvailableBalance:
              type: number
              description: >-
                The sum of available balance for all of the accounts included in
                the report
              example: 1929.57
            institutions:
              type: array
              items:
                $ref: '#/components/schemas/ReportInstitution'
              description: A list of institution records
            assets:
              $ref: '#/components/schemas/PrequalificationReportAssetSummary'
    VOAWithIncomeReportAccount:
      type: object
      allOf:
        - $ref: '#/components/schemas/VOAReportAccount'
        - type: object
          properties:
            incomeStreams:
              type: array
              items:
                $ref: '#/components/schemas/VOAIReportIncomeStream'
              description: A list of income stream records
    VOAWithIncomeReportAck:
      required:
        - id
        - portfolioId
        - customerType
        - customerId
        - requestId
        - requesterName
        - createdDate
        - title
        - consumerId
        - consumerSsn
        - type
        - status
        - constraints
      allOf:
        - $ref: '#/components/schemas/BaseReportAckWithPortfolioId'
        - type: object
          properties:
            constraints:
              $ref: '#/components/schemas/VOAWithIncomeReportConstraintsOut'
    VOAWithIncomeReportConstraints:
      type: object
      properties:
        accountIds:
          $ref: '#/components/schemas/ReportAccountIdsString'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        showNsf:
          $ref: '#/components/schemas/ShowNsf'
        fromDate:
          $ref: '#/components/schemas/UnixDate'
        incomeStreamConfidenceMinimum:
          $ref: '#/components/schemas/IncomeStreamConfidenceMinimum'
    VOAWithIncomeReportConstraintsOut:
      type: object
      properties:
        accountIds:
          $ref: '#/components/schemas/ReportAccountIds'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        showNsf:
          $ref: '#/components/schemas/ShowNsf'
        fromDate:
          $ref: '#/components/schemas/UnixDate'
        incomeStreamConfidenceMinimum:
          $ref: '#/components/schemas/IncomeStreamConfidenceMinimum'
    VOEPayrollReport:
      description: A VOE Payroll report
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseReportAckWithPortfolioId'
        - type: object
          properties:
            employmentHistory:
              type: array
              items:
                $ref: '#/components/schemas/PayrollEmploymentHistoryVOE'
              description: >-
                An array of employment histories, one for each of the consumer's
                verified employers
            gseEnabled:
              $ref: '#/components/schemas/GseEnabled'
    VOETransactionsReport:
      description: A VOE Transactions report
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseReportAckWithPortfolioId'
        - type: object
          properties:
            startDate:
              $ref: '#/components/schemas/ReportStartDate'
            endDate:
              $ref: '#/components/schemas/ReportEndDate'
            days:
              type: integer
              description: Number of days covered by the report
              example: 120
            seasoned:
              type: boolean
              description: '"true" if the report covers more than 180 days'
              example: true
            institutions:
              type: array
              items:
                $ref: '#/components/schemas/ReportInstitution'
              description: >-
                A list of institution records, including information about the
                individual accounts used in this report
    VOETransactionsReportAccount:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the account
          format: int64
          example: 1000023996
        number:
          type: string
          description: >-
            The account number from the institution (all digits except the last
            four are obfuscated)
          example: '1111'
        ownerName:
          type: string
          description: >-
            The name(s) of the account owner(s). This field is optional. If no
            owner information is available, this field will not appear in the
            report.
          example: JOHN DOE
        ownerAddress:
          type: string
          description: >-
            The mailing address of the account owner(s). This field is optional.
            If no owner information is available, this field will not appear in
            the report.
          example: '924 GAINSVILLE HIGHWAY SUITE 130 BUFORD, GA 30518'
        name:
          type: string
          description: The account name from the institution
          example: Checking
        type:
          type: string
          description: One of the values from account types
          example: checking
        aggregationStatusCode:
          type: integer
          description: The status of the most recent aggregation attempt
          format: int32
          example: 0
        incomeStreams:
          type: array
          items:
            $ref: '#/components/schemas/VOETransactionsReportIncomeStream'
          description: A list of income stream records
    VOETransactionsReportAck:
      required:
        - id
        - portfolioId
        - customerType
        - customerId
        - requestId
        - requesterName
        - createdDate
        - title
        - consumerId
        - consumerSsn
        - type
        - status
        - constraints
      allOf:
        - $ref: '#/components/schemas/BaseReportAckWithPortfolioId'
        - type: object
          properties:
            constraints:
              $ref: '#/components/schemas/VOETransactionsReportConstraintsOut'
    VOETransactionsReportConstraints:
      type: object
      properties:
        reportId:
          $ref: '#/components/schemas/ReportId'
        accountIds:
          $ref: '#/components/schemas/ReportAccountIdsString'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        fromDate:
          $ref: '#/components/schemas/UnixDate'
        incomeStreamConfidenceMinimum:
          $ref: '#/components/schemas/IncomeStreamConfidenceMinimum'
    VOETransactionsReportConstraintsOut:
      type: object
      properties:
        reportId:
          $ref: '#/components/schemas/ReportId'
        accountIds:
          $ref: '#/components/schemas/ReportAccountIds'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        fromDate:
          $ref: '#/components/schemas/UnixDate'
        incomeStreamConfidenceMinimum:
          $ref: '#/components/schemas/IncomeStreamConfidenceMinimum'
    VOETransactionsReportIncomeStream:
      type: object
      required:
        - id
        - name
        - status
        - estimateInclusion
        - confidence
        - cadence
        - daysSinceLastTransaction
        - nextExpectedTransactionDate
        - transactions
      properties:
        id:
          type: string
          description: Income stream ID
          example: dens28i3vsch-voah
        name:
          type: string
          description: >-
            A human-readable name based on the `normalizedPayee` name of the
            transactions for this income stream
          example: none
        status:
          $ref: '#/components/schemas/ActiveStatus'
        estimateInclusion:
          $ref: '#/components/schemas/EstimateInclusion'
        confidence:
          type: integer
          description: >-
            Level of confidence that the deposit stream represents income
            (example: 85%)
          format: int32
          example: 70
        cadence:
          $ref: '#/components/schemas/CadenceDetails'
        daysSinceLastTransaction:
          type: integer
          description: >-
            The number of days since the last credit transaction for the
            particular income stream
          format: int32
          example: 15
        nextExpectedTransactionDate:
          type: integer
          description: >-
            The next expected credit transaction date for the particular income
            stream, based on the cadence
          format: int64
          example: 1572625469
        incomeStreamMonths:
          type: integer
          description: The number of months the income transactions are observed
          format: int32
          example: 18
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/ReportTransaction'
          description: A list of transaction records
    VOIEPayStatement:
      type: object
      properties:
        payPeriod:
          type: string
          description: The pay period of the pay statement
          example: LastPayPeriod
        billable:
          type: boolean
          description: Designates whether the pay statement is billable
          example: true
        assetId:
          type: string
          description: The asset ID of the stored pay statement
          example: 6f8fb0a0-e882-4f57-b672-cf53f1397581
        payDate:
          type: integer
          description: The listed pay date for the pay statement
          format: int64
          example: 1559241000
        startDate:
          type: integer
          description: The beginning of the pay period
          format: int64
          example: 1557513000
        endDate:
          type: integer
          description: The end of the pay period
          format: int64
          example: 1558722600
        netPayCurrent:
          type: number
          description: >-
            The total pay after deductions for the employee for the current pay
            period
          example: 1802.22
        netPayYTD:
          type: number
          description: >-
            The total accumulation of pay after deductions for the employee for
            the current pay year
          example: 36000
        grossPayCurrent:
          type: number
          description: >-
            The total pay before deductions for the employee for the current pay
            period
          example: 24200
        grossPayYTD:
          type: number
          description: >-
            The total accumulation of pay before deductions for the employee for
            the current pay year
          example: 72600
        payrollProvider:
          type: string
          description: The company that provides the pay stub.
          example: Finicity
        employer:
          $ref: '#/components/schemas/Employer'
        employee:
          $ref: '#/components/schemas/Employee'
        payStat:
          type: array
          items:
            $ref: '#/components/schemas/PayStat'
          description:
            Information pertaining to the earnings on the pay statement
        deductions:
          type: array
          items:
            $ref: '#/components/schemas/Deduction'
          description: Information pertaining to deductions on the pay statement
        directDeposits:
          type: array
          items:
            $ref: '#/components/schemas/DirectDeposit'
          description:
            Information pertaining to direct deposits on the pay statement
    VOIEPayrollReport:
      description: A VOIE Payroll report
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseReportAckWithPortfolioId'
        - type: object
          properties:
            employmentHistory:
              type: array
              items:
                $ref: '#/components/schemas/PayrollEmploymentHistoryVOIE'
              description: >-
                An array of employment histories, one for each of the consumer's
                verified employers
            gseEnabled:
              $ref: '#/components/schemas/GseEnabled'
    VOIEPaystubReport:
      description: A VOIE Paystub report
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseReportAckWithPortfolioId'
        - type: object
          properties:
            assetIds:
              type: array
              items:
                $ref: '#/components/schemas/AssetId'
              description: The pay statements included in the report
            numberOfBillableAssets:
              type: integer
              description:
                Total number of billable pay statements included in the report
              format: int32
              example: 1
            payStatements:
              type: array
              items:
                $ref: '#/components/schemas/VOIEPaystubWithStatementPayStatement'
              description: >-
                Extracted pay statement details, and the transaction matching
                summary
    VOIEPaystubReportAck:
      required:
        - id
        - portfolioId
        - customerType
        - customerId
        - requestId
        - requesterName
        - createdDate
        - title
        - consumerId
        - consumerSsn
        - type
        - status
        - constraints
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseReportAckWithPortfolioId'
        - type: object
          properties:
            constraints:
              $ref: '#/components/schemas/VOIEReportConstraints'
    VOIEPaystubWithStatementPayStatement:
      required:
        - billable
        - assetId
        - employer
        - employee
        - payStat
        - monthlyIncome
        - institutions
      type: object
      properties:
        payPeriod:
          type: string
          description: The pay period of the pay statement
          example: LastPayPeriod
        billable:
          type: boolean
          description: >-
            This will display true if the pay statement is billable. If a pay
            statement has been digitized previously, this will display as false
            as it will not be billable.
          example: true
        assetId:
          type: string
          description: The asset ID of the stored pay statement
          example: 6f8fb0a0-e882-4f57-b672-cf53f1397581
        payDate:
          type: integer
          description: The listed pay date for the pay statement
          format: int64
          example: 1559241000
        startDate:
          type: integer
          description: The beginning of the pay period
          format: int64
          example: 1557513000
        endDate:
          type: integer
          description: The end of the pay period
          format: int64
          example: 1558722600
        netPayCurrent:
          type: number
          description: >-
            The total pay after deductions for the employee for the current pay
            period
          example: 1802.22
        netPayYTD:
          type: number
          description: >-
            The total accumulation of pay after deductions for the employee for
            the current pay year
          example: 36000
        grossPayCurrent:
          type: number
          description: >-
            The total pay before deductions for the employee for the current pay
            period
          example: 24200
        grossPayYTD:
          type: number
          description: >-
            The total accumulation of pay before deductions for the employee for
            the current pay year
          example: 72600
        payrollProvider:
          type: string
          description: The payroll provider extracted from the pay statement
          example: Finicity
        employer:
          $ref: '#/components/schemas/Employer'
        employee:
          $ref: '#/components/schemas/Employee'
        payStat:
          type: array
          items:
            $ref: '#/components/schemas/PayStat'
          description:
            Information pertaining to the earnings on the pay statement
        directDeposits:
          type: array
          items:
            $ref: '#/components/schemas/DirectDeposit'
          description:
            Information pertaining to the direct deposits on the pay statement
        monthlyIncome:
          $ref: '#/components/schemas/PaystubMonthlyIncomeRecord'
        institutions:
          type: array
          items:
            type: string
          description: >-
            Not populated for the voieWithStatement style of paystub report. For
            the VOIE - Paystub (with TXVerify) reports this would include
            details of the financial institution accounts and income streams
            with matching transactions to the pay statement.
          example: []
        errorCode:
          type: integer
          description: Error code for the asset
          format: int32
          example: 0
        errorMessage:
          type: string
          description: Error message for the asset
          example: 'Some error message'
    VOIEPaystubWithTXVerifyReport:
      description: A VOIE Paystub With TXVerify report
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseReportAckWithPortfolioId'
        - type: object
          properties:
            assetIds:
              type: array
              items:
                $ref: '#/components/schemas/AssetId'
              description: The pay statements included in the report
            numberOfBillableAssets:
              type: integer
              description:
                Total number of billable pay statements included in the report
              format: int32
              example: 1
            payStatements:
              type: array
              items:
                $ref: '#/components/schemas/VOIEPaystubWithStatementPayStatement'
              description: >-
                Extracted pay statement details, and the transaction matching
                summary
            institutions:
              type: array
              items:
                $ref: '#/components/schemas/ReportInstitution'
              description: >-
                The details of the financial institution accounts included in
                the report.
    VOIEPaystubWithTXVerifyReportAck:
      required:
        - id
        - portfolioId
        - customerType
        - customerId
        - requestId
        - requesterName
        - createdDate
        - title
        - consumerId
        - consumerSsn
        - type
        - status
        - constraints
      allOf:
        - $ref: '#/components/schemas/BaseReportAckWithPortfolioId'
        - type: object
          properties:
            constraints:
              $ref: '#/components/schemas/VOIEWithTXVerifyReportConstraintsOut'
    VOIEReportConstraints:
      required:
        - voieWithStatementData
      type: object
      properties:
        voieWithStatementData:
          $ref: '#/components/schemas/VOIEWithStatementData'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
      description: >-
        The request details from the report generation that were used to
        generate the report
    VOIETXVerifyReportAccount:
      required:
        - id
        - name
        - number
        - type
        - aggregationStatusCode
        - transactions
      type: object
      properties:
        id:
          type: integer
          description: The ID of the account
          format: int64
          example: 1000023996
        number:
          type: string
          description: >-
            The account number from the institution (all digits except the last
            four are obfuscated)
          example: '1111'
        ownerName:
          type: string
          description: >-
            The name(s) of the account owner(s). This field is optional. If no
            owner information is available, this field will not appear in the
            report.
          example: JOHN DOE
        ownerAddress:
          type: string
          description: >-
            The mailing address of the account owner(s). This field is optional.
            If no owner information is available, this field will not appear in
            the report.
          example: '924 GAINSVILLE HIGHWAY SUITE 130 BUFORD, GA 30518'
        name:
          type: string
          description: The account name from the institution
          example: Checking
        type:
          type: string
          description: One of the values from account types
          example: checking
        aggregationStatusCode:
          type: integer
          description: The status of the most recent aggregation attempt
          format: int32
          example: 0
        incomeStreams:
          type: array
          items:
            $ref: '#/components/schemas/VOIETXVerifyReportIncomeStream'
          description: A list of income stream records
        balance:
          type: number
          description: The cleared balance of the account as-of `balanceDate`
          example: 123.45
        averageMonthlyBalance:
          type: number
          description: The average monthly balance of this account
          example: 301.45
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/ReportTransaction'
          description: a list of transaction records
        availableBalance:
          type: number
          description: The available balance for the account
          example: 123.45
    VOIETXVerifyReportIncomeStream:
      required:
        - id
        - name
        - status
        - confidence
        - cadence
        - transactions
      type: object
      properties:
        id:
          type: string
          description: Finicity's income stream ID
          example: dens28i3vsch-voietxverify
        name:
          type: string
          description: >-
            A human-readable name based on the `normalizedPayee` name of the
            transactions for this income stream
          example: none
        status:
          $ref: '#/components/schemas/ActiveStatus'
        confidence:
          type: integer
          description: >-
            Level of confidence that the deposit stream represents income
            (example: 85%)
          format: int32
          example: 70
        cadence:
          $ref: '#/components/schemas/CadenceDetails'
        netMonthly:
          type: array
          items:
            $ref: '#/components/schemas/NetMonthly'
          description: >-
            A list of net monthly records. One instance for each complete
            calendar month in the report.
        netAnnual:
          type: number
          description:
            Sum of all values in `netMonthlyIncome` over the previous 12 months
          example: 110475.7
        projectedNetAnnual:
          type: number
          description: >-
            Projected net income over the next 12 months, across all income
            streams, based on `netAnnualIncome`
          example: 0
        estimatedGrossAnnual:
          type: number
          description: >-
            Before-tax gross annual income (estimated from `netAnnual`) across
            all income stream in the past 12 months
          example: 12321.1
        projectedGrossAnnual:
          type: number
          description: >-
            Projected gross income over the next 12 months, across all active
            income streams, based on `projectedNetAnnual`
          example: 151609
        averageMonthlyIncomeNet:
          type: number
          description: Monthly average amount over the previous 24 months
          example: 9206.31
        incomeStreamMonths:
          type: integer
          description: The number of months the income transactions are observed
          format: int32
          example: 24
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/ReportTransaction'
          description: A list of transaction records
    VOIEWithInterviewData:
      required:
        - txVerifyInterview
      type: object
      properties:
        txVerifyInterview:
          description: An array of `TxVerifyInterview` objects
          type: array
          items:
            $ref: '#/components/schemas/TxVerifyInterview'
        extractEarnings:
          $ref: '#/components/schemas/ExtractEarnings'
        extractDeductions:
          $ref: '#/components/schemas/ExtractDeductions'
        extractDirectDeposit:
          $ref: '#/components/schemas/ExtractDirectDeposit'
    VOIEWithStatementData:
      required:
        - assetIds
      type: object
      properties:
        assetIds:
          description: A list of pay statement asset IDs
          type: array
          items:
            $ref: '#/components/schemas/AssetId'
        extractEarnings:
          $ref: '#/components/schemas/ExtractEarnings'
        extractDeductions:
          $ref: '#/components/schemas/ExtractDeductions'
        extractDirectDeposit:
          $ref: '#/components/schemas/ExtractDirectDeposit'
    VOIEWithTXVerifyReportConstraints:
      required:
        - voieWithInterviewData
      type: object
      properties:
        accountIds:
          $ref: '#/components/schemas/ReportAccountIdsString'
        voieWithInterviewData:
          $ref: '#/components/schemas/VOIEWithInterviewData'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        fromDate:
          $ref: '#/components/schemas/UnixDate'
        incomeStreamConfidenceMinimum:
          $ref: '#/components/schemas/IncomeStreamConfidenceMinimum'
    VOIEWithTXVerifyReportConstraintsOut:
      required:
        - voieWithInterviewData
      type: object
      properties:
        accountIds:
          $ref: '#/components/schemas/ReportAccountIds'
        voieWithInterviewData:
          $ref: '#/components/schemas/VOIEWithInterviewData'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        fromDate:
          $ref: '#/components/schemas/UnixDate'
        incomeStreamConfidenceMinimum:
          $ref: '#/components/schemas/IncomeStreamConfidenceMinimum'
    VOIReport:
      description: A VOI report
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseReportAckWithPortfolioId'
        - type: object
          properties:
            startDate:
              $ref: '#/components/schemas/ReportStartDate'
            endDate:
              $ref: '#/components/schemas/ReportEndDate'
            days:
              type: integer
              description: Number of days covered by the report
              format: int64
              example: 200
            seasoned:
              type: boolean
              description: '"true" if the report covers more than 180 days'
              example: true
            institutions:
              type: array
              items:
                $ref: '#/components/schemas/ReportInstitution'
              description: A list of institution records
            income:
              description: 'Income details'
              type: array
              items:
                $ref: '#/components/schemas/ReportIncomeStreamSummary'
    VOIReportAccount:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the account
          format: int64
          example: 1000023996
        number:
          type: string
          description: >-
            The account number from the institution (all digits except the last
            four are obfuscated)
          example: '1111'
        ownerName:
          type: string
          description: >-
            The name(s) of the account owner(s). This field is optional. If no
            owner information is available, this field will not appear in the
            report.
          example: JOHN DOE
        ownerAddress:
          type: string
          description: >-
            The mailing address of the account owner(s). This field is optional.
            If no owner information is available, this field will not appear in
            the report.
          example: '924 GAINSVILLE HIGHWAY SUITE 130 BUFORD, GA 30518'
        name:
          type: string
          description: The account name from the institution
          example: Checking
        type:
          type: string
          description: One of the values from account types
          example: checking
        aggregationStatusCode:
          type: integer
          description: The status of the most recent aggregation attempt
          format: int32
          example: 0
        incomeStreams:
          type: array
          items:
            $ref: '#/components/schemas/VOIReportIncomeStream'
          description: A list of income stream records
        balance:
          type: number
          description: The cleared balance of the account as-of `balanceDate`
          example: 714.16
        averageMonthlyBalance:
          type: number
          description: The average monthly balance of this account
          example: 720.75
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/ReportTransaction'
          description: a list of transaction records
        availableBalance:
          type: number
          description: The available balance for the account
          example: 714.16
        currentBalance:
          type: number
          description: Current balance of the account
          example: 714.16
        beginningBalance:
          type: number
          description:
            Beginning balance of account per the time period in the report
          example: 714.77
        miscDeposits:
          maxItems: 100
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/ReportTransaction'
          description: A list of miscellaneous deposits
    VOIReportAck:
      required:
        - id
        - portfolioId
        - customerType
        - customerId
        - requestId
        - requesterName
        - createdDate
        - title
        - consumerId
        - consumerSsn
        - type
        - status
        - constraints
      allOf:
        - $ref: '#/components/schemas/BaseReportAckWithPortfolioId'
        - type: object
          properties:
            constraints:
              $ref: '#/components/schemas/VOIReportConstraintsOut'
    VOIReportConstraints:
      type: object
      properties:
        accountIds:
          $ref: '#/components/schemas/ReportAccountIdsString'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        fromDate:
          $ref: '#/components/schemas/UnixDate'
        incomeStreamConfidenceMinimum:
          $ref: '#/components/schemas/IncomeStreamConfidenceMinimum'
    VOIReportConstraintsOut:
      type: object
      properties:
        accountIds:
          $ref: '#/components/schemas/ReportAccountIds'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        fromDate:
          $ref: '#/components/schemas/UnixDate'
        incomeStreamConfidenceMinimum:
          $ref: '#/components/schemas/IncomeStreamConfidenceMinimum'
    VOIReportIncomeStream:
      type: object
      required:
        - id
        - name
        - status
        - estimateInclusion
        - confidence
        - cadence
        - transactions
      properties:
        id:
          type: string
          description: Income stream ID
          example: dens28i3vsch-voi1
        name:
          type: string
          description: >-
            A human-readable name based on the `normalizedPayee` name of the
            transactions for this income stream
          example: none
        status:
          $ref: '#/components/schemas/ActiveStatus'
        estimateInclusion:
          $ref: '#/components/schemas/EstimateInclusion'
        confidence:
          type: integer
          description: >-
            Level of confidence that the deposit stream represents income
            (example: 85%)
          format: int32
          example: 70
        cadence:
          $ref: '#/components/schemas/CadenceDetails'
        netMonthly:
          type: array
          items:
            $ref: '#/components/schemas/NetMonthly'
          description: >-
            A list of net monthly records. One instance for each complete
            calendar month in the report.
        netAnnual:
          type: number
          description:
            Sum of all values in `netMonthlyIncome` over the previous 12 months
          example: 110475.7
        projectedNetAnnual:
          type: number
          description: >-
            Projected net income over the next 12 months, across all income
            streams, based on `netAnnualIncome`
          example: 0
        estimatedGrossAnnual:
          type: number
          description: >-
            Before-tax gross annual income (estimated from `netAnnual`) across
            all income stream in the past 12 months
          example: 12321.1
        projectedGrossAnnual:
          type: number
          description: >-
            Projected gross income over the next 12 months, across all active
            income streams, based on `projectedNetAnnual`
          example: 151609
        averageMonthlyIncomeNet:
          type: number
          description: Monthly average amount over the previous 24 months
          example: 9206.31
        incomeStreamMonths:
          type: integer
          description: The number of months the income transactions are observed
          format: int32
          example: 18
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/ReportTransaction'
          description: A list of transaction records
    VerifiedMicroDeposit:
      type: object
      properties:
        status:
          type: string
          example: Verified
          description: Micro entries successful verification status
        statusDescription:
          type: string
          example: Micro entries are successfully verified
          description: Micro entries successful verification description
    Warnings:
      type: string
      description: >-
        Array of warnings. [Generalsyntaxerror,Invalidusernamesyntax,Missing
        country_code,Input postal code was corrected]
      example: Test warnings
    Webhook:
      type: string
      description: >-
        The publicly available URL you want to be notified with events as the
        user progresses through the application. See [Connect Webhook
        Event](https://docs.finicity.com/connect-and-mvs-webhooks/) for event
        details.
      example: 'https://webhook.site/8d4421a7-d1d1-4f01-bb08-5370aff0321b'
    WebhookContentType:
      type: string
      description: >-
        The content type the webhook events will be sent in. Supported types:
        "application/json" and "application/xml".
      default: application/json
      example: application/json
    WebhookData:
      type: object
      description: >-
        Allows additional identifiable information to be inserted into the
        payload of connect webhook events. See: [Custom
        Webhooks](https://docs.finicity.com/custom-webhooks/).
    WebhookHeaders:
      type: object
      description: >-
        Allows additional identifiable information to be included as headers of
        connect webhook event. See: [Custom
        Webhooks](https://docs.finicity.com/custom-webhooks/).
    WithInsights:
      type: boolean
      description: If Identity Insights data must be returned or not
      example: true
    ZipCode:
      type: string
      description: A ZIP code
      example: '84123'
